!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	cocos2d/CCParticleSystem.h	/^		} A;$/;"	m	union:sCCParticle::__anon26	typeref:struct:sCCParticle::__anon26::__anon27
ADJUST_SQRT2	external/Tremor/floor0.c	/^static long ADJUST_SQRT2[2]={8192,5792};$/;"	v	file:
APPLY_FORCE_H	external/Box2d/Testbed/Tests/ApplyForce.h	20;"	d
Action	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void Action()$/;"	f	class:DynamicTreeTest
Actor	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	struct Actor$/;"	s	class:DynamicTreeTest
ActorSingularity	external/Chipmunk/Demo/MagnetsElectric.c	/^typedef struct ActorSingularity{$/;"	s	file:
Add	external/Box2d/Box2D/Dynamics/b2Island.h	/^	void Add(b2Body* body)$/;"	f	class:b2Island
Add	external/Box2d/Box2D/Dynamics/b2Island.h	/^	void Add(b2Contact* contact)$/;"	f	class:b2Island
Add	external/Box2d/Box2D/Dynamics/b2Island.h	/^	void Add(b2Joint* joint)$/;"	f	class:b2Island
AddPair	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^void b2ContactManager::AddPair(void* proxyUserDataA, void* proxyUserDataB)$/;"	f	class:b2ContactManager
AddSpringForce	external/Box2d/Testbed/Tests/ElasticBody.h	/^   void AddSpringForce(b2Body& bA, b2Vec2& localA, b2Body& bB, b2Vec2& localB, float32 k, float32 friction, float32 desiredDist)$/;"	f	class:ElasticBody
AddType	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^void b2Contact::AddType(b2ContactCreateFcn* createFcn, b2ContactDestroyFcn* destoryFcn,$/;"	f	class:b2Contact
Advance	external/Box2d/Box2D/Common/b2Math.h	/^inline void b2Sweep::Advance(float32 t)$/;"	f	class:b2Sweep
Advance	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::Advance(float32 t)$/;"	f	class:b2Body
Allocate	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^void* b2BlockAllocator::Allocate(int32 size)$/;"	f	class:b2BlockAllocator
Allocate	external/Box2d/Box2D/Common/b2StackAllocator.cpp	/^void* b2StackAllocator::Allocate(int32 size)$/;"	f	class:b2StackAllocator
AllocateNode	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^int32 b2DynamicTree::AllocateNode()$/;"	f	class:b2DynamicTree
AppendFlags	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.cpp	/^void b2DebugDraw::AppendFlags(uint32 flags)$/;"	f	class:b2DebugDraw
ApplyAngularImpulse	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::ApplyAngularImpulse(float32 impulse)$/;"	f	class:b2Body
ApplyForce	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::ApplyForce(const b2Vec2& force, const b2Vec2& point)$/;"	f	class:b2Body
ApplyForce	external/Box2d/Testbed/Tests/ApplyForce.h	/^	ApplyForce()$/;"	f	class:ApplyForce
ApplyForce	external/Box2d/Testbed/Tests/ApplyForce.h	/^class ApplyForce : public Test$/;"	c
ApplyLinearImpulse	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::ApplyLinearImpulse(const b2Vec2& impulse, const b2Vec2& point)$/;"	f	class:b2Body
ApplyTorque	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::ApplyTorque(float32 torque)$/;"	f	class:b2Body
AudioVisualization_FilterSmoothing	CocosDenshion/TestsAndDemos/FancyRatMeteringDemo/Classes/AudioVisualization.h	18;"	d
B	cocos2d/CCParticleSystem.h	/^		} B;$/;"	m	union:sCCParticle::__anon26	typeref:struct:sCCParticle::__anon26::__anon28
B2_BLOCK_ALLOCATOR_H	external/Box2d/Box2D/Common/b2BlockAllocator.h	20;"	d
B2_BODY_H	external/Box2d/Box2D/Dynamics/b2Body.h	20;"	d
B2_BROAD_PHASE_H	external/Box2d/Box2D/Collision/b2BroadPhase.h	20;"	d
B2_CIRCLE_CONTACT_H	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.h	20;"	d
B2_CIRCLE_SHAPE_H	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	20;"	d
B2_COLLISION_H	external/Box2d/Box2D/Collision/b2Collision.h	20;"	d
B2_CONTACT_H	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	20;"	d
B2_CONTACT_MANAGER_H	external/Box2d/Box2D/Dynamics/b2ContactManager.h	20;"	d
B2_CONTACT_SOLVER_H	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	20;"	d
B2_DEBUG_SOLVER	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	26;"	d	file:
B2_DISTANCE_H	external/Box2d/Box2D/Collision/b2Distance.h	21;"	d
B2_DISTANCE_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	20;"	d
B2_DYNAMIC_TREE_H	external/Box2d/Box2D/Collision/b2DynamicTree.h	20;"	d
B2_FIXTURE_H	external/Box2d/Box2D/Dynamics/b2Fixture.h	20;"	d
B2_FRICTION_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	20;"	d
B2_GEAR_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	20;"	d
B2_ISLAND_H	external/Box2d/Box2D/Dynamics/b2Island.h	20;"	d
B2_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	20;"	d
B2_LINE_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	20;"	d
B2_MATH_H	external/Box2d/Box2D/Common/b2Math.h	20;"	d
B2_MOUSE_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	20;"	d
B2_NOT_USED	external/Box2d/Box2D/Common/b2Settings.h	25;"	d
B2_NULL_CONTACT_H	external/Box2d/Box2D/Dynamics/Contacts/b2NullContact.h	20;"	d
B2_POLYGON_AND_CIRCLE_CONTACT_H	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.h	20;"	d
B2_POLYGON_CONTACT_H	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.h	20;"	d
B2_POLYGON_SHAPE_H	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	20;"	d
B2_PRISMATIC_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	20;"	d
B2_PULLEY_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	20;"	d
B2_REVOLUTE_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	20;"	d
B2_SETTINGS_H	external/Box2d/Box2D/Common/b2Settings.h	20;"	d
B2_SHAPE_H	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	20;"	d
B2_STACK_ALLOCATOR_H	external/Box2d/Box2D/Common/b2StackAllocator.h	20;"	d
B2_TIME_OF_IMPACT_H	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	20;"	d
B2_TIME_STEP_H	external/Box2d/Box2D/Dynamics/b2TimeStep.h	20;"	d
B2_TOI_SOLVER_H	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.h	20;"	d
B2_WELD_JOINT_H	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	20;"	d
B2_WORLD_CALLBACKS_H	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	20;"	d
B2_WORLD_H	external/Box2d/Box2D/Dynamics/b2World.h	20;"	d
BALL_TYPE	external/Chipmunk/Demo/Sensors.c	/^	BALL_TYPE,$/;"	e	enum:__anon49	file:
BCA	cocos2d/CCBlockSupport.h	42;"	d
BLOCKING_SENSOR_TYPE	external/Chipmunk/Demo/Sensors.c	/^	BLOCKING_SENSOR_TYPE,$/;"	e	enum:__anon49	file:
BLOCK_COPY	cocos2d/CCBlockSupport.h	34;"	d
BLOCK_RETAIN	cocos2d/CCBlockSupport.h	38;"	d
BODY_COLOR	external/Chipmunk/Demo/drawSpace.c	47;"	d	file:
BODY_TYPES_H	external/Box2d/Testbed/Tests/BodyTypes.h	20;"	d
BOX2D_H	external/Box2d/Box2D/Box2D.h	20;"	d
BREAKABLE_TEST_H	external/Box2d/Testbed/Tests/Breakable.h	20;"	d
BRIDGE_H	external/Box2d/Testbed/Tests/Bridge.h	20;"	d
BYTE_ORDER	external/Tremor/os.h	45;"	d
BeginContact	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual void BeginContact(b2Contact* contact) { B2_NOT_USED(contact); }$/;"	f	class:b2ContactListener
BeginContact	external/Box2d/Testbed/Framework/Test.h	/^	virtual void BeginContact(b2Contact* contact) { B2_NOT_USED(contact); }$/;"	f	class:Test
BeginContact	external/Box2d/Testbed/Tests/SensorTest.h	/^	void BeginContact(b2Contact* contact)$/;"	f	class:SensorTest
BeginContact	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		virtual void BeginContact(b2Contact* contact) { B2_NOT_USED(contact); }$/;"	f	class:Test
BodyTypes	external/Box2d/Testbed/Tests/BodyTypes.h	/^	BodyTypes()$/;"	f	class:BodyTypes
BodyTypes	external/Box2d/Testbed/Tests/BodyTypes.h	/^class BodyTypes : public Test$/;"	c
Bounce	external/Chipmunk/Demo/Bounce.c	/^const chipmunkDemo Bounce = {$/;"	v
Break	external/Box2d/Testbed/Tests/Breakable.h	/^	void Break()$/;"	f	class:Breakable
Breakable	external/Box2d/Testbed/Tests/Breakable.h	/^	Breakable()$/;"	f	class:Breakable
Breakable	external/Box2d/Testbed/Tests/Breakable.h	/^class Breakable : public Test$/;"	c
Bridge	external/Box2d/Testbed/Tests/Bridge.h	/^	Bridge()$/;"	f	class:Bridge
Bridge	external/Box2d/Testbed/Tests/Bridge.h	/^class Bridge : public Test$/;"	c
BufferMove	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^void b2BroadPhase::BufferMove(int32 proxyId)$/;"	f	class:b2BroadPhase
Bytes	external/Chipmunk/include/chipmunk/chipmunk.h	/^			unsigned __int8 Bytes[4];$/;"	m	union:MSVC_EVIL_FLOAT_HACK
CALL_EAGL_FUNCTION	cocos2d/Support/OpenGL_Internal.h	68;"	d
CANTILEVER_H	external/Box2d/Testbed/Tests/Cantilever.h	20;"	d
CATCH_SENSOR_TYPE	external/Chipmunk/Demo/Sensors.c	/^	CATCH_SENSOR_TYPE,$/;"	e	enum:__anon49	file:
CCARRAYDATA_FOREACH	cocos2d/Support/ccCArray.h	51;"	d
CCARRAY_FOREACH	cocos2d/Support/CCArray.h	44;"	d
CCDeviceOrientationLandscapeLeft	cocos2d/CCDirector.h	/^	CCDeviceOrientationLandscapeLeft = kCCDeviceOrientationLandscapeLeft,$/;"	e	enum:__anon39
CCDeviceOrientationLandscapeRight	cocos2d/CCDirector.h	/^	CCDeviceOrientationLandscapeRight = kCCDeviceOrientationLandscapeRight,$/;"	e	enum:__anon39
CCDeviceOrientationPortrait	cocos2d/CCDirector.h	/^	CCDeviceOrientationPortrait = kCCDeviceOrientationPortrait,$/;"	e	enum:__anon39
CCDeviceOrientationPortraitUpsideDown	cocos2d/CCDirector.h	/^	CCDeviceOrientationPortraitUpsideDown = kCCDeviceOrientationPortraitUpsideDown,$/;"	e	enum:__anon39
CCDirectorProjection2D	cocos2d/CCDirector.h	/^	CCDirectorProjection2D = kCCDirectorProjection2D,$/;"	e	enum:__anon37
CCDirectorProjection3D	cocos2d/CCDirector.h	/^	CCDirectorProjection3D = kCCDirectorProjection3D,$/;"	e	enum:__anon37
CCDirectorProjectionCustom	cocos2d/CCDirector.h	/^	CCDirectorProjectionCustom = kCCDirectorProjectionCustom,$/;"	e	enum:__anon37
CCDirectorTypeDefault	cocos2d/CCDirector.h	/^	CCDirectorTypeDefault =kCCDirectorTypeDefault,$/;"	e	enum:__anon38
CCDirectorTypeDisplayLink	cocos2d/CCDirector.h	/^	CCDirectorTypeDisplayLink = kCCDirectorTypeDisplayLink,$/;"	e	enum:__anon38
CCDirectorTypeMainLoop	cocos2d/CCDirector.h	/^	CCDirectorTypeMainLoop = kCCDirectorTypeMainLoop,$/;"	e	enum:__anon38
CCDirectorTypeNSTimer	cocos2d/CCDirector.h	/^	CCDirectorTypeNSTimer = kCCDirectorTypeNSTimer,$/;"	e	enum:__anon38
CCDirectorTypeThreadMainLoop	cocos2d/CCDirector.h	/^	CCDirectorTypeThreadMainLoop = kCCDirectorTypeThreadMainLoop,$/;"	e	enum:__anon38
CCLOG	cocos2d/ccMacros.h	48;"	d
CCLOG	cocos2d/ccMacros.h	53;"	d
CCLOG	cocos2d/ccMacros.h	58;"	d
CCLOGERROR	cocos2d/ccMacros.h	50;"	d
CCLOGERROR	cocos2d/ccMacros.h	54;"	d
CCLOGERROR	cocos2d/ccMacros.h	59;"	d
CCLOGINFO	cocos2d/ccMacros.h	49;"	d
CCLOGINFO	cocos2d/ccMacros.h	55;"	d
CCLOGINFO	cocos2d/ccMacros.h	60;"	d
CCProgressTimerType	cocos2d/CCProgressTimer.h	/^} CCProgressTimerType;$/;"	t	typeref:enum:__anon41
CCRANDOM_0_1	cocos2d/ccMacros.h	80;"	d
CCRANDOM_MINUS1_1	cocos2d/ccMacros.h	75;"	d
CCSpriteIndexNotInitialized	cocos2d/CCSprite.h	/^	CCSpriteIndexNotInitialized = 0xffffffff,$/;"	e	enum:__anon42
CCTMXOrientationHex	cocos2d/CCTMXTiledMap.h	/^	CCTMXOrientationHex,$/;"	e	enum:__anon33
CCTMXOrientationIso	cocos2d/CCTMXTiledMap.h	/^	CCTMXOrientationIso,$/;"	e	enum:__anon33
CCTMXOrientationOrtho	cocos2d/CCTMXTiledMap.h	/^	CCTMXOrientationOrtho,$/;"	e	enum:__anon33
CCTexture2DPixelFormat	cocos2d/CCTexture2D.h	/^} CCTexture2DPixelFormat;$/;"	t	typeref:enum:__anon45
CC_ARRAY_H	cocos2d/Support/ccCArray.h	39;"	d
CC_BITMAPFONTATLAS_DEBUG_DRAW	cocos2d/ccConfig.h	152;"	d
CC_BLEND_DST	cocos2d/ccMacros.h	100;"	d
CC_BLEND_SRC	cocos2d/ccMacros.h	95;"	d
CC_CALLBACK_ND	cocos2d/CCInstantAction.h	/^typedef void (*CC_CALLBACK_ND)(id, SEL, id, void *);$/;"	t
CC_COCOSNODE_RENDER_SUBPIXEL	cocos2d/ccConfig.h	76;"	d
CC_COMPATIBILITY_WITH_0_8	cocos2d/ccConfig.h	178;"	d
CC_DEGREES_TO_RADIANS	cocos2d/ccMacros.h	85;"	d
CC_DIRECTOR_DISPATCH_FAST_EVENTS	cocos2d/ccConfig.h	68;"	d
CC_DIRECTOR_END	cocos2d/ccMacros.h	171;"	d
CC_DIRECTOR_FAST_FPS	cocos2d/ccConfig.h	47;"	d
CC_DIRECTOR_FPS_INTERVAL	cocos2d/ccConfig.h	56;"	d
CC_DIRECTOR_INIT	cocos2d/ccMacros.h	147;"	d
CC_DISABLE_DEFAULT_GL_STATES	cocos2d/ccMacros.h	123;"	d
CC_ENABLE_DEFAULT_GL_STATES	cocos2d/ccMacros.h	109;"	d
CC_ENABLE_PROFILERS	cocos2d/ccConfig.h	169;"	d
CC_FONT_LABEL_SUPPORT	cocos2d/ccConfig.h	38;"	d
CC_HONOR_PARENT_TRANSFORM_ALL	cocos2d/CCSprite.h	/^	CC_HONOR_PARENT_TRANSFORM_ALL		=  CC_HONOR_PARENT_TRANSFORM_TRANSLATE | CC_HONOR_PARENT_TRANSFORM_ROTATE | CC_HONOR_PARENT_TRANSFORM_SCALE,$/;"	e	enum:__anon43
CC_HONOR_PARENT_TRANSFORM_ROTATE	cocos2d/CCSprite.h	/^	CC_HONOR_PARENT_TRANSFORM_ROTATE	=  1 << 1,$/;"	e	enum:__anon43
CC_HONOR_PARENT_TRANSFORM_SCALE	cocos2d/CCSprite.h	/^	CC_HONOR_PARENT_TRANSFORM_SCALE		=  1 << 2,$/;"	e	enum:__anon43
CC_HONOR_PARENT_TRANSFORM_TRANSLATE	cocos2d/CCSprite.h	/^	CC_HONOR_PARENT_TRANSFORM_TRANSLATE =  1 << 0,$/;"	e	enum:__anon43
CC_LABELATLAS_DEBUG_DRAW	cocos2d/ccConfig.h	160;"	d
CC_MAX_PARTICLE_SIZE	cocos2d/CCPointParticleSystem.h	29;"	d
CC_NODE_TRANSFORM_USING_AFFINE_MATRIX	cocos2d/ccConfig.h	107;"	d
CC_RADIANS_TO_DEGREES	cocos2d/ccMacros.h	90;"	d
CC_SPRITESHEET_DEBUG_DRAW	cocos2d/ccConfig.h	144;"	d
CC_SPRITESHEET_RENDER_SUBPIXEL	cocos2d/ccConfig.h	84;"	d
CC_SPRITE_DEBUG_DRAW	cocos2d/ccConfig.h	136;"	d
CC_SWAP	cocos2d/ccMacros.h	66;"	d
CC_TEXTURE_ATLAS_USES_VBO	cocos2d/ccConfig.h	93;"	d
CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP	cocos2d/ccConfig.h	116;"	d
CC_TEXTURE_NPOT_SUPPORT	cocos2d/ccConfig.h	128;"	d
CC_UPDATE_PARTICLE_IMP	cocos2d/CCParticleSystem.h	/^typedef void (*CC_UPDATE_PARTICLE_IMP)(id, SEL, tCCParticle*, CGPoint);$/;"	t
CDLOG	CocosDenshion/CocosDenshion/CocosDenshion.h	77;"	d
CDLOG	CocosDenshion/CocosDenshion/CocosDenshion.h	81;"	d
CDLOG	CocosDenshion/CocosDenshion/CocosDenshion.h	85;"	d
CDLOGINFO	CocosDenshion/CocosDenshion/CocosDenshion.h	78;"	d
CDLOGINFO	CocosDenshion/CocosDenshion/CocosDenshion.h	82;"	d
CDLOGINFO	CocosDenshion/CocosDenshion/CocosDenshion.h	86;"	d
CDL_DELETE	cocos2d/Support/utlist.h	459;"	d
CDL_FOREACH	cocos2d/Support/utlist.h	470;"	d
CDL_FOREACH_SAFE	cocos2d/Support/utlist.h	473;"	d
CDL_PREPEND	cocos2d/Support/utlist.h	445;"	d
CDL_SEARCH	cocos2d/Support/utlist.h	485;"	d
CDL_SEARCH_SCALAR	cocos2d/Support/utlist.h	478;"	d
CDL_SORT	cocos2d/Support/utlist.h	217;"	d
CD_BS_EMPTY	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	CD_BS_EMPTY = 0,$/;"	e	enum:bufferState
CD_BS_FAILED	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	CD_BS_FAILED = 2$/;"	e	enum:bufferState
CD_BS_LOADED	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	CD_BS_LOADED = 1,$/;"	e	enum:bufferState
CD_BUFFERS_INCREMENT	CocosDenshion/CocosDenshion/CDConfig.h	39;"	d
CD_BUFFERS_START	CocosDenshion/CocosDenshion/CDConfig.h	37;"	d
CD_IGNORE_AUDIO_SESSION	CocosDenshion/CocosDenshion/CocosDenshion.h	95;"	d
CD_MUTE	CocosDenshion/CocosDenshion/CocosDenshion.h	96;"	d
CD_NO_SOUND	CocosDenshion/CocosDenshion/CocosDenshion.h	97;"	d
CD_NO_SOURCE	CocosDenshion/CocosDenshion/CocosDenshion.h	94;"	d
CD_SAMPLE_RATE_BASIC	CocosDenshion/CocosDenshion/CocosDenshion.h	102;"	d
CD_SAMPLE_RATE_DEFAULT	CocosDenshion/CocosDenshion/CocosDenshion.h	103;"	d
CD_SAMPLE_RATE_HIGH	CocosDenshion/CocosDenshion/CocosDenshion.h	99;"	d
CD_SAMPLE_RATE_LOW	CocosDenshion/CocosDenshion/CocosDenshion.h	101;"	d
CD_SAMPLE_RATE_MID	CocosDenshion/CocosDenshion/CocosDenshion.h	100;"	d
CD_SOURCE_LIMIT	CocosDenshion/CocosDenshion/CocosDenshion.h	93;"	d
CGROUP_IMPACT_EFFECTS	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	15;"	d
CGROUP_PROJECTILE_EFFECTS	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	14;"	d
CGROUP_TOTAL	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	16;"	d
CHAIN_H	external/Box2d/Testbed/Tests/Chain.h	20;"	d
CHARACTER_COLLISION_H	external/Box2d/Testbed/Tests/CharacterCollision.h	20;"	d
CHECK	external/libpng/pngconf.h	1613;"	d
CHECK_GL_ERROR	cocos2d/Support/OpenGL_Internal.h	70;"	d
CHIPMUNK_HEADER	external/Chipmunk/include/chipmunk/chipmunk.h	23;"	d
CHIPMUNK_UNSAFE_HEADER	external/Chipmunk/include/chipmunk/chipmunk_unsafe.h	36;"	d
CHUNKSIZE	external/Tremor/ivorbisfile.h	29;"	d
CLIP_TO_15	external/Tremor/asm_arm.h	/^static inline ogg_int32_t CLIP_TO_15(ogg_int32_t x) {$/;"	f
CLIP_TO_15	external/Tremor/misc.h	/^STIN ogg_int32_t CLIP_TO_15(ogg_int32_t x) {$/;"	f
COCOS2D_VERSION	cocos2d/cocos2d.h	42;"	d
COCOSDENSHION_VERSION	CocosDenshion/CocosDenshion/CDConfig.h	24;"	d
COCOSLIVE_VERSION	cocoslive/cocoslive.h	30;"	d
COLLISION_COLOR	external/Chipmunk/Demo/drawSpace.c	46;"	d	file:
COLLISION_FILTERING_H	external/Box2d/Testbed/Tests/CollisionFiltering.h	20;"	d
COLLISION_PROCESSING_H	external/Box2d/Testbed/Tests/CollisionProcessing.h	20;"	d
COMPOUND_SHAPES_H	external/Box2d/Testbed/Tests/CompoundShapes.h	20;"	d
CONFINED_H	external/Box2d/Testbed/Tests/Confined.h	20;"	d
CONTINUOUS_TEST_H	external/Box2d/Testbed/Tests/ContinuousTest.h	20;"	d
COS_LOOKUP_I	external/Tremor/lsp_lookup.h	/^static const ogg_int32_t COS_LOOKUP_I[COS_LOOKUP_I_SZ+1]={$/;"	v
COS_LOOKUP_I_MASK	external/Tremor/lsp_lookup.h	93;"	d
COS_LOOKUP_I_SHIFT	external/Tremor/lsp_lookup.h	92;"	d
COS_LOOKUP_I_SZ	external/Tremor/lsp_lookup.h	94;"	d
COU_MKS	external/Chipmunk/Demo/MagnetsElectric.c	21;"	d	file:
CP_ALL_LAYERS	external/Chipmunk/include/chipmunk/chipmunk_types.h	79;"	d
CP_ARBITER_GET_SHAPES	external/Chipmunk/include/chipmunk/cpArbiter.h	117;"	d
CP_BUFFER_BYTES	external/Chipmunk/include/chipmunk/chipmunk.h	101;"	d
CP_CIRCLE_SHAPE	external/Chipmunk/include/chipmunk/cpShape.h	/^	CP_CIRCLE_SHAPE,$/;"	e	enum:cpShapeType
CP_CONTACTS_BUFFER_SIZE	external/Chipmunk/src/cpSpace.c	119;"	d	file:
CP_DeclareShapeGetter	external/Chipmunk/include/chipmunk/cpShape.h	110;"	d
CP_DefineBodyGetter	external/Chipmunk/include/chipmunk/cpBody.h	86;"	d
CP_DefineBodyProperty	external/Chipmunk/include/chipmunk/cpBody.h	89;"	d
CP_DefineBodySetter	external/Chipmunk/include/chipmunk/cpBody.h	87;"	d
CP_DefineClassGetter	external/Chipmunk/include/chipmunk/constraints/util.h	22;"	d
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^CP_DefineClassGetter(cpDampedRotarySpring)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpDampedSpring.c	/^CP_DefineClassGetter(cpDampedSpring)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpGearJoint.c	/^CP_DefineClassGetter(cpGearJoint)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^CP_DefineClassGetter(cpGrooveJoint)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpPivotJoint.c	/^CP_DefineClassGetter(cpPivotJoint)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^CP_DefineClassGetter(cpRatchetJoint)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^CP_DefineClassGetter(cpRotaryLimitJoint)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^CP_DefineClassGetter(cpSimpleMotor)$/;"	f
CP_DefineClassGetter	external/Chipmunk/src/constraints/cpSlideJoint.c	/^CP_DefineClassGetter(cpSlideJoint)$/;"	f
CP_DefineConstraintGetter	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	64;"	d
CP_DefineConstraintProperty	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	78;"	d
CP_DefineConstraintSetter	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	71;"	d
CP_DefineShapeGetter	external/Chipmunk/src/cpShape.c	/^CP_DefineShapeGetter(cpCircleShape, cpVect, c, Offset)$/;"	f
CP_DefineShapeGetter	external/Chipmunk/src/cpShape.c	/^CP_DefineShapeGetter(cpSegmentShape, cpVect, a, A)$/;"	f
CP_DefineShapeGetter	external/Chipmunk/src/cpShape.c	29;"	d	file:
CP_HASH_COEF	external/Chipmunk/include/chipmunk/chipmunk.h	125;"	d
CP_HASH_PAIR	external/Chipmunk/include/chipmunk/chipmunk.h	126;"	d
CP_MAX_CONTACTS_PER_ARBITER	external/Chipmunk/include/chipmunk/cpSpace.h	45;"	d
CP_NO_GROUP	external/Chipmunk/include/chipmunk/chipmunk_types.h	75;"	d
CP_NUM_SHAPES	external/Chipmunk/include/chipmunk/cpShape.h	/^	CP_NUM_SHAPES$/;"	e	enum:cpShapeType
CP_POLY_SHAPE	external/Chipmunk/include/chipmunk/cpShape.h	/^	CP_POLY_SHAPE,$/;"	e	enum:cpShapeType
CP_SEGMENT_SHAPE	external/Chipmunk/include/chipmunk/cpShape.h	/^	CP_SEGMENT_SHAPE,$/;"	e	enum:cpShapeType
CP_USE_DOUBLES	external/Chipmunk/include/chipmunk/chipmunk_types.h	10;"	d
CP_USE_DOUBLES	external/Chipmunk/include/chipmunk/chipmunk_types.h	7;"	d
CVT_PTR	external/libpng/pngconf.h	1615;"	d
CVT_PTR	external/libpng/pngconf.h	1623;"	d
CVT_PTR_NOCHECK	external/libpng/pngconf.h	1616;"	d
CVT_PTR_NOCHECK	external/libpng/pngconf.h	1624;"	d
Cantilever	external/Box2d/Testbed/Tests/Cantilever.h	/^	Cantilever()$/;"	f	class:Cantilever
Cantilever	external/Box2d/Testbed/Tests/Cantilever.h	/^class Cantilever : public Test$/;"	c
Chain	external/Box2d/Testbed/Tests/Chain.h	/^	Chain()$/;"	f	class:Chain
Chain	external/Box2d/Testbed/Tests/Chain.h	/^class Chain : public Test$/;"	c
CharacterCollision	external/Box2d/Testbed/Tests/CharacterCollision.h	/^	CharacterCollision()$/;"	f	class:CharacterCollision
CharacterCollision	external/Box2d/Testbed/Tests/CharacterCollision.h	/^class CharacterCollision : public Test$/;"	c
ChargedBodyUpdatePositionVerlet	external/Chipmunk/Demo/MagnetsElectric.c	/^ChargedBodyUpdatePositionVerlet(cpBody *body, cpFloat dt)$/;"	f	file:
ChargedBodyUpdateVelocityVerlet	external/Chipmunk/Demo/MagnetsElectric.c	/^ChargedBodyUpdateVelocityVerlet(cpBody *body, cpVect gravity, cpFloat damping, cpFloat dt)$/;"	f	file:
Clear	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^void b2BlockAllocator::Clear()$/;"	f	class:b2BlockAllocator
Clear	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^void b2TOISolver::Clear()$/;"	f	class:b2TOISolver
Clear	external/Box2d/Box2D/Dynamics/b2Island.h	/^	void Clear()$/;"	f	class:b2Island
ClearFlags	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.cpp	/^void b2DebugDraw::ClearFlags(uint32 flags)$/;"	f	class:b2DebugDraw
ClearForces	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::ClearForces()$/;"	f	class:b2World
Clone	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.cpp	/^b2Shape* b2CircleShape::Clone(b2BlockAllocator* allocator) const$/;"	f	class:b2CircleShape
Clone	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^b2Shape* b2PolygonShape::Clone(b2BlockAllocator* allocator) const$/;"	f	class:b2PolygonShape
Collide	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^void b2ContactManager::Collide()$/;"	f	class:b2ContactManager
CollisionFiltering	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^	CollisionFiltering()$/;"	f	class:CollisionFiltering
CollisionFiltering	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^class CollisionFiltering : public Test$/;"	c
CollisionProcessing	external/Box2d/Testbed/Tests/CollisionProcessing.h	/^	CollisionProcessing()$/;"	f	class:CollisionProcessing
CollisionProcessing	external/Box2d/Testbed/Tests/CollisionProcessing.h	/^class CollisionProcessing : public Test$/;"	c
CollisionTypes	external/Chipmunk/Demo/Sensors.c	/^} CollisionTypes;$/;"	v	typeref:enum:__anon49
Combine	external/Box2d/Box2D/Collision/b2Collision.h	/^	void Combine(const b2AABB& aabb1, const b2AABB& aabb2)$/;"	f	struct:b2AABB
CompleteBombSpawn	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::CompleteBombSpawn(const b2Vec2& p)$/;"	f	class:Test
CompoundShapes	external/Box2d/Testbed/Tests/CompoundShapes.h	/^	CompoundShapes()$/;"	f	class:CompoundShapes
CompoundShapes	external/Box2d/Testbed/Tests/CompoundShapes.h	/^class CompoundShapes : public Test$/;"	c
Compute	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline float32 b2Jacobian::Compute(const b2Vec2& x1, float32 a1, const b2Vec2& x2, float32 a2)$/;"	f	class:b2Jacobian
ComputeAABB	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.cpp	/^void b2CircleShape::ComputeAABB(b2AABB* aabb, const b2Transform& transform) const$/;"	f	class:b2CircleShape
ComputeAABB	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^void b2PolygonShape::ComputeAABB(b2AABB* aabb, const b2Transform& xf) const$/;"	f	class:b2PolygonShape
ComputeCentroid	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^static b2Vec2 ComputeCentroid(const b2Vec2* vs, int32 count)$/;"	f	file:
ComputeHeight	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline int32 b2BroadPhase::ComputeHeight() const$/;"	f	class:b2BroadPhase
ComputeHeight	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^int32 b2DynamicTree::ComputeHeight() const$/;"	f	class:b2DynamicTree
ComputeHeight	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^int32 b2DynamicTree::ComputeHeight(int32 nodeId) const$/;"	f	class:b2DynamicTree
ComputeMass	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.cpp	/^void b2CircleShape::ComputeMass(b2MassData* massData, float32 density) const$/;"	f	class:b2CircleShape
ComputeMass	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^void b2PolygonShape::ComputeMass(b2MassData* massData, float32 density) const$/;"	f	class:b2PolygonShape
ComputeTOI	external/Box2d/Box2D/Dynamics/Contacts/b2NullContact.h	/^	float32 ComputeTOI(const b2Sweep& sweepA, const b2Sweep& sweepB) const$/;"	f	class:b2NullContact
Confined	external/Box2d/Testbed/Tests/Confined.h	/^	Confined()$/;"	f	class:Confined
Confined	external/Box2d/Testbed/Tests/Confined.h	/^class Confined : public Test$/;"	c
ContactPoint	external/Box2d/Testbed/Framework/Test.h	/^struct ContactPoint$/;"	s
ContactPoint	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^struct ContactPoint$/;"	s
Contains	external/Box2d/Box2D/Collision/b2Collision.h	/^	bool Contains(const b2AABB& aabb) const$/;"	f	struct:b2AABB
ContinuousTest	external/Box2d/Testbed/Tests/ContinuousTest.h	/^	ContinuousTest()$/;"	f	class:ContinuousTest
ContinuousTest	external/Box2d/Testbed/Tests/ContinuousTest.h	/^class ContinuousTest : public Test$/;"	c
ConvertScreenToWorld	external/Box2d/Testbed/Framework/Main.cpp	/^b2Vec2 ConvertScreenToWorld(int32 x, int32 y)$/;"	f
CoulombForce	external/Chipmunk/Demo/MagnetsElectric.c	/^CoulombForce(ForceData* data){$/;"	f	file:
Create	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.cpp	/^b2Contact* b2CircleContact::Create(b2Fixture* fixtureA, b2Fixture* fixtureB, b2BlockAllocator* allocator)$/;"	f	class:b2CircleContact
Create	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^b2Contact* b2Contact::Create(b2Fixture* fixtureA, b2Fixture* fixtureB, b2BlockAllocator* allocator)$/;"	f	class:b2Contact
Create	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.cpp	/^b2Contact* b2PolygonAndCircleContact::Create(b2Fixture* fixtureA, b2Fixture* fixtureB, b2BlockAllocator* allocator)$/;"	f	class:b2PolygonAndCircleContact
Create	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.cpp	/^b2Contact* b2PolygonContact::Create(b2Fixture* fixtureA, b2Fixture* fixtureB, b2BlockAllocator* allocator)$/;"	f	class:b2PolygonContact
Create	external/Box2d/Box2D/Dynamics/Joints/b2Joint.cpp	/^b2Joint* b2Joint::Create(const b2JointDef* def, b2BlockAllocator* allocator)$/;"	f	class:b2Joint
Create	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::Create(b2BlockAllocator* allocator, b2Body* body, const b2FixtureDef* def)$/;"	f	class:b2Fixture
Create	external/Box2d/Testbed/Tests/ApplyForce.h	/^	static Test* Create()$/;"	f	class:ApplyForce
Create	external/Box2d/Testbed/Tests/BodyTypes.h	/^	static Test* Create()$/;"	f	class:BodyTypes
Create	external/Box2d/Testbed/Tests/Breakable.h	/^	static Test* Create()$/;"	f	class:Breakable
Create	external/Box2d/Testbed/Tests/Bridge.h	/^	static Test* Create()$/;"	f	class:Bridge
Create	external/Box2d/Testbed/Tests/Cantilever.h	/^	static Test* Create()$/;"	f	class:Cantilever
Create	external/Box2d/Testbed/Tests/Chain.h	/^	static Test* Create()$/;"	f	class:Chain
Create	external/Box2d/Testbed/Tests/CharacterCollision.h	/^	static Test* Create()$/;"	f	class:CharacterCollision
Create	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^	static Test* Create()$/;"	f	class:CollisionFiltering
Create	external/Box2d/Testbed/Tests/CollisionProcessing.h	/^	static Test* Create()$/;"	f	class:CollisionProcessing
Create	external/Box2d/Testbed/Tests/CompoundShapes.h	/^	static Test* Create()$/;"	f	class:CompoundShapes
Create	external/Box2d/Testbed/Tests/Confined.h	/^	static Test* Create()$/;"	f	class:Confined
Create	external/Box2d/Testbed/Tests/ContinuousTest.h	/^	static Test* Create()$/;"	f	class:ContinuousTest
Create	external/Box2d/Testbed/Tests/DistanceTest.h	/^	static Test* Create()$/;"	f	class:DistanceTest
Create	external/Box2d/Testbed/Tests/Dominos.h	/^	static Test* Create()$/;"	f	class:Dominos
Create	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	static Test* Create()$/;"	f	class:DynamicTreeTest
Create	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	static Test* Create()$/;"	f	class:EdgeShapes
Create	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	void Create(int32 index)$/;"	f	class:EdgeShapes
Create	external/Box2d/Testbed/Tests/ElasticBody.h	/^	static Test* Create()$/;"	f	class:ElasticBody
Create	external/Box2d/Testbed/Tests/Gears.h	/^	static Test* Create()$/;"	f	class:Gears
Create	external/Box2d/Testbed/Tests/LineJoint.h	/^	static Test* Create()$/;"	f	class:LineJoint
Create	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	static Test* Create()$/;"	f	class:OneSidedPlatform
Create	external/Box2d/Testbed/Tests/PolyCollision.h	/^	static Test* Create()$/;"	f	class:PolyCollision
Create	external/Box2d/Testbed/Tests/PolyShapes.h	/^	static Test* Create()$/;"	f	class:PolyShapes
Create	external/Box2d/Testbed/Tests/PolyShapes.h	/^	void Create(int32 index)$/;"	f	class:PolyShapes
Create	external/Box2d/Testbed/Tests/Prismatic.h	/^	static Test* Create()$/;"	f	class:Prismatic
Create	external/Box2d/Testbed/Tests/Pulleys.h	/^	static Test* Create()$/;"	f	class:Pulleys
Create	external/Box2d/Testbed/Tests/Pyramid.h	/^	static Test* Create()$/;"	f	class:Pyramid
Create	external/Box2d/Testbed/Tests/RayCast.h	/^	static Test* Create()$/;"	f	class:RayCast
Create	external/Box2d/Testbed/Tests/RayCast.h	/^	void Create(int32 index)$/;"	f	class:RayCast
Create	external/Box2d/Testbed/Tests/Revolute.h	/^	static Test* Create()$/;"	f	class:Revolute
Create	external/Box2d/Testbed/Tests/SensorTest.h	/^	static Test* Create()$/;"	f	class:SensorTest
Create	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	static Test* Create()$/;"	f	class:ShapeEditing
Create	external/Box2d/Testbed/Tests/SliderCrank.h	/^	static Test* Create()$/;"	f	class:SliderCrank
Create	external/Box2d/Testbed/Tests/SphereStack.h	/^	static Test* Create()$/;"	f	class:SphereStack
Create	external/Box2d/Testbed/Tests/TheoJansen.h	/^	static Test* Create()$/;"	f	class:TheoJansen
Create	external/Box2d/Testbed/Tests/TimeOfImpact.h	/^	static Test* Create()$/;"	f	class:TimeOfImpact
Create	external/Box2d/Testbed/Tests/VaryingFriction.h	/^	static Test* Create()$/;"	f	class:VaryingFriction
Create	external/Box2d/Testbed/Tests/VaryingRestitution.h	/^	static Test* Create()$/;"	f	class:VaryingRestitution
Create	external/Box2d/Testbed/Tests/VerticalStack.h	/^	static Test* Create()$/;"	f	class:VerticalStack
Create	external/Box2d/Testbed/Tests/Web.h	/^	static Test* Create()$/;"	f	class:Web
CreateBody	external/Box2d/Box2D/Dynamics/b2World.cpp	/^b2Body* b2World::CreateBody(const b2BodyDef* def)$/;"	f	class:b2World
CreateCircle	external/Box2d/Testbed/Tests/Confined.h	/^	void CreateCircle()$/;"	f	class:Confined
CreateFixture	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^b2Fixture* b2Body::CreateFixture(const b2FixtureDef* def)$/;"	f	class:b2Body
CreateFixture	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^b2Fixture* b2Body::CreateFixture(const b2Shape* shape, float32 density)$/;"	f	class:b2Body
CreateJoint	external/Box2d/Box2D/Dynamics/b2World.cpp	/^b2Joint* b2World::CreateJoint(const b2JointDef* def)$/;"	f	class:b2World
CreateLeg	external/Box2d/Testbed/Tests/TheoJansen.h	/^	void CreateLeg(float32 s, const b2Vec2& wheelAnchor)$/;"	f	class:TheoJansen
CreateProxy	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^int32 b2BroadPhase::CreateProxy(const b2AABB& aabb, void* userData)$/;"	f	class:b2BroadPhase
CreateProxy	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^int32 b2DynamicTree::CreateProxy(const b2AABB& aabb, void* userData)$/;"	f	class:b2DynamicTree
CreateProxy	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::CreateProxy(b2BroadPhase* broadPhase, const b2Transform& xf)$/;"	f	class:b2Fixture
CreateProxy	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void CreateProxy()$/;"	f	class:DynamicTreeTest
DATA_TYPE	external/Tremor/mdct.h	24;"	d
DECLTYPE	cocos2d/Support/uthash.h	36;"	d
DECLTYPE	cocos2d/Support/uthash.h	39;"	d
DECLTYPE	cocos2d/Support/uthash.h	42;"	d
DECLTYPE	cocos2d/Support/utlist.h	68;"	d
DECLTYPE	cocos2d/Support/utlist.h	71;"	d
DECLTYPE	cocos2d/Support/utlist.h	74;"	d
DECLTYPE_ASSIGN	cocos2d/Support/uthash.h	46;"	d
DECLTYPE_ASSIGN	cocos2d/Support/uthash.h	52;"	d
DEFAULT_COUNT	external/Chipmunk/src/cpSpace.c	150;"	d	file:
DEFAULT_DIM_SIZE	external/Chipmunk/src/cpSpace.c	149;"	d	file:
DEFAULT_ELASTIC_ITERATIONS	external/Chipmunk/src/cpSpace.c	152;"	d	file:
DEFAULT_ITERATIONS	external/Chipmunk/src/cpSpace.c	151;"	d	file:
DEPRECATED_ATTRIBUTE	cocos2d/CCActionManager.h	/^-(void) pauseAllActionsForTarget:(id)target DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCActionManager.h	/^-(void) resumeAllActionsForTarget:(id)target DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCDirector.h	/^-(BOOL)attachInView:(UIView *)view DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCDirector.h	/^-(BOOL)attachInView:(UIView *)view withFrame:(CGRect)frame DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCDirector.h	/^-(BOOL)attachInWindow:(UIWindow *)window DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCDirector.h	/^-(void) setDepthBufferFormat: (tDepthBufferFormat)db DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCDirector.h	/^-(void) setPixelFormat: (tPixelFormat)p DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCDirector.h	/^@property (nonatomic,readonly) tPixelFormat pixelFormat DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCScheduler.h	/^-(void) scheduleTimer: (CCTimer*) timer DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCScheduler.h	/^-(void) unscheduleTimer: (CCTimer*) timer DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCSprite.h	/^+(id) spriteWithCGImage: (CGImageRef)image DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCSprite.h	/^-(id) initWithCGImage: (CGImageRef)image DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCSpriteFrameCache.h	/^-(CCSprite*) createSpriteWithFrameName:(NSString*)name DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCSpriteSheet.h	/^-(CCSprite*) createSpriteWithRect:(CGRect)rect DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCSpriteSheet.h	/^-(void) initSprite:(CCSprite*)sprite rect:(CGRect)rect DEPRECATED_ATTRIBUTE;$/;"	v
DEPRECATED_ATTRIBUTE	cocos2d/CCTMXTiledMap.h	/^-(CCTMXObjectGroup*) groupNamed:(NSString *)groupName DEPRECATED_ATTRIBUTE;$/;"	v
DISTANCE_TEST_H	external/Box2d/Testbed/Tests/DistanceTest.h	20;"	d
DL_APPEND	cocos2d/Support/utlist.h	399;"	d
DL_DELETE	cocos2d/Support/utlist.h	413;"	d
DL_FOREACH	cocos2d/Support/utlist.h	431;"	d
DL_FOREACH_SAFE	cocos2d/Support/utlist.h	435;"	d
DL_PREPEND	cocos2d/Support/utlist.h	387;"	d
DL_SEARCH	cocos2d/Support/utlist.h	440;"	d
DL_SEARCH_SCALAR	cocos2d/Support/utlist.h	439;"	d
DL_SORT	cocos2d/Support/utlist.h	159;"	d
DOMINOS_H	external/Box2d/Testbed/Tests/Dominos.h	20;"	d
DYNAMIC_TREE_TEST_H	external/Box2d/Testbed/Tests/DynamicTreeTest.h	20;"	d
DataforForce	external/Chipmunk/Demo/MagnetsElectric.c	/^typedef struct DataforForce{$/;"	s	file:
DebugDraw	external/Box2d/Testbed/Framework/Render.h	/^class DebugDraw : public b2DebugDraw$/;"	c
Destroy	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.cpp	/^void b2CircleContact::Destroy(b2Contact* contact, b2BlockAllocator* allocator)$/;"	f	class:b2CircleContact
Destroy	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^void b2Contact::Destroy(b2Contact* contact, b2BlockAllocator* allocator)$/;"	f	class:b2Contact
Destroy	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.cpp	/^void b2PolygonAndCircleContact::Destroy(b2Contact* contact, b2BlockAllocator* allocator)$/;"	f	class:b2PolygonAndCircleContact
Destroy	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.cpp	/^void b2PolygonContact::Destroy(b2Contact* contact, b2BlockAllocator* allocator)$/;"	f	class:b2PolygonContact
Destroy	external/Box2d/Box2D/Dynamics/Joints/b2Joint.cpp	/^void b2Joint::Destroy(b2Joint* joint, b2BlockAllocator* allocator)$/;"	f	class:b2Joint
Destroy	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^void b2ContactManager::Destroy(b2Contact* c)$/;"	f	class:b2ContactManager
Destroy	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::Destroy(b2BlockAllocator* allocator)$/;"	f	class:b2Fixture
DestroyBody	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::DestroyBody(b2Body* b)$/;"	f	class:b2World
DestroyBody	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	void DestroyBody()$/;"	f	class:EdgeShapes
DestroyBody	external/Box2d/Testbed/Tests/PolyShapes.h	/^	void DestroyBody()$/;"	f	class:PolyShapes
DestroyBody	external/Box2d/Testbed/Tests/RayCast.h	/^	void DestroyBody()$/;"	f	class:RayCast
DestroyFixture	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::DestroyFixture(b2Fixture* fixture)$/;"	f	class:b2Body
DestroyJoint	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::DestroyJoint(b2Joint* j)$/;"	f	class:b2World
DestroyProxy	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^void b2BroadPhase::DestroyProxy(int32 proxyId)$/;"	f	class:b2BroadPhase
DestroyProxy	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^void b2DynamicTree::DestroyProxy(int32 proxyId)$/;"	f	class:b2DynamicTree
DestroyProxy	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::DestroyProxy(b2BroadPhase* broadPhase)$/;"	f	class:b2Fixture
DestroyProxy	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void DestroyProxy()$/;"	f	class:DynamicTreeTest
DestructionListener	external/Box2d/Testbed/Framework/Test.h	/^class DestructionListener : public b2DestructionListener$/;"	c
DestructionListener	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^class DestructionListener : public b2DestructionListener$/;"	c
DistanceTest	external/Box2d/Testbed/Tests/DistanceTest.h	/^	DistanceTest()$/;"	f	class:DistanceTest
DistanceTest	external/Box2d/Testbed/Tests/DistanceTest.h	/^class DistanceTest : public Test$/;"	c
Dominos	external/Box2d/Testbed/Tests/Dominos.h	/^	Dominos()$/;"	f	class:Dominos
Dominos	external/Box2d/Testbed/Tests/Dominos.h	/^class Dominos : public Test$/;"	c
DrawAABB	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawAABB(b2AABB* aabb, const b2Color& c)$/;"	f	class:DebugDraw
DrawCircle	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawCircle(const b2Vec2& center, float32 radius, const b2Color& color)$/;"	f	class:DebugDraw
DrawDebugData	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::DrawDebugData()$/;"	f	class:b2World
DrawFixture	external/Box2d/Testbed/Tests/PolyShapes.h	/^	void DrawFixture(b2Fixture* fixture)$/;"	f	class:PolyShapesCallback
DrawJoint	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::DrawJoint(b2Joint* joint)$/;"	f	class:b2World
DrawPoint	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawPoint(const b2Vec2& p, float32 size, const b2Color& color)$/;"	f	class:DebugDraw
DrawPolygon	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color)$/;"	f	class:DebugDraw
DrawSegment	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawSegment(const b2Vec2& p1, const b2Vec2& p2, const b2Color& color)$/;"	f	class:DebugDraw
DrawShape	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::DrawShape(b2Fixture* fixture, const b2Transform& xf, const b2Color& color)$/;"	f	class:b2World
DrawSolidCircle	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawSolidCircle(const b2Vec2& center, float32 radius, const b2Vec2& axis, const b2Color& color)$/;"	f	class:DebugDraw
DrawSolidPolygon	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawSolidPolygon(const b2Vec2* vertices, int32 vertexCount, const b2Color& color)$/;"	f	class:DebugDraw
DrawString	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawString(int x, int y, const char *string, ...)$/;"	f	class:DebugDraw
DrawTitle	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::DrawTitle(int x, int y, const char *string)$/;"	f	class:Test
DrawTransform	external/Box2d/Testbed/Framework/Render.cpp	/^void DebugDraw::DrawTransform(const b2Transform& xf)$/;"	f	class:DebugDraw
DynamicTreeTest	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	DynamicTreeTest()$/;"	f	class:DynamicTreeTest
DynamicTreeTest	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^class DynamicTreeTest : public Test$/;"	c
EDGE_SHAPES_H	external/Box2d/Testbed/Tests/EdgeShapes.h	20;"	d
ELASTIC_BODY_H	external/Box2d/Testbed/Tests/ElasticBody.h	20;"	d
ELMT_FROM_HH	cocos2d/Support/uthash.h	80;"	d
EXTERN	external/Tremor/registry.h	31;"	d
EXTERN	external/Tremor/registry.h	33;"	d
EdgeShapes	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	EdgeShapes()$/;"	f	class:EdgeShapes
EdgeShapes	external/Box2d/Testbed/Tests/EdgeShapes.h	/^class EdgeShapes : public Test$/;"	c
EdgeShapesCallback	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	EdgeShapesCallback()$/;"	f	class:EdgeShapesCallback
EdgeShapesCallback	external/Box2d/Testbed/Tests/EdgeShapes.h	/^class EdgeShapesCallback : public b2RayCastCallback$/;"	c
ElasticBody	external/Box2d/Testbed/Tests/ElasticBody.h	/^	ElasticBody()$/;"	f	class:ElasticBody
ElasticBody	external/Box2d/Testbed/Tests/ElasticBody.h	/^class ElasticBody : public Test$/;"	c
Emitter	external/Chipmunk/Demo/Sensors.c	/^typedef struct Emitter {$/;"	s	file:
Emitter	external/Chipmunk/Demo/Sensors.c	/^} Emitter;$/;"	t	typeref:struct:Emitter	file:
EnableLimit	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::EnableLimit(bool flag)$/;"	f	class:b2LineJoint
EnableLimit	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::EnableLimit(bool flag)$/;"	f	class:b2PrismaticJoint
EnableLimit	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::EnableLimit(bool flag)$/;"	f	class:b2RevoluteJoint
EnableMotor	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::EnableMotor(bool flag)$/;"	f	class:b2LineJoint
EnableMotor	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::EnableMotor(bool flag)$/;"	f	class:b2PrismaticJoint
EnableMotor	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::EnableMotor(bool flag)$/;"	f	class:b2RevoluteJoint
EndContact	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual void EndContact(b2Contact* contact) { B2_NOT_USED(contact); }$/;"	f	class:b2ContactListener
EndContact	external/Box2d/Testbed/Framework/Test.h	/^	virtual void EndContact(b2Contact* contact) { B2_NOT_USED(contact); }$/;"	f	class:Test
EndContact	external/Box2d/Testbed/Tests/SensorTest.h	/^	void EndContact(b2Contact* contact)$/;"	f	class:SensorTest
EndContact	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		virtual void EndContact(b2Contact* contact) { B2_NOT_USED(contact); }$/;"	f	class:Test
Evaluate	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	float32 Evaluate(int32 indexA, int32 indexB, float32 t) const$/;"	f	struct:b2SeparationFunction
Evaluate	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.cpp	/^void b2CircleContact::Evaluate(b2Manifold* manifold, const b2Transform& xfA, const b2Transform& xfB)$/;"	f	class:b2CircleContact
Evaluate	external/Box2d/Box2D/Dynamics/Contacts/b2NullContact.h	/^	void Evaluate() {}$/;"	f	class:b2NullContact
Evaluate	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.cpp	/^void b2PolygonAndCircleContact::Evaluate(b2Manifold* manifold, const b2Transform& xfA, const b2Transform& xfB)$/;"	f	class:b2PolygonAndCircleContact
Evaluate	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.cpp	/^void b2PolygonContact::Evaluate(b2Manifold* manifold, const b2Transform& xfA, const b2Transform& xfB)$/;"	f	class:b2PolygonContact
F	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpVect F;$/;"	m	struct:DataforForce	file:
FAR	external/libpng/pngconf.h	1273;"	d
FAR	external/libpng/pngconf.h	1302;"	d
FARDATA	external/libpng/pngconf.h	1295;"	d
FARDATA	external/libpng/pngconf.h	1307;"	d
FAST_HYPOT	external/Tremor/os.h	43;"	d
FCLOSE	external/libpng/pngtest.c	47;"	d	file:
FCLOSE	external/libpng/pngtest.c	55;"	d	file:
FINFLAG	external/Tremor/framing.c	842;"	d	file:
FINMASK	external/Tremor/framing.c	843;"	d	file:
FLOOR_fromdB_LOOKUP	external/Tremor/floor1.c	/^static const ogg_int32_t FLOOR_fromdB_LOOKUP[256]={$/;"	v	file:
FROMdB2_LOOKUP	external/Tremor/lsp_lookup.h	/^static const ogg_int32_t FROMdB2_LOOKUP[FROMdB2_LOOKUP_SZ]={$/;"	v
FROMdB2_LOOKUP_SZ	external/Tremor/lsp_lookup.h	24;"	d
FROMdB2_MASK	external/Tremor/lsp_lookup.h	27;"	d
FROMdB2_SHIFT	external/Tremor/lsp_lookup.h	26;"	d
FROMdB_LOOKUP	external/Tremor/lsp_lookup.h	/^static const ogg_int32_t FROMdB_LOOKUP[FROMdB_LOOKUP_SZ]={$/;"	v
FROMdB_LOOKUP_SZ	external/Tremor/lsp_lookup.h	23;"	d
FROMdB_SHIFT	external/Tremor/lsp_lookup.h	25;"	d
Features	external/Box2d/Box2D/Collision/b2Collision.h	/^	struct Features$/;"	s	union:b2ContactID
FillForceData	external/Chipmunk/Demo/MagnetsElectric.c	/^FillForceData(Sing* source,int inds, Sing* obs,int indo, ForceData* data)$/;"	f	file:
FindMinSeparation	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	float32 FindMinSeparation(int32* indexA, int32* indexB, float32 t) const$/;"	f	struct:b2SeparationFunction
FindNewContacts	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^void b2ContactManager::FindNewContacts()$/;"	f	class:b2ContactManager
FlagForFiltering	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline void b2Contact::FlagForFiltering()$/;"	f	class:b2Contact
ForceData	external/Chipmunk/Demo/MagnetsElectric.c	/^}ForceData;$/;"	t	typeref:struct:DataforForce	file:
Free	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^void b2BlockAllocator::Free(void* p, int32 size)$/;"	f	class:b2BlockAllocator
Free	external/Box2d/Box2D/Common/b2StackAllocator.cpp	/^void b2StackAllocator::Free(void* p)$/;"	f	class:b2StackAllocator
FreeNode	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^void b2DynamicTree::FreeNode(int32 nodeId)$/;"	f	class:b2DynamicTree
GEARS_H	external/Box2d/Testbed/Tests/Gears.h	20;"	d
GLESDebugDraw	templates/cocos2d_box2d_app/Classes/GLES-Render.h	/^class GLESDebugDraw : public b2DebugDraw$/;"	c
GLESDebugDraw	tests/Box2DTestBed-Cocos2dIntegration/GLES-Render.h	/^class GLESDebugDraw : public b2DebugDraw$/;"	c
GLES_RENDER_H	tests/Box2DTestBed-Cocos2dIntegration/GLES-Render.h	27;"	d
GRABABLE_MASK_BIT	external/Chipmunk/Demo/ChipmunkDemo.h	47;"	d
GRABABLE_MASK_BIT	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	48;"	d
Gangle	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat Gangle[SINGMAX];$/;"	m	struct:ActorSingularity	file:
Gears	external/Box2d/Testbed/Tests/Gears.h	/^	Gears()$/;"	f	class:Gears
Gears	external/Box2d/Testbed/Tests/Gears.h	/^class Gears : public Test$/;"	c
GetAABB	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline const b2AABB& b2Fixture::GetAABB() const$/;"	f	class:b2Fixture
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^b2Vec2 b2DistanceJoint::GetAnchorA() const$/;"	f	class:b2DistanceJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^b2Vec2 b2FrictionJoint::GetAnchorA() const$/;"	f	class:b2FrictionJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^b2Vec2 b2GearJoint::GetAnchorA() const$/;"	f	class:b2GearJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^b2Vec2 b2LineJoint::GetAnchorA() const$/;"	f	class:b2LineJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^b2Vec2 b2MouseJoint::GetAnchorA() const$/;"	f	class:b2MouseJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^b2Vec2 b2PrismaticJoint::GetAnchorA() const$/;"	f	class:b2PrismaticJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^b2Vec2 b2PulleyJoint::GetAnchorA() const$/;"	f	class:b2PulleyJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^b2Vec2 b2RevoluteJoint::GetAnchorA() const$/;"	f	class:b2RevoluteJoint
GetAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^b2Vec2 b2WeldJoint::GetAnchorA() const$/;"	f	class:b2WeldJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^b2Vec2 b2DistanceJoint::GetAnchorB() const$/;"	f	class:b2DistanceJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^b2Vec2 b2FrictionJoint::GetAnchorB() const$/;"	f	class:b2FrictionJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^b2Vec2 b2GearJoint::GetAnchorB() const$/;"	f	class:b2GearJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^b2Vec2 b2LineJoint::GetAnchorB() const$/;"	f	class:b2LineJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^b2Vec2 b2MouseJoint::GetAnchorB() const$/;"	f	class:b2MouseJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^b2Vec2 b2PrismaticJoint::GetAnchorB() const$/;"	f	class:b2PrismaticJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^b2Vec2 b2PulleyJoint::GetAnchorB() const$/;"	f	class:b2PulleyJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^b2Vec2 b2RevoluteJoint::GetAnchorB() const$/;"	f	class:b2RevoluteJoint
GetAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^b2Vec2 b2WeldJoint::GetAnchorB() const$/;"	f	class:b2WeldJoint
GetAngle	external/Box2d/Box2D/Common/b2Math.h	/^	float32 GetAngle() const$/;"	f	struct:b2Mat22
GetAngle	external/Box2d/Box2D/Common/b2Math.h	/^	float32 GetAngle() const$/;"	f	struct:b2Transform
GetAngle	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline float32 b2Body::GetAngle() const$/;"	f	class:b2Body
GetAngularDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline float32 b2Body::GetAngularDamping() const$/;"	f	class:b2Body
GetAngularVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline float32 b2Body::GetAngularVelocity() const$/;"	f	class:b2Body
GetAutoClearForces	external/Box2d/Box2D/Dynamics/b2World.h	/^inline bool b2World::GetAutoClearForces() const$/;"	f	class:b2World
GetBody	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline b2Body* b2Fixture::GetBody()$/;"	f	class:b2Fixture
GetBody	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline const b2Body* b2Fixture::GetBody() const$/;"	f	class:b2Fixture
GetBodyA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline b2Body* b2Joint::GetBodyA()$/;"	f	class:b2Joint
GetBodyB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline b2Body* b2Joint::GetBodyB()$/;"	f	class:b2Joint
GetBodyCount	external/Box2d/Box2D/Dynamics/b2World.h	/^inline int32 b2World::GetBodyCount() const$/;"	f	class:b2World
GetBodyList	external/Box2d/Box2D/Dynamics/b2World.h	/^inline b2Body* b2World::GetBodyList()$/;"	f	class:b2World
GetCenter	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 GetCenter() const$/;"	f	struct:b2AABB
GetClosestPoint	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2Vec2 GetClosestPoint() const$/;"	f	struct:b2Simplex
GetContactCount	external/Box2d/Box2D/Dynamics/b2World.h	/^inline int32 b2World::GetContactCount() const$/;"	f	class:b2World
GetContactList	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2ContactEdge* b2Body::GetContactList()$/;"	f	class:b2Body
GetContactList	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2ContactEdge* b2Body::GetContactList() const$/;"	f	class:b2Body
GetContactList	external/Box2d/Box2D/Dynamics/b2World.h	/^inline b2Contact* b2World::GetContactList()$/;"	f	class:b2World
GetDampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^inline float32 b2DistanceJoint::GetDampingRatio() const$/;"	f	class:b2DistanceJoint
GetDampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^float32 b2MouseJoint::GetDampingRatio() const$/;"	f	class:b2MouseJoint
GetDensity	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline float32 b2Fixture::GetDensity() const$/;"	f	class:b2Fixture
GetExtents	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 GetExtents() const$/;"	f	struct:b2AABB
GetFatAABB	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline const b2AABB& b2BroadPhase::GetFatAABB(int32 proxyId) const$/;"	f	class:b2BroadPhase
GetFatAABB	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^inline const b2AABB& b2DynamicTree::GetFatAABB(int32 proxyId) const$/;"	f	class:b2DynamicTree
GetFilterData	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline const b2Filter& b2Fixture::GetFilterData() const$/;"	f	class:b2Fixture
GetFixtureA	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline b2Fixture* b2Contact::GetFixtureA()$/;"	f	class:b2Contact
GetFixtureA	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline const b2Fixture* b2Contact::GetFixtureA() const$/;"	f	class:b2Contact
GetFixtureB	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline b2Fixture* b2Contact::GetFixtureB()$/;"	f	class:b2Contact
GetFixtureB	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline const b2Fixture* b2Contact::GetFixtureB() const$/;"	f	class:b2Contact
GetFixtureList	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Fixture* b2Body::GetFixtureList()$/;"	f	class:b2Body
GetFixtureList	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2Fixture* b2Body::GetFixtureList() const$/;"	f	class:b2Body
GetFlags	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.cpp	/^uint32 b2DebugDraw::GetFlags() const$/;"	f	class:b2DebugDraw
GetFrequency	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^inline float32 b2DistanceJoint::GetFrequency() const$/;"	f	class:b2DistanceJoint
GetFrequency	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^float32 b2MouseJoint::GetFrequency() const$/;"	f	class:b2MouseJoint
GetFriction	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline float32 b2Fixture::GetFriction() const$/;"	f	class:b2Fixture
GetGravity	external/Box2d/Box2D/Dynamics/b2World.h	/^inline b2Vec2 b2World::GetGravity() const$/;"	f	class:b2World
GetGroundAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^b2Vec2 b2PulleyJoint::GetGroundAnchorA() const$/;"	f	class:b2PulleyJoint
GetGroundAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^b2Vec2 b2PulleyJoint::GetGroundAnchorB() const$/;"	f	class:b2PulleyJoint
GetInertia	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline float32 b2Body::GetInertia() const$/;"	f	class:b2Body
GetInverse	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat22 GetInverse() const$/;"	f	struct:b2Mat22
GetJointAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^float32 b2RevoluteJoint::GetJointAngle() const$/;"	f	class:b2RevoluteJoint
GetJointCount	external/Box2d/Box2D/Dynamics/b2World.h	/^inline int32 b2World::GetJointCount() const$/;"	f	class:b2World
GetJointList	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2JointEdge* b2Body::GetJointList()$/;"	f	class:b2Body
GetJointList	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2JointEdge* b2Body::GetJointList() const$/;"	f	class:b2Body
GetJointList	external/Box2d/Box2D/Dynamics/b2World.h	/^inline b2Joint* b2World::GetJointList()$/;"	f	class:b2World
GetJointSpeed	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^float32 b2LineJoint::GetJointSpeed() const$/;"	f	class:b2LineJoint
GetJointSpeed	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^float32 b2PrismaticJoint::GetJointSpeed() const$/;"	f	class:b2PrismaticJoint
GetJointSpeed	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^float32 b2RevoluteJoint::GetJointSpeed() const$/;"	f	class:b2RevoluteJoint
GetJointTranslation	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^float32 b2LineJoint::GetJointTranslation() const$/;"	f	class:b2LineJoint
GetJointTranslation	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^float32 b2PrismaticJoint::GetJointTranslation() const$/;"	f	class:b2PrismaticJoint
GetLength	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^inline float32 b2DistanceJoint::GetLength() const$/;"	f	class:b2DistanceJoint
GetLength1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^float32 b2PulleyJoint::GetLength1() const$/;"	f	class:b2PulleyJoint
GetLength2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^float32 b2PulleyJoint::GetLength2() const$/;"	f	class:b2PulleyJoint
GetLinearDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline float32 b2Body::GetLinearDamping() const$/;"	f	class:b2Body
GetLinearVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetLinearVelocity() const$/;"	f	class:b2Body
GetLinearVelocityFromLocalPoint	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetLinearVelocityFromLocalPoint(const b2Vec2& localPoint) const$/;"	f	class:b2Body
GetLinearVelocityFromWorldPoint	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetLinearVelocityFromWorldPoint(const b2Vec2& worldPoint) const$/;"	f	class:b2Body
GetLocalCenter	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2Vec2& b2Body::GetLocalCenter() const$/;"	f	class:b2Body
GetLocalPoint	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetLocalPoint(const b2Vec2& worldPoint) const$/;"	f	class:b2Body
GetLocalVector	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetLocalVector(const b2Vec2& worldVector) const$/;"	f	class:b2Body
GetLowerLimit	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^float32 b2LineJoint::GetLowerLimit() const$/;"	f	class:b2LineJoint
GetLowerLimit	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^float32 b2PrismaticJoint::GetLowerLimit() const$/;"	f	class:b2PrismaticJoint
GetLowerLimit	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^float32 b2RevoluteJoint::GetLowerLimit() const$/;"	f	class:b2RevoluteJoint
GetManifold	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline b2Manifold* b2Contact::GetManifold()$/;"	f	class:b2Contact
GetManifold	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline const b2Manifold* b2Contact::GetManifold() const$/;"	f	class:b2Contact
GetMass	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline float32 b2Body::GetMass() const$/;"	f	class:b2Body
GetMassData	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::GetMassData(b2MassData* data) const$/;"	f	class:b2Body
GetMassData	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline void b2Fixture::GetMassData(b2MassData* massData) const$/;"	f	class:b2Fixture
GetMaxAllocation	external/Box2d/Box2D/Common/b2StackAllocator.cpp	/^int32 b2StackAllocator::GetMaxAllocation() const$/;"	f	class:b2StackAllocator
GetMaxForce	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^float32 b2FrictionJoint::GetMaxForce() const$/;"	f	class:b2FrictionJoint
GetMaxForce	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^float32 b2MouseJoint::GetMaxForce() const$/;"	f	class:b2MouseJoint
GetMaxTorque	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^float32 b2FrictionJoint::GetMaxTorque() const$/;"	f	class:b2FrictionJoint
GetMetric	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	float32 GetMetric() const$/;"	f	struct:b2Simplex
GetMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^float32 b2LineJoint::GetMotorForce() const$/;"	f	class:b2LineJoint
GetMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^float32 b2PrismaticJoint::GetMotorForce() const$/;"	f	class:b2PrismaticJoint
GetMotorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^inline float32 b2LineJoint::GetMotorSpeed() const$/;"	f	class:b2LineJoint
GetMotorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^inline float32 b2PrismaticJoint::GetMotorSpeed() const$/;"	f	class:b2PrismaticJoint
GetMotorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^inline float32 b2RevoluteJoint::GetMotorSpeed() const$/;"	f	class:b2RevoluteJoint
GetMotorTorque	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^float32 b2RevoluteJoint::GetMotorTorque() const$/;"	f	class:b2RevoluteJoint
GetNext	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline b2Contact* b2Contact::GetNext()$/;"	f	class:b2Contact
GetNext	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline const b2Contact* b2Contact::GetNext() const$/;"	f	class:b2Contact
GetNext	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline b2Joint* b2Joint::GetNext()$/;"	f	class:b2Joint
GetNext	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Body* b2Body::GetNext()$/;"	f	class:b2Body
GetNext	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2Body* b2Body::GetNext() const$/;"	f	class:b2Body
GetNext	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline b2Fixture* b2Fixture::GetNext()$/;"	f	class:b2Fixture
GetNext	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline const b2Fixture* b2Fixture::GetNext() const$/;"	f	class:b2Fixture
GetPosition	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2Vec2& b2Body::GetPosition() const$/;"	f	class:b2Body
GetProxyCount	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline int32 b2BroadPhase::GetProxyCount() const$/;"	f	class:b2BroadPhase
GetProxyCount	external/Box2d/Box2D/Dynamics/b2World.cpp	/^int32 b2World::GetProxyCount() const$/;"	f	class:b2World
GetRandomAABB	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void GetRandomAABB(b2AABB* aabb)$/;"	f	class:DynamicTreeTest
GetRatio	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^float32 b2GearJoint::GetRatio() const$/;"	f	class:b2GearJoint
GetRatio	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^float32 b2PulleyJoint::GetRatio() const$/;"	f	class:b2PulleyJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^b2Vec2 b2DistanceJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2DistanceJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^b2Vec2 b2FrictionJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2FrictionJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^b2Vec2 b2GearJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2GearJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^b2Vec2 b2LineJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2LineJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^b2Vec2 b2MouseJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2MouseJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^b2Vec2 b2PrismaticJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2PrismaticJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^b2Vec2 b2PulleyJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2PulleyJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^b2Vec2 b2RevoluteJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2RevoluteJoint
GetReactionForce	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^b2Vec2 b2WeldJoint::GetReactionForce(float32 inv_dt) const$/;"	f	class:b2WeldJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^float32 b2DistanceJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2DistanceJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^float32 b2FrictionJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2FrictionJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^float32 b2GearJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2GearJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^float32 b2LineJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2LineJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^float32 b2MouseJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2MouseJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^float32 b2PrismaticJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2PrismaticJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^float32 b2PulleyJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2PulleyJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^float32 b2RevoluteJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2RevoluteJoint
GetReactionTorque	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^float32 b2WeldJoint::GetReactionTorque(float32 inv_dt) const$/;"	f	class:b2WeldJoint
GetRestitution	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline float32 b2Fixture::GetRestitution() const$/;"	f	class:b2Fixture
GetSearchDirection	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2Vec2 GetSearchDirection() const$/;"	f	struct:b2Simplex
GetShape	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline b2Shape* b2Fixture::GetShape()$/;"	f	class:b2Fixture
GetShape	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline const b2Shape* b2Fixture::GetShape() const$/;"	f	class:b2Fixture
GetSupport	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^inline int32 b2CircleShape::GetSupport(const b2Vec2 &d) const$/;"	f	class:b2CircleShape
GetSupport	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^inline int32 b2PolygonShape::GetSupport(const b2Vec2& d) const$/;"	f	class:b2PolygonShape
GetSupport	external/Box2d/Box2D/Collision/b2Distance.h	/^inline int32 b2DistanceProxy::GetSupport(const b2Vec2& d) const$/;"	f	class:b2DistanceProxy
GetSupportVertex	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^inline const b2Vec2& b2CircleShape::GetSupportVertex(const b2Vec2 &d) const$/;"	f	class:b2CircleShape
GetSupportVertex	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^inline const b2Vec2& b2PolygonShape::GetSupportVertex(const b2Vec2& d) const$/;"	f	class:b2PolygonShape
GetSupportVertex	external/Box2d/Box2D/Collision/b2Distance.h	/^inline const b2Vec2& b2DistanceProxy::GetSupportVertex(const b2Vec2& d) const$/;"	f	class:b2DistanceProxy
GetTarget	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^const b2Vec2& b2MouseJoint::GetTarget() const$/;"	f	class:b2MouseJoint
GetTransform	external/Box2d/Box2D/Common/b2Math.h	/^inline void b2Sweep::GetTransform(b2Transform* xf, float32 alpha) const$/;"	f	class:b2Sweep
GetTransform	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2Transform& b2Body::GetTransform() const$/;"	f	class:b2Body
GetType	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^inline b2Shape::Type b2Shape::GetType() const$/;"	f	class:b2Shape
GetType	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline b2JointType b2Joint::GetType() const$/;"	f	class:b2Joint
GetType	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2BodyType b2Body::GetType() const$/;"	f	class:b2Body
GetType	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline b2Shape::Type b2Fixture::GetType() const$/;"	f	class:b2Fixture
GetUpperLimit	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^float32 b2LineJoint::GetUpperLimit() const$/;"	f	class:b2LineJoint
GetUpperLimit	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^float32 b2PrismaticJoint::GetUpperLimit() const$/;"	f	class:b2PrismaticJoint
GetUpperLimit	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^float32 b2RevoluteJoint::GetUpperLimit() const$/;"	f	class:b2RevoluteJoint
GetUserData	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline void* b2BroadPhase::GetUserData(int32 proxyId) const$/;"	f	class:b2BroadPhase
GetUserData	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^inline void* b2DynamicTree::GetUserData(int32 proxyId) const$/;"	f	class:b2DynamicTree
GetUserData	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline void* b2Joint::GetUserData() const$/;"	f	class:b2Joint
GetUserData	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void* b2Body::GetUserData() const$/;"	f	class:b2Body
GetUserData	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline void* b2Fixture::GetUserData() const$/;"	f	class:b2Fixture
GetVertex	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^inline const b2Vec2& b2CircleShape::GetVertex(int32 index) const$/;"	f	class:b2CircleShape
GetVertex	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^inline const b2Vec2& b2PolygonShape::GetVertex(int32 index) const$/;"	f	class:b2PolygonShape
GetVertex	external/Box2d/Box2D/Collision/b2Distance.h	/^inline const b2Vec2& b2DistanceProxy::GetVertex(int32 index) const$/;"	f	class:b2DistanceProxy
GetVertexCount	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^	int32 GetVertexCount() const { return 1; }$/;"	f	class:b2CircleShape
GetVertexCount	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^	int32 GetVertexCount() const { return m_vertexCount; }$/;"	f	class:b2PolygonShape
GetVertexCount	external/Box2d/Box2D/Collision/b2Distance.h	/^inline int32 b2DistanceProxy::GetVertexCount() const$/;"	f	class:b2DistanceProxy
GetWitnessPoints	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	void GetWitnessPoints(b2Vec2* pA, b2Vec2* pB) const$/;"	f	struct:b2Simplex
GetWorld	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2World* b2Body::GetWorld()$/;"	f	class:b2Body
GetWorld	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2World* b2Body::GetWorld() const$/;"	f	class:b2Body
GetWorldCenter	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline const b2Vec2& b2Body::GetWorldCenter() const$/;"	f	class:b2Body
GetWorldManifold	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline void b2Contact::GetWorldManifold(b2WorldManifold* worldManifold) const$/;"	f	class:b2Contact
GetWorldPoint	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetWorldPoint(const b2Vec2& localPoint) const$/;"	f	class:b2Body
GetWorldVector	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline b2Vec2 b2Body::GetWorldVector(const b2Vec2& localVector) const$/;"	f	class:b2Body
Gpos	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpVect Gpos[SINGMAX];$/;"	m	struct:ActorSingularity	file:
HASH_ADD	cocos2d/Support/uthash.h	147;"	d
HASH_ADD_INT	cocos2d/Support/uthash.h	234;"	d
HASH_ADD_KEYPTR	cocos2d/Support/uthash.h	150;"	d
HASH_ADD_STR	cocos2d/Support/uthash.h	230;"	d
HASH_ADD_TO_BKT	cocos2d/Support/uthash.h	645;"	d
HASH_BER	cocos2d/Support/uthash.h	321;"	d
HASH_BKT_CAPACITY_THRESH	cocos2d/Support/uthash.h	77;"	d
HASH_BLOOM_ADD	cocos2d/Support/uthash.h	115;"	d
HASH_BLOOM_ADD	cocos2d/Support/uthash.h	124;"	d
HASH_BLOOM_BITLEN	cocos2d/Support/uthash.h	96;"	d
HASH_BLOOM_BITSET	cocos2d/Support/uthash.h	112;"	d
HASH_BLOOM_BITTEST	cocos2d/Support/uthash.h	113;"	d
HASH_BLOOM_BYTELEN	cocos2d/Support/uthash.h	97;"	d
HASH_BLOOM_FREE	cocos2d/Support/uthash.h	107;"	d
HASH_BLOOM_FREE	cocos2d/Support/uthash.h	123;"	d
HASH_BLOOM_MAKE	cocos2d/Support/uthash.h	122;"	d
HASH_BLOOM_MAKE	cocos2d/Support/uthash.h	98;"	d
HASH_BLOOM_SIGNATURE	cocos2d/Support/uthash.h	910;"	d
HASH_BLOOM_TEST	cocos2d/Support/uthash.h	118;"	d
HASH_BLOOM_TEST	cocos2d/Support/uthash.h	125;"	d
HASH_CLEAR	cocos2d/Support/uthash.h	875;"	d
HASH_CNT	cocos2d/Support/uthash.h	886;"	d
HASH_COUNT	cocos2d/Support/uthash.h	885;"	d
HASH_DEL	cocos2d/Support/uthash.h	236;"	d
HASH_DELETE	cocos2d/Support/uthash.h	192;"	d
HASH_DEL_IN_BKT	cocos2d/Support/uthash.h	659;"	d
HASH_EMIT_KEY	cocos2d/Support/uthash.h	303;"	d
HASH_EMIT_KEY	cocos2d/Support/uthash.h	310;"	d
HASH_EXPAND_BUCKETS	cocos2d/Support/uthash.h	700;"	d
HASH_FCN	cocos2d/Support/uthash.h	315;"	d
HASH_FCN	cocos2d/Support/uthash.h	317;"	d
HASH_FIND	cocos2d/Support/uthash.h	82;"	d
HASH_FIND_INT	cocos2d/Support/uthash.h	232;"	d
HASH_FIND_IN_BKT	cocos2d/Support/uthash.h	631;"	d
HASH_FIND_STR	cocos2d/Support/uthash.h	228;"	d
HASH_FNV	cocos2d/Support/uthash.h	343;"	d
HASH_FSCK	cocos2d/Support/uthash.h	244;"	d
HASH_FSCK	cocos2d/Support/uthash.h	296;"	d
HASH_INITIAL_NUM_BUCKETS	cocos2d/Support/uthash.h	75;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	cocos2d/Support/uthash.h	76;"	d
HASH_JEN	cocos2d/Support/uthash.h	382;"	d
HASH_JEN_MIX	cocos2d/Support/uthash.h	369;"	d
HASH_KEYCMP	cocos2d/Support/uthash.h	628;"	d
HASH_MAKE_TABLE	cocos2d/Support/uthash.h	128;"	d
HASH_MUR	cocos2d/Support/uthash.h	490;"	d
HASH_MUR	cocos2d/Support/uthash.h	492;"	d
HASH_MUR_ALIGNED	cocos2d/Support/uthash.h	530;"	d
HASH_MUR_UNALIGNED	cocos2d/Support/uthash.h	496;"	d
HASH_OAT	cocos2d/Support/uthash.h	353;"	d
HASH_OOPS	cocos2d/Support/uthash.h	243;"	d
HASH_SAX	cocos2d/Support/uthash.h	333;"	d
HASH_SELECT	cocos2d/Support/uthash.h	837;"	d
HASH_SFH	cocos2d/Support/uthash.h	434;"	d
HASH_SIGNATURE	cocos2d/Support/uthash.h	909;"	d
HASH_SORT	cocos2d/Support/uthash.h	752;"	d
HASH_SRT	cocos2d/Support/uthash.h	753;"	d
HASH_TO_BKT	cocos2d/Support/uthash.h	175;"	d
HEIGHT	external/Chipmunk/Demo/MagnetsElectric.c	14;"	d	file:
I	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	float32 I;$/;"	m	struct:b2MassData
INFINITY	external/Chipmunk/include/chipmunk/chipmunk.h	88;"	d
INFINITY	external/Chipmunk/include/chipmunk/chipmunk.h	92;"	d
INFINITY	external/Chipmunk/include/chipmunk/chipmunk.h	96;"	d
INFINITY_HACK	external/Chipmunk/include/chipmunk/chipmunk.h	/^		static union MSVC_EVIL_FLOAT_HACK INFINITY_HACK = {{0x00, 0x00, 0x80, 0x7F}};$/;"	v	typeref:union:MSVC_EVIL_FLOAT_HACK
INITSET	external/Tremor/ivorbisfile.h	51;"	d
INVSQ_LOOKUP_I	external/Tremor/lsp_lookup.h	/^static const long INVSQ_LOOKUP_I[64+1]={$/;"	v
INVSQ_LOOKUP_IDel	external/Tremor/lsp_lookup.h	/^static const long INVSQ_LOOKUP_IDel[64]={$/;"	v
INVSQ_LOOKUP_I_MASK	external/Tremor/lsp_lookup.h	52;"	d
INVSQ_LOOKUP_I_SHIFT	external/Tremor/lsp_lookup.h	51;"	d
Image	tools/spritesheet-artifact-fixer.py	/^    import Image$/;"	i
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^void b2DistanceJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2DistanceJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^void b2FrictionJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2FrictionJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^void b2GearJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2GearJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2LineJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^void b2MouseJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2MouseJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2PrismaticJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^void b2PulleyJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2PulleyJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2RevoluteJoint
InitVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^void b2WeldJoint::InitVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2WeldJoint
Initialize	external/Box2d/Box2D/Collision/b2Collision.cpp	/^void b2WorldManifold::Initialize(const b2Manifold* manifold,$/;"	f	class:b2WorldManifold
Initialize	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	float32 Initialize(const b2SimplexCache* cache,$/;"	f	struct:b2SeparationFunction
Initialize	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^	void Initialize(b2ContactConstraint* cc, int32 index)$/;"	f	struct:b2PositionSolverManifold
Initialize	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	void Initialize(b2TOIConstraint* cc, int32 index)$/;"	f	struct:b2TOISolverManifold
Initialize	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^void b2TOISolver::Initialize(b2Contact** contacts, int32 count, b2Body* toiBody)$/;"	f	class:b2TOISolver
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^void b2DistanceJointDef::Initialize(b2Body* b1, b2Body* b2,$/;"	f	class:b2DistanceJointDef
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^void b2FrictionJointDef::Initialize(b2Body* bA, b2Body* bB, const b2Vec2& anchor)$/;"	f	class:b2FrictionJointDef
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJointDef::Initialize(b2Body* b1, b2Body* b2, const b2Vec2& anchor, const b2Vec2& axis)$/;"	f	class:b2LineJointDef
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJointDef::Initialize(b2Body* b1, b2Body* b2, const b2Vec2& anchor, const b2Vec2& axis)$/;"	f	class:b2PrismaticJointDef
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^void b2PulleyJointDef::Initialize(b2Body* b1, b2Body* b2,$/;"	f	class:b2PulleyJointDef
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJointDef::Initialize(b2Body* b1, b2Body* b2, const b2Vec2& anchor)$/;"	f	class:b2RevoluteJointDef
Initialize	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^void b2WeldJointDef::Initialize(b2Body* bA, b2Body* bB, const b2Vec2& anchor)$/;"	f	class:b2WeldJointDef
InitializeRegisters	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^void b2Contact::InitializeRegisters()$/;"	f	class:b2Contact
InsertLeaf	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^void b2DynamicTree::InsertLeaf(int32 leaf)$/;"	f	class:b2DynamicTree
IsActive	external/Box2d/Box2D/Dynamics/Joints/b2Joint.cpp	/^bool b2Joint::IsActive() const$/;"	f	class:b2Joint
IsActive	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline bool b2Body::IsActive() const$/;"	f	class:b2Body
IsAwake	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline bool b2Body::IsAwake() const$/;"	f	class:b2Body
IsBullet	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline bool b2Body::IsBullet() const$/;"	f	class:b2Body
IsEnabled	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline bool b2Contact::IsEnabled() const$/;"	f	class:b2Contact
IsFixedRotation	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline bool b2Body::IsFixedRotation() const$/;"	f	class:b2Body
IsLeaf	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	bool IsLeaf() const$/;"	f	struct:b2DynamicTreeNode
IsLimitEnabled	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^bool b2LineJoint::IsLimitEnabled() const$/;"	f	class:b2LineJoint
IsLimitEnabled	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^bool b2PrismaticJoint::IsLimitEnabled() const$/;"	f	class:b2PrismaticJoint
IsLimitEnabled	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^bool b2RevoluteJoint::IsLimitEnabled() const$/;"	f	class:b2RevoluteJoint
IsLocked	external/Box2d/Box2D/Dynamics/b2World.h	/^inline bool b2World::IsLocked() const$/;"	f	class:b2World
IsMotorEnabled	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^bool b2LineJoint::IsMotorEnabled() const$/;"	f	class:b2LineJoint
IsMotorEnabled	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^bool b2PrismaticJoint::IsMotorEnabled() const$/;"	f	class:b2PrismaticJoint
IsMotorEnabled	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^bool b2RevoluteJoint::IsMotorEnabled() const$/;"	f	class:b2RevoluteJoint
IsSensor	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline bool b2Fixture::IsSensor() const$/;"	f	class:b2Fixture
IsSleepingAllowed	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline bool b2Body::IsSleepingAllowed() const$/;"	f	class:b2Body
IsTouching	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline bool b2Contact::IsTouching() const$/;"	f	class:b2Contact
IsValid	external/Box2d/Box2D/Collision/b2Collision.h	/^inline bool b2AABB::IsValid() const$/;"	f	class:b2AABB
IsValid	external/Box2d/Box2D/Common/b2Math.h	/^	bool IsValid() const$/;"	f	struct:b2Vec2
J_MAX	external/Chipmunk/include/chipmunk/constraints/util.h	26;"	d
JointDestroyed	external/Box2d/Testbed/Framework/Test.h	/^	virtual void JointDestroyed(b2Joint* joint) { B2_NOT_USED(joint); }$/;"	f	class:Test
JointDestroyed	external/Box2d/Testbed/Tests/Web.h	/^	void JointDestroyed(b2Joint* joint)$/;"	f	class:Web
JointDestroyed	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		virtual void JointDestroyed(b2Joint* joint) { B2_NOT_USED(joint); }$/;"	f	class:Test
Joints	external/Chipmunk/Demo/Joints.c	/^const chipmunkDemo Joints = {$/;"	v
K	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Mat22 K;$/;"	m	struct:b2ContactConstraint
Keyboard	external/Box2d/Testbed/Framework/Main.cpp	/^void Keyboard(unsigned char key, int x, int y)$/;"	f
Keyboard	external/Box2d/Testbed/Framework/Test.h	/^	virtual void Keyboard(unsigned char key) { B2_NOT_USED(key); }$/;"	f	class:Test
Keyboard	external/Box2d/Testbed/Tests/ApplyForce.h	/^	void Keyboard(unsigned char key)$/;"	f	class:ApplyForce
Keyboard	external/Box2d/Testbed/Tests/BodyTypes.h	/^	void Keyboard(unsigned char key)$/;"	f	class:BodyTypes
Keyboard	external/Box2d/Testbed/Tests/Confined.h	/^	void Keyboard(unsigned char key)$/;"	f	class:Confined
Keyboard	external/Box2d/Testbed/Tests/DistanceTest.h	/^	void Keyboard(unsigned char key)$/;"	f	class:DistanceTest
Keyboard	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void Keyboard(unsigned char key)$/;"	f	class:DynamicTreeTest
Keyboard	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	void Keyboard(unsigned char key)$/;"	f	class:EdgeShapes
Keyboard	external/Box2d/Testbed/Tests/Gears.h	/^	void Keyboard(unsigned char key)$/;"	f	class:Gears
Keyboard	external/Box2d/Testbed/Tests/PolyCollision.h	/^	void Keyboard(unsigned char key)$/;"	f	class:PolyCollision
Keyboard	external/Box2d/Testbed/Tests/PolyShapes.h	/^	void Keyboard(unsigned char key)$/;"	f	class:PolyShapes
Keyboard	external/Box2d/Testbed/Tests/Prismatic.h	/^	void Keyboard(unsigned char key)$/;"	f	class:Prismatic
Keyboard	external/Box2d/Testbed/Tests/Pulleys.h	/^	void Keyboard(unsigned char key)$/;"	f	class:Pulleys
Keyboard	external/Box2d/Testbed/Tests/RayCast.h	/^	void Keyboard(unsigned char key)$/;"	f	class:RayCast
Keyboard	external/Box2d/Testbed/Tests/Revolute.h	/^	void Keyboard(unsigned char key)$/;"	f	class:Revolute
Keyboard	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	void Keyboard(unsigned char key)$/;"	f	class:ShapeEditing
Keyboard	external/Box2d/Testbed/Tests/SliderCrank.h	/^	void Keyboard(unsigned char key)$/;"	f	class:SliderCrank
Keyboard	external/Box2d/Testbed/Tests/TheoJansen.h	/^	void Keyboard(unsigned char key)$/;"	f	class:TheoJansen
Keyboard	external/Box2d/Testbed/Tests/VerticalStack.h	/^	void Keyboard(unsigned char key)$/;"	f	class:VerticalStack
Keyboard	external/Box2d/Testbed/Tests/Web.h	/^	void Keyboard(unsigned char key)$/;"	f	class:Web
Keyboard	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		virtual void Keyboard(unsigned char key) { B2_NOT_USED(key); }$/;"	f	class:Test
KeyboardSpecial	external/Box2d/Testbed/Framework/Main.cpp	/^void KeyboardSpecial(int key, int x, int y)$/;"	f
LDATA	external/libpng/pngconf.h	1264;"	d
LDATA	external/libpng/pngconf.h	1266;"	d
LINE_COLOR	external/Chipmunk/Demo/drawSpace.c	45;"	d	file:
LINE_JOINT_H	external/Box2d/Testbed/Tests/LineJoint.h	20;"	d
LITTLE_ENDIAN	external/Tremor/os.h	44;"	d
LL_APPEND	cocos2d/Support/utlist.h	296;"	d
LL_APPEND	cocos2d/Support/utlist.h	357;"	d
LL_APPEND	cocos2d/Support/utlist.h	358;"	d
LL_APPEND_VS2008	cocos2d/Support/utlist.h	326;"	d
LL_DELETE	cocos2d/Support/utlist.h	309;"	d
LL_DELETE	cocos2d/Support/utlist.h	359;"	d
LL_DELETE	cocos2d/Support/utlist.h	360;"	d
LL_DELETE_VS2008	cocos2d/Support/utlist.h	338;"	d
LL_FOREACH	cocos2d/Support/utlist.h	364;"	d
LL_FOREACH_SAFE	cocos2d/Support/utlist.h	367;"	d
LL_PREPEND	cocos2d/Support/utlist.h	290;"	d
LL_SEARCH	cocos2d/Support/utlist.h	377;"	d
LL_SEARCH_SCALAR	cocos2d/Support/utlist.h	370;"	d
LL_SORT	cocos2d/Support/utlist.h	103;"	d
LOOKUP_T	external/Tremor/os_types.h	22;"	d
LOOKUP_T	external/Tremor/os_types.h	25;"	d
LRangeForceApply	external/Chipmunk/Demo/MagnetsElectric.c	/^LRangeForceApply(cpBody *a, cpBody *b){$/;"	f	file:
LSP_FRACBITS	external/Tremor/floor0.c	29;"	d	file:
Launch	external/Box2d/Testbed/Tests/ContinuousTest.h	/^	void Launch()$/;"	f	class:ContinuousTest
LaunchBomb	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::LaunchBomb()$/;"	f	class:Test
LaunchBomb	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::LaunchBomb(const b2Vec2& position, const b2Vec2& velocity)$/;"	f	class:Test
Length	external/Box2d/Box2D/Common/b2Math.h	/^	float32 Length() const$/;"	f	struct:b2Vec2
LengthSquared	external/Box2d/Box2D/Common/b2Math.h	/^	float32 LengthSquared() const$/;"	f	struct:b2Vec2
LineJoint	external/Box2d/Testbed/Tests/LineJoint.h	/^	LineJoint()$/;"	f	class:LineJoint
LineJoint	external/Box2d/Testbed/Tests/LineJoint.h	/^class LineJoint : public Test$/;"	c
LogoSmash	external/Chipmunk/Demo/LogoSmash.c	/^const chipmunkDemo LogoSmash = {$/;"	v
M	cocos2d/Support/glu.c	82;"	d	file:
M	cocos2d/Support/glu.c	99;"	d	file:
MACOS	external/libpng/pngconf.h	337;"	d
MAG_MKS	external/Chipmunk/Demo/MagnetsElectric.c	22;"	d	file:
MAKE_REF	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	4;"	d
MAX_CONTACTS	external/Chipmunk/src/cpSpace.c	154;"	d	file:
MB	external/Tremor/asm_arm.h	47;"	d
MB	external/Tremor/misc.h	107;"	d
MIN	external/libpng/pngrio.c	78;"	d	file:
MIN	external/libpng/pngtest.c	339;"	d	file:
MIN	external/libpng/pngtest.c	413;"	d	file:
MIN	external/libpng/pngwio.c	72;"	d	file:
MLOOP_1	external/Tremor/floor0.c	/^static const unsigned char MLOOP_1[64]={$/;"	v	file:
MLOOP_2	external/Tremor/floor0.c	/^static const unsigned char MLOOP_2[64]={$/;"	v	file:
MLOOP_3	external/Tremor/floor0.c	/^static const unsigned char MLOOP_3[8]={0,1,2,2,3,3,3,3};$/;"	v	file:
MSVC_EVIL_FLOAT_HACK	external/Chipmunk/include/chipmunk/chipmunk.h	/^		union MSVC_EVIL_FLOAT_HACK$/;"	u
MULT31	external/Tremor/asm_arm.h	/^static inline ogg_int32_t MULT31(ogg_int32_t x, ogg_int32_t y) {$/;"	f
MULT31	external/Tremor/misc.h	/^STIN ogg_int32_t MULT31(ogg_int32_t x, ogg_int32_t y) {$/;"	f
MULT31_SHIFT15	external/Tremor/asm_arm.h	/^static inline ogg_int32_t MULT31_SHIFT15(ogg_int32_t x, ogg_int32_t y) {$/;"	f
MULT31_SHIFT15	external/Tremor/misc.h	/^STIN ogg_int32_t MULT31_SHIFT15(ogg_int32_t x, ogg_int32_t y) {$/;"	f
MULT32	external/Tremor/asm_arm.h	/^static inline ogg_int32_t MULT32(ogg_int32_t x, ogg_int32_t y) {$/;"	f
MULT32	external/Tremor/misc.h	/^STIN ogg_int32_t MULT32(ogg_int32_t x, ogg_int32_t y) {$/;"	f
M_PI	external/Tremor/os.h	36;"	d
MagDipoleForce	external/Chipmunk/Demo/MagnetsElectric.c	/^MagDipoleForce(ForceData* data){$/;"	f	file:
MagDipoleTorque	external/Chipmunk/Demo/MagnetsElectric.c	/^MagDipoleTorque(ForceData* data){$/;"	f	file:
MagnetsElectric	external/Chipmunk/Demo/MagnetsElectric.c	/^const chipmunkDemo MagnetsElectric = {$/;"	v
MenuState	cocos2d/CCMenu.h	/^} MenuState;$/;"	t	typeref:enum:__anon19
Mode	external/Box2d/Testbed/Tests/RayCast.h	/^	enum Mode$/;"	g	class:RayCast
MonsterType	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^} MonsterType;$/;"	t	typeref:enum:__anon9
MonsterTypeBoss	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^    MonsterTypeBoss$/;"	e	enum:__anon9
MonsterTypeFastAndWeak	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^    MonsterTypeFastAndWeak,$/;"	e	enum:__anon9
MonsterTypeSlowAndStrong	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^    MonsterTypeSlowAndStrong,$/;"	e	enum:__anon9
Mouse	external/Box2d/Testbed/Framework/Main.cpp	/^void Mouse(int32 button, int32 state, int32 x, int32 y)$/;"	f
MouseDown	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::MouseDown(const b2Vec2& p)$/;"	f	class:Test
MouseMotion	external/Box2d/Testbed/Framework/Main.cpp	/^void MouseMotion(int32 x, int32 y)$/;"	f
MouseMove	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::MouseMove(const b2Vec2& p)$/;"	f	class:Test
MouseUp	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::MouseUp(const b2Vec2& p)$/;"	f	class:Test
MouseWheel	external/Box2d/Testbed/Framework/Main.cpp	/^void MouseWheel(int wheel, int direction, int x, int y)$/;"	f
MoveAABB	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void MoveAABB(b2AABB* aabb)$/;"	f	class:DynamicTreeTest
MoveProxy	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^void b2BroadPhase::MoveProxy(int32 proxyId, const b2AABB& aabb, const b2Vec2& displacement)$/;"	f	class:b2BroadPhase
MoveProxy	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^bool b2DynamicTree::MoveProxy(int32 proxyId, const b2AABB& aabb, const b2Vec2& displacement)$/;"	f	class:b2DynamicTree
MoveProxy	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void MoveProxy()$/;"	f	class:DynamicTreeTest
NCHG	external/Chipmunk/Demo/MagnetsElectric.c	18;"	d	file:
NEAR_BUF_SIZE	external/libpng/pngrio.c	77;"	d	file:
NEAR_BUF_SIZE	external/libpng/pngtest.c	338;"	d	file:
NEAR_BUF_SIZE	external/libpng/pngtest.c	412;"	d	file:
NEAR_BUF_SIZE	external/libpng/pngwio.c	71;"	d	file:
NMAG	external/Chipmunk/Demo/MagnetsElectric.c	17;"	d	file:
NMIX	external/Chipmunk/Demo/MagnetsElectric.c	19;"	d	file:
NOCHECK	external/libpng/pngconf.h	1614;"	d
NOTOPEN	external/Tremor/ivorbisfile.h	47;"	d
NOT_GRABABLE_MASK	external/Chipmunk/Demo/ChipmunkDemo.h	48;"	d
NOT_GRABABLE_MASK	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	49;"	d
NO_DECLTYPE	cocos2d/Support/uthash.h	38;"	d
NO_DECLTYPE	cocos2d/Support/utlist.h	70;"	d
NO_FLOAT_MATH_LIB	external/Tremor/os.h	42;"	d
NS_BLOCKS_AVAILABLE	cocos2d/CCBlockSupport.h	47;"	d
NS_BLOCKS_AVAILABLE	cocos2d/CCBlockSupport.h	49;"	d
NUM_CIRCLES	external/Chipmunk/Demo/UnsafeOps.c	35;"	d	file:
NUM_VERTS	external/Chipmunk/Demo/Plink.c	55;"	d	file:
Normalize	external/Box2d/Box2D/Common/b2Math.h	/^	float32 Normalize()$/;"	f	struct:b2Vec2
Normalize	external/Box2d/Box2D/Common/b2Math.h	/^inline void b2Sweep::Normalize()$/;"	f	class:b2Sweep
Nsing	external/Chipmunk/Demo/MagnetsElectric.c	/^	int Nsing; $/;"	m	struct:ActorSingularity	file:
OGG_EEOS	external/Tremor/ogg.h	199;"	d
OGG_EINVAL	external/Tremor/ogg.h	198;"	d
OGG_ESERIAL	external/Tremor/ogg.h	197;"	d
OGG_EVERSION	external/Tremor/ogg.h	196;"	d
OGG_HOLE	external/Tremor/ogg.h	194;"	d
OGG_SPAN	external/Tremor/ogg.h	195;"	d
OGG_SUCCESS	external/Tremor/ogg.h	192;"	d
ONE_SIDED_PLATFORM_H	external/Box2d/Testbed/Tests/OneSidedPlatform.h	20;"	d
OPENED	external/Tremor/ivorbisfile.h	49;"	d
OV_EBADHEADER	external/Tremor/ivorbiscodec.h	190;"	d
OV_EBADLINK	external/Tremor/ivorbiscodec.h	194;"	d
OV_EBADPACKET	external/Tremor/ivorbiscodec.h	193;"	d
OV_EFAULT	external/Tremor/ivorbiscodec.h	186;"	d
OV_EIMPL	external/Tremor/ivorbiscodec.h	187;"	d
OV_EINVAL	external/Tremor/ivorbiscodec.h	188;"	d
OV_ENOSEEK	external/Tremor/ivorbiscodec.h	195;"	d
OV_ENOTAUDIO	external/Tremor/ivorbiscodec.h	192;"	d
OV_ENOTVORBIS	external/Tremor/ivorbiscodec.h	189;"	d
OV_EOF	external/Tremor/ivorbiscodec.h	182;"	d
OV_EREAD	external/Tremor/ivorbiscodec.h	185;"	d
OV_EVERSION	external/Tremor/ivorbiscodec.h	191;"	d
OV_FALSE	external/Tremor/ivorbiscodec.h	181;"	d
OV_HOLE	external/Tremor/ivorbiscodec.h	183;"	d
OggVorbis_File	external/Tremor/ivorbisfile.h	/^typedef struct OggVorbis_File {$/;"	s
OggVorbis_File	external/Tremor/ivorbisfile.h	/^} OggVorbis_File;$/;"	t	typeref:struct:OggVorbis_File
OneSidedPlatform	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	OneSidedPlatform()$/;"	f	class:OneSidedPlatform
OneSidedPlatform	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^class OneSidedPlatform : public Test$/;"	c
OneWay	external/Chipmunk/Demo/OneWay.c	/^const chipmunkDemo OneWay = {$/;"	v
OneWayPlatform	external/Chipmunk/Demo/OneWay.c	/^typedef struct OneWayPlatform {$/;"	s	file:
OneWayPlatform	external/Chipmunk/Demo/OneWay.c	/^} OneWayPlatform;$/;"	t	typeref:struct:OneWayPlatform	file:
PARTOPEN	external/Tremor/ivorbisfile.h	48;"	d
PASoundSource	experimental/sound-engine/PASoundMgr.h	/^@class PASoundListener, PASoundSource;$/;"	v	typeref:class:
PNGAPI	external/libpng/pngconf.h	1424;"	d
PNGAPI	external/libpng/pngconf.h	1425;"	d
PNGAPI	external/libpng/pngconf.h	1453;"	d
PNGAPI	external/libpng/pngconf.h	1455;"	d
PNGAPI	external/libpng/pngconf.h	1496;"	d
PNGAPI	external/libpng/pngconf.h	1505;"	d
PNGARG	external/libpng/pngconf.h	313;"	d
PNGARG	external/libpng/pngconf.h	317;"	d
PNGARG	external/libpng/pngconf.h	322;"	d
PNGCONF_H	external/libpng/pngconf.h	21;"	d
PNGTEST_TIMING	external/libpng/pngtest.c	80;"	d	file:
PNG_16_TO_8	external/libpng/png.h	2930;"	d
PNG_1_2_X	external/libpng/pngconf.h	23;"	d
PNG_ABORT	external/libpng/pngconf.h	1601;"	d
PNG_ABORT	external/libpng/pngconf.h	269;"	d
PNG_ADD_ALPHA	external/libpng/png.h	2945;"	d
PNG_AFTER_IDAT	external/libpng/png.h	2901;"	d
PNG_ALLOCATED	external/libpng/pngconf.h	1552;"	d
PNG_ALLOCATED	external/libpng/pngconf.h	1587;"	d
PNG_ALL_FILTERS	external/libpng/png.h	1935;"	d
PNG_ALL_MNG_FEATURES	external/libpng/png.h	1221;"	d
PNG_ALWAYS_EXTERN	external/libpng/pngconf.h	436;"	d
PNG_ASM_FLAGS_INITIALIZED	external/libpng/png.h	2731;"	d
PNG_ASM_FLAG_MMX_READ_COMBINE_ROW	external/libpng/png.h	2725;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_AVG	external/libpng/png.h	2729;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_PAETH	external/libpng/png.h	2730;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_SUB	external/libpng/png.h	2727;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_UP	external/libpng/png.h	2728;"	d
PNG_ASM_FLAG_MMX_READ_INTERLACE	external/libpng/png.h	2726;"	d
PNG_ASM_FLAG_MMX_SUPPORT_COMPILED	external/libpng/png.h	2723;"	d
PNG_ASM_FLAG_MMX_SUPPORT_IN_CPU	external/libpng/png.h	2724;"	d
PNG_ASSEMBLER_CODE_SUPPORTED	external/libpng/pngconf.h	805;"	d
PNG_BACKGROUND	external/libpng/png.h	2927;"	d
PNG_BACKGROUND_EXPAND	external/libpng/png.h	2928;"	d
PNG_BACKGROUND_GAMMA_FILE	external/libpng/png.h	1782;"	d
PNG_BACKGROUND_GAMMA_SCREEN	external/libpng/png.h	1781;"	d
PNG_BACKGROUND_GAMMA_UNIQUE	external/libpng/png.h	1783;"	d
PNG_BACKGROUND_GAMMA_UNKNOWN	external/libpng/png.h	1780;"	d
PNG_BACKGROUND_IS_GRAY	external/libpng/png.h	2915;"	d
PNG_BGR	external/libpng/png.h	2920;"	d
PNG_BUILD_DLL	external/libpng/pngconf.h	205;"	d
PNG_CHECK_cHRM_SUPPORTED	external/libpng/pngconf.h	139;"	d
PNG_CHUNK_NAME_LENGTH	external/libpng/png.h	750;"	d
PNG_COLOR_DIST	external/libpng/png.h	3008;"	d
PNG_COLOR_MASK_ALPHA	external/libpng/png.h	1059;"	d
PNG_COLOR_MASK_COLOR	external/libpng/png.h	1058;"	d
PNG_COLOR_MASK_PALETTE	external/libpng/png.h	1057;"	d
PNG_COLOR_TYPE_GA	external/libpng/png.h	1069;"	d
PNG_COLOR_TYPE_GRAY	external/libpng/png.h	1062;"	d
PNG_COLOR_TYPE_GRAY_ALPHA	external/libpng/png.h	1066;"	d
PNG_COLOR_TYPE_PALETTE	external/libpng/png.h	1063;"	d
PNG_COLOR_TYPE_RGB	external/libpng/png.h	1064;"	d
PNG_COLOR_TYPE_RGBA	external/libpng/png.h	1068;"	d
PNG_COLOR_TYPE_RGB_ALPHA	external/libpng/png.h	1065;"	d
PNG_COMPRESSION_TYPE_BASE	external/libpng/png.h	1072;"	d
PNG_COMPRESSION_TYPE_DEFAULT	external/libpng/png.h	1073;"	d
PNG_CONSOLE_IO_SUPPORTED	external/libpng/pngconf.h	300;"	d
PNG_CONST	external/libpng/pngconf.h	491;"	d
PNG_CONST	external/libpng/pngconf.h	493;"	d
PNG_CONVERT_tIME_SUPPORTED	external/libpng/pngconf.h	1186;"	d
PNG_COST_FACTOR	external/libpng/png.h	2962;"	d
PNG_COST_SHIFT	external/libpng/png.h	2961;"	d
PNG_CRC_DEFAULT	external/libpng/png.h	1903;"	d
PNG_CRC_ERROR_QUIT	external/libpng/png.h	1904;"	d
PNG_CRC_NO_CHANGE	external/libpng/png.h	1908;"	d
PNG_CRC_QUIET_USE	external/libpng/png.h	1907;"	d
PNG_CRC_WARN_DISCARD	external/libpng/png.h	1905;"	d
PNG_CRC_WARN_USE	external/libpng/png.h	1906;"	d
PNG_DEBUG	external/libpng/pngconf.h	271;"	d
PNG_DEBUG	external/libpng/pngtest.c	68;"	d	file:
PNG_DEBUG_FILE	external/libpng/png.h	2622;"	d
PNG_DEPRECATED	external/libpng/pngconf.h	1560;"	d
PNG_DEPRECATED	external/libpng/pngconf.h	1578;"	d
PNG_DEPSTRUCT	external/libpng/png.h	/^     png_charp current_text PNG_DEPSTRUCT;         \/* current text chunk buffer *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^     png_charp current_text_ptr PNG_DEPSTRUCT;     \/* current location in current_text *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^     png_size_t current_text_left PNG_DEPSTRUCT;   \/* how much text left to read in input *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^     png_size_t current_text_size PNG_DEPSTRUCT;   \/* current size of text input data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   double scal_pixel_height PNG_DEPSTRUCT;   \/* height of one pixel *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   double scal_pixel_width PNG_DEPSTRUCT;    \/* width of one pixel *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float background_gamma PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   float gamma PNG_DEPSTRUCT;          \/* file gamma value *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   float gamma PNG_DEPSTRUCT; \/* gamma value of image, if (valid & PNG_INFO_gAMA) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float screen_gamma PNG_DEPSTRUCT;   \/* screen gamma value (display_exponent) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   float x_blue PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float x_green PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float x_red PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float x_white PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float y_blue PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float y_green PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float y_red PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   float y_white PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   int cur_palette PNG_DEPSTRUCT;                  \/* current push library palette index *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int gamma_shift PNG_DEPSTRUCT;      \/* number of "insignificant" bits 16-bit gamma *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int max_text PNG_DEPSTRUCT; \/* current size of text array *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   int num_chunk_list PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int num_text PNG_DEPSTRUCT; \/* number of comments read\/to write *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   int process_mode PNG_DEPSTRUCT;                 \/* what push library is currently doing *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int zlib_level PNG_DEPSTRUCT;            \/* holds zlib compression level *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int zlib_mem_level PNG_DEPSTRUCT;        \/* holds zlib compression memory level *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int zlib_method PNG_DEPSTRUCT;           \/* holds zlib compression method *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int zlib_strategy PNG_DEPSTRUCT;         \/* holds zlib compression strategy *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   int zlib_window_bits PNG_DEPSTRUCT;      \/* holds zlib compression window bits *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte     mmx_bitdepth_threshold PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte background_gamma_type PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte bit_depth PNG_DEPSTRUCT;        \/* bit depth of file *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte bit_depth PNG_DEPSTRUCT;      \/* 1, 2, 4, 8, or 16 bits\/channel (from IHDR) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte channels PNG_DEPSTRUCT;         \/* number of channels in file *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte channels PNG_DEPSTRUCT;       \/* number of data channels per pixel (1, 2, 3, 4) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte chunk_name[5] PNG_DEPSTRUCT;    \/* null-terminated name of current chunk *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte color_type PNG_DEPSTRUCT;       \/* color type of file *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte color_type PNG_DEPSTRUCT;     \/* see PNG_COLOR_TYPE_ below (from IHDR) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte compression PNG_DEPSTRUCT;      \/* file compression type (always 0) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte compression_type PNG_DEPSTRUCT; \/* must be PNG_COMPRESSION_TYPE_BASE (IHDR) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte compression_type PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte do_filter PNG_DEPSTRUCT;        \/* row filter flags (see PNG_FILTER_ below ) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte filler PNG_DEPSTRUCT;           \/* filler byte for pixel expansion *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte filter PNG_DEPSTRUCT;           \/* file filter type (always 0) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte filter_type PNG_DEPSTRUCT;    \/* must be PNG_FILTER_TYPE_BASE (from IHDR) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte filter_type PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte heuristic_method PNG_DEPSTRUCT;        \/* heuristic for row filter selection *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte iccp_compression PNG_DEPSTRUCT; \/* Always zero *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte interlace_type PNG_DEPSTRUCT; \/* One of PNG_INTERLACE_NONE, PNG_INTERLACE_ADAM7 *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte interlaced PNG_DEPSTRUCT;       \/* PNG_INTERLACE_NONE, PNG_INTERLACE_ADAM7 *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte mng_features_permitted PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte num_prev_filters PNG_DEPSTRUCT;        \/* number of weights for previous rows *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte offset_unit_type PNG_DEPSTRUCT; \/* offset units type *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte pass PNG_DEPSTRUCT;             \/* current interlace pass (0 - 6) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte pcal_nparams PNG_DEPSTRUCT;   \/* number of parameters given in pcal_params *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte pcal_type PNG_DEPSTRUCT;      \/* equation type (see PNG_EQUATION_ below) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte phys_unit_type PNG_DEPSTRUCT; \/* resolution type (see PNG_RESOLUTION_ below) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte pixel_depth PNG_DEPSTRUCT;      \/* number of bits per pixel *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte pixel_depth PNG_DEPSTRUCT;    \/* number of bits per pixel *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte rgb_to_gray_status PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte scal_unit PNG_DEPSTRUCT;         \/* unit of physical scale *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte sig_bytes PNG_DEPSTRUCT;        \/* magic bytes read\/written from start of file *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte signature[8] PNG_DEPSTRUCT;   \/* magic bytes read by libpng from start of file *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte spare_byte PNG_DEPSTRUCT;     \/* to align the data, and for future use *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte srgb_intent PNG_DEPSTRUCT; \/* sRGB rendering intent [0, 1, 2, or 3] *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte user_transform_channels PNG_DEPSTRUCT; \/* channels in user transformed pixels *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte user_transform_depth PNG_DEPSTRUCT;    \/* bit depth of user transformed pixels *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte usr_bit_depth PNG_DEPSTRUCT;    \/* bit depth of users row *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_byte usr_channels PNG_DEPSTRUCT;     \/* channels at start of write *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep avg_row PNG_DEPSTRUCT;         \/* buffer to save "avg" row when filtering *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep big_row_buf PNG_DEPSTRUCT;        \/* buffer to save current (unfiltered) row *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep chunk_list PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep current_buffer PNG_DEPSTRUCT;         \/* buffer for recently used data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep current_buffer_ptr PNG_DEPSTRUCT;     \/* current location in current_buffer *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep dither_index PNG_DEPSTRUCT;           \/* index translation for palette files *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep dither_sort PNG_DEPSTRUCT;        \/* working sort array *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep gamma_from_1 PNG_DEPSTRUCT;    \/* converts from 1.0 to screen *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep gamma_table PNG_DEPSTRUCT;     \/* gamma table for 8-bit depth files *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep gamma_to_1 PNG_DEPSTRUCT;      \/* converts from file to 1.0 *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep index_to_palette PNG_DEPSTRUCT;   \/* where the original index currently is *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep offset_table PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep paeth_row PNG_DEPSTRUCT;       \/* buffer to save "Paeth" row when filtering *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep palette_lookup PNG_DEPSTRUCT;         \/* lookup table for dithering *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep palette_to_index PNG_DEPSTRUCT;   \/* which original index points to this *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep prev_filters PNG_DEPSTRUCT;           \/* filter type(s) of previous row(s) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep prev_row PNG_DEPSTRUCT;        \/* buffer to save previous (unfiltered) row *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep row_buf PNG_DEPSTRUCT;         \/* buffer to save current (unfiltered) row *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep save_buffer PNG_DEPSTRUCT;            \/* buffer for previously read data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep save_buffer_ptr PNG_DEPSTRUCT;        \/* current location in save_buffer *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep sub_row PNG_DEPSTRUCT;         \/* buffer to save "sub" row when filtering *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep trans PNG_DEPSTRUCT;           \/* transparency values for paletted files *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep trans PNG_DEPSTRUCT; \/* transparent values for paletted image *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep up_row PNG_DEPSTRUCT;          \/* buffer to save "up" row when filtering *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytep zbuf PNG_DEPSTRUCT;            \/* buffer for zlib *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytepp offset_table_ptr PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_bytepp row_pointers PNG_DEPSTRUCT;        \/* the image bits *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp iccp_name PNG_DEPSTRUCT;     \/* profile name *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp iccp_profile PNG_DEPSTRUCT;  \/* International Color Consortium profile data *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp pcal_purpose PNG_DEPSTRUCT;  \/* pCAL chunk description string *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp pcal_units PNG_DEPSTRUCT;    \/* Latin-1 string giving physical units *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp scal_s_height PNG_DEPSTRUCT;    \/* string containing width *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp scal_s_width PNG_DEPSTRUCT;     \/* string containing height *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charp time_buffer PNG_DEPSTRUCT;            \/* String to hold RFC 1123 time text *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_charpp pcal_params PNG_DEPSTRUCT;  \/* ASCII strings containing parameter values *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_16 background PNG_DEPSTRUCT;   \/* background color in screen gamma space *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_16 background PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_16 background_1 PNG_DEPSTRUCT; \/* background normalized to gamma 1.0 *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_16 trans_values PNG_DEPSTRUCT; \/* transparency values for non-paletted files *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_16 trans_values PNG_DEPSTRUCT; \/* transparent color for non-palette image *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_8 shift PNG_DEPSTRUCT;         \/* shift for significant bit tranformation *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_8 sig_bit PNG_DEPSTRUCT;       \/* significant bits in each available channel *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_color_8 sig_bit PNG_DEPSTRUCT; \/* significant bits in color channels *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_colorp palette PNG_DEPSTRUCT;        \/* palette from the input file *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_colorp palette PNG_DEPSTRUCT;      \/* array of color values (valid & PNG_INFO_PLTE) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_error_ptr error_fn PNG_DEPSTRUCT;    \/* function for printing errors and aborting *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_error_ptr warning_fn PNG_DEPSTRUCT;  \/* function for printing warnings *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_gamma PNG_DEPSTRUCT; \/* gamma of image, if (valid & PNG_INFO_gAMA) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_gamma PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_x_blue PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_x_green PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_x_red PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_x_white PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_y_blue PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_y_green PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_y_red PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_fixed_point int_y_white PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_flush_ptr output_flush_fn PNG_DEPSTRUCT; \/* Function for flushing output *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_free_ptr free_fn PNG_DEPSTRUCT;         \/* function for freeing memory *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_int_32 pcal_X0 PNG_DEPSTRUCT;      \/* minimum value *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_int_32 pcal_X1 PNG_DEPSTRUCT;      \/* maximum value *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_int_32 x_offset PNG_DEPSTRUCT; \/* x offset on page *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_int_32 y_offset PNG_DEPSTRUCT; \/* y offset on page *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_malloc_ptr malloc_fn PNG_DEPSTRUCT;     \/* function for allocating memory *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_progressive_end_ptr end_fn PNG_DEPSTRUCT;   \/* called after image is complete *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_progressive_info_ptr info_fn PNG_DEPSTRUCT; \/* called after header data fully read *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_progressive_row_ptr row_fn PNG_DEPSTRUCT;   \/* called after each prog. row is decoded *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_read_status_ptr read_row_fn PNG_DEPSTRUCT;   \/* called after each row is decoded *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_row_info row_info PNG_DEPSTRUCT;     \/* used for transformation routines *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_rw_ptr read_data_fn PNG_DEPSTRUCT;   \/* function for reading input data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_rw_ptr write_data_fn PNG_DEPSTRUCT;  \/* function for writing output data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_sPLT_tp splt_palettes PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_size_t buffer_size PNG_DEPSTRUCT;           \/* total amount of available input data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_size_t current_buffer_size PNG_DEPSTRUCT;   \/* amount of data now in current_buffer *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_size_t save_buffer_max PNG_DEPSTRUCT;       \/* total size of save_buffer *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_size_t save_buffer_size PNG_DEPSTRUCT;      \/* amount of data now in save_buffer *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_size_t unknown_chunks_num PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_size_t zbuf_size PNG_DEPSTRUCT;      \/* size of zbuf *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_textp text PNG_DEPSTRUCT; \/* array of comments read\/to write *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_time mod_time PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 filler PNG_DEPSTRUCT;           \/* filler bytes for pixel expansion *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 num_palette PNG_DEPSTRUCT;   \/* number of color entries in palette *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 num_palette PNG_DEPSTRUCT; \/* number of color entries in "palette" (PLTE) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 num_trans PNG_DEPSTRUCT;     \/* number of transparency values *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 num_trans PNG_DEPSTRUCT;   \/* number of transparent palette color (tRNS) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 offset_table_count PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 offset_table_count_free PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 offset_table_number PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 rgb_to_gray_blue_coeff PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 rgb_to_gray_green_coeff PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16 rgb_to_gray_red_coeff PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16p filter_costs PNG_DEPSTRUCT;        \/* relative filter calculation cost *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16p filter_weights PNG_DEPSTRUCT;      \/* weight(s) for previous line(s) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16p hist PNG_DEPSTRUCT;                \/* histogram *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16p hist PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16p inv_filter_costs PNG_DEPSTRUCT;    \/* 1\/relative filter calculation cost *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16p inv_filter_weights PNG_DEPSTRUCT;  \/* 1\/weight(s) for previous line(s) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16pp gamma_16_from_1 PNG_DEPSTRUCT; \/* converts from 1.0 to screen *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16pp gamma_16_table PNG_DEPSTRUCT; \/* gamma table for 16-bit depth files *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_16pp gamma_16_to_1 PNG_DEPSTRUCT; \/* converts from file to 1.0 *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32  asm_flags PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32  mmx_rowbytes_threshold PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 crc PNG_DEPSTRUCT;           \/* current chunk CRC value *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 flags PNG_DEPSTRUCT;         \/* flags indicating various things to libpng *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 flush_dist PNG_DEPSTRUCT;    \/* how many rows apart to flush, 0 - no flush *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 flush_rows PNG_DEPSTRUCT;    \/* number of rows written since last flush *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 free_me PNG_DEPSTRUCT;     \/* flags items libpng is responsible for freeing *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 free_me PNG_DEPSTRUCT;   \/* flags items libpng is responsible for freeing *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 height PNG_DEPSTRUCT;        \/* height of image in pixels *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 height PNG_DEPSTRUCT;      \/* height of image in pixels (from IHDR) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 iccp_proflen PNG_DEPSTRUCT;  \/* ICC profile data length *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 idat_size PNG_DEPSTRUCT;     \/* current IDAT size for read *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 iwidth PNG_DEPSTRUCT;        \/* width of current interlaced row in pixels *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 mng_features_permitted PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 mode PNG_DEPSTRUCT;          \/* tells us where we are in the PNG file *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 num_rows PNG_DEPSTRUCT;      \/* number of rows in current pass *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 push_length PNG_DEPSTRUCT;          \/* size of current input chunk *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 row_buf_size PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 row_number PNG_DEPSTRUCT;    \/* current row in interlace pass *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 rowbytes PNG_DEPSTRUCT;      \/* size of row in bytes *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 rowbytes PNG_DEPSTRUCT;    \/* bytes needed to hold an untransformed row *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 skip_length PNG_DEPSTRUCT;          \/* bytes to skip in input data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 splt_palettes_num PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 transformations PNG_DEPSTRUCT; \/* which transformations to perform *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 user_chunk_cache_max PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 user_height_max PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 user_width_max PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 usr_width PNG_DEPSTRUCT;     \/* width of row at start of write *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 valid PNG_DEPSTRUCT;       \/* valid chunk data (see PNG_INFO_ below) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 width PNG_DEPSTRUCT;         \/* width of image in pixels *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 width PNG_DEPSTRUCT;       \/* width of image in pixels (from IHDR) *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 x_pixels_per_unit PNG_DEPSTRUCT; \/* horizontal pixel density *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_uint_32 y_pixels_per_unit PNG_DEPSTRUCT; \/* vertical pixel density *\/$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_unknown_chunk unknown_chunk PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_unknown_chunkp unknown_chunks PNG_DEPSTRUCT;$/;"	m	struct:png_info_struct
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_user_chunk_ptr read_user_chunk_fn PNG_DEPSTRUCT; \/* user read chunk handler *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_user_transform_ptr read_user_transform_fn PNG_DEPSTRUCT; \/* user read transform *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_user_transform_ptr write_user_transform_fn PNG_DEPSTRUCT; \/* user write transform *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_voidp error_ptr PNG_DEPSTRUCT;       \/* user supplied struct for error functions *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_voidp io_ptr PNG_DEPSTRUCT;          \/* ptr to application struct for I\/O functions *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_voidp mem_ptr PNG_DEPSTRUCT;            \/* user supplied struct for mem functions *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_voidp user_chunk_ptr PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_voidp user_transform_ptr PNG_DEPSTRUCT; \/* user supplied struct for user transform *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   png_write_status_ptr write_row_fn PNG_DEPSTRUCT; \/* called after each row is encoded *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^   z_stream zstream PNG_DEPSTRUCT;          \/* pointer to decompression structure (below) *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^  png_charp chunkdata PNG_DEPSTRUCT;  \/* buffer for reading chunk data *\/$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^  png_uint_32 old_big_row_buf_size PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/png.h	/^  png_uint_32 old_prev_row_size PNG_DEPSTRUCT;$/;"	m	struct:png_struct_def
PNG_DEPSTRUCT	external/libpng/pngconf.h	1563;"	d
PNG_DEPSTRUCT	external/libpng/pngconf.h	1590;"	d
PNG_DESTROY_WILL_FREE_DATA	external/libpng/png.h	2164;"	d
PNG_DITHER	external/libpng/png.h	2926;"	d
PNG_DITHER_BLUE_BITS	external/libpng/pngconf.h	462;"	d
PNG_DITHER_GREEN_BITS	external/libpng/pngconf.h	459;"	d
PNG_DITHER_RED_BITS	external/libpng/pngconf.h	456;"	d
PNG_DLL	external/libpng/pngconf.h	1384;"	d
PNG_DLL	external/libpng/pngconf.h	211;"	d
PNG_DLL	external/libpng/pngconf.h	225;"	d
PNG_DLL	external/libpng/pngconf.h	233;"	d
PNG_DLL	external/libpng/pngconf.h	240;"	d
PNG_EASY_ACCESS_SUPPORTED	external/libpng/pngconf.h	789;"	d
PNG_EQUATION_ARBITRARY	external/libpng/png.h	1093;"	d
PNG_EQUATION_BASE_E	external/libpng/png.h	1092;"	d
PNG_EQUATION_HYPERBOLIC	external/libpng/png.h	1094;"	d
PNG_EQUATION_LAST	external/libpng/png.h	1095;"	d
PNG_EQUATION_LINEAR	external/libpng/png.h	1091;"	d
PNG_ERROR_MODE	external/libpng/pngpread.c	28;"	d	file:
PNG_ERROR_NUMBERS_SUPPORTED	external/libpng/pngconf.h	757;"	d
PNG_ERROR_TEXT_SUPPORTED	external/libpng/pngconf.h	135;"	d
PNG_EXPAND	external/libpng/png.h	2932;"	d
PNG_EXPAND_tRNS	external/libpng/png.h	2946;"	d
PNG_EXPORT	external/libpng/pngconf.h	1472;"	d
PNG_EXPORT	external/libpng/pngconf.h	1474;"	d
PNG_EXPORT	external/libpng/pngconf.h	1513;"	d
PNG_EXPORT	external/libpng/pngconf.h	1523;"	d
PNG_EXPORT_TYPE1	external/libpng/pngconf.h	1466;"	d
PNG_EXPORT_TYPE2	external/libpng/pngconf.h	1467;"	d
PNG_EXPORT_VAR	external/libpng/pngconf.h	1517;"	d
PNG_EXPORT_VAR	external/libpng/pngconf.h	1528;"	d
PNG_EXTERN	external/libpng/pngconf.h	408;"	d
PNG_FILLER	external/libpng/png.h	2935;"	d
PNG_FILLER_AFTER	external/libpng/png.h	1733;"	d
PNG_FILLER_BEFORE	external/libpng/png.h	1732;"	d
PNG_FILTER_AVG	external/libpng/png.h	1933;"	d
PNG_FILTER_HEURISTIC_DEFAULT	external/libpng/png.h	1987;"	d
PNG_FILTER_HEURISTIC_LAST	external/libpng/png.h	1990;"	d
PNG_FILTER_HEURISTIC_UNWEIGHTED	external/libpng/png.h	1988;"	d
PNG_FILTER_HEURISTIC_WEIGHTED	external/libpng/png.h	1989;"	d
PNG_FILTER_NONE	external/libpng/png.h	1930;"	d
PNG_FILTER_PAETH	external/libpng/png.h	1934;"	d
PNG_FILTER_SUB	external/libpng/png.h	1931;"	d
PNG_FILTER_TYPE_BASE	external/libpng/png.h	1076;"	d
PNG_FILTER_TYPE_DEFAULT	external/libpng/png.h	1078;"	d
PNG_FILTER_UP	external/libpng/png.h	1932;"	d
PNG_FILTER_VALUE_AVG	external/libpng/png.h	1944;"	d
PNG_FILTER_VALUE_LAST	external/libpng/png.h	1946;"	d
PNG_FILTER_VALUE_NONE	external/libpng/png.h	1941;"	d
PNG_FILTER_VALUE_PAETH	external/libpng/png.h	1945;"	d
PNG_FILTER_VALUE_SUB	external/libpng/png.h	1942;"	d
PNG_FILTER_VALUE_UP	external/libpng/png.h	1943;"	d
PNG_FIXED_POINT_SUPPORTED	external/libpng/pngconf.h	583;"	d
PNG_FLAG_ADD_ALPHA	external/libpng/png.h	2986;"	d
PNG_FLAG_CRC_ANCILLARY_MASK	external/libpng/png.h	2997;"	d
PNG_FLAG_CRC_ANCILLARY_NOWARN	external/libpng/png.h	2974;"	d
PNG_FLAG_CRC_ANCILLARY_USE	external/libpng/png.h	2973;"	d
PNG_FLAG_CRC_CRITICAL_IGNORE	external/libpng/png.h	2976;"	d
PNG_FLAG_CRC_CRITICAL_MASK	external/libpng/png.h	3000;"	d
PNG_FLAG_CRC_CRITICAL_USE	external/libpng/png.h	2975;"	d
PNG_FLAG_CRC_MASK	external/libpng/png.h	3003;"	d
PNG_FLAG_FILLER_AFTER	external/libpng/png.h	2972;"	d
PNG_FLAG_FREE_HIST	external/libpng/png.h	2979;"	d
PNG_FLAG_FREE_PLTE	external/libpng/png.h	2977;"	d
PNG_FLAG_FREE_TRNS	external/libpng/png.h	2978;"	d
PNG_FLAG_KEEP_UNKNOWN_CHUNKS	external/libpng/png.h	2980;"	d
PNG_FLAG_KEEP_UNSAFE_CHUNKS	external/libpng/png.h	2981;"	d
PNG_FLAG_LIBRARY_MISMATCH	external/libpng/png.h	2982;"	d
PNG_FLAG_MALLOC_NULL_MEM_OK	external/libpng/png.h	2985;"	d
PNG_FLAG_MNG_EMPTY_PLTE	external/libpng/png.h	1219;"	d
PNG_FLAG_MNG_FILTER_64	external/libpng/png.h	1220;"	d
PNG_FLAG_ROW_INIT	external/libpng/png.h	2971;"	d
PNG_FLAG_STRIP_ALPHA	external/libpng/png.h	2987;"	d
PNG_FLAG_STRIP_ERROR_NUMBERS	external/libpng/png.h	2983;"	d
PNG_FLAG_STRIP_ERROR_TEXT	external/libpng/png.h	2984;"	d
PNG_FLAG_ZLIB_CUSTOM_LEVEL	external/libpng/png.h	2966;"	d
PNG_FLAG_ZLIB_CUSTOM_MEM_LEVEL	external/libpng/png.h	2967;"	d
PNG_FLAG_ZLIB_CUSTOM_METHOD	external/libpng/png.h	2969;"	d
PNG_FLAG_ZLIB_CUSTOM_STRATEGY	external/libpng/png.h	2965;"	d
PNG_FLAG_ZLIB_CUSTOM_WINDOW_BITS	external/libpng/png.h	2968;"	d
PNG_FLAG_ZLIB_FINISHED	external/libpng/png.h	2970;"	d
PNG_FLOATING_POINT_SUPPORTED	external/libpng/pngconf.h	153;"	d
PNG_FREE_ALL	external/libpng/png.h	2179;"	d
PNG_FREE_HIST	external/libpng/png.h	2168;"	d
PNG_FREE_ICCP	external/libpng/png.h	2169;"	d
PNG_FREE_LIST	external/libpng/png.h	2175;"	d
PNG_FREE_ME_SUPPORTED	external/libpng/pngconf.h	587;"	d
PNG_FREE_MUL	external/libpng/png.h	2180;"	d
PNG_FREE_PCAL	external/libpng/png.h	2172;"	d
PNG_FREE_PLTE	external/libpng/png.h	2176;"	d
PNG_FREE_ROWS	external/libpng/png.h	2171;"	d
PNG_FREE_SCAL	external/libpng/png.h	2173;"	d
PNG_FREE_SPLT	external/libpng/png.h	2170;"	d
PNG_FREE_TEXT	external/libpng/png.h	2178;"	d
PNG_FREE_TRNS	external/libpng/png.h	2177;"	d
PNG_FREE_UNKN	external/libpng/png.h	2174;"	d
PNG_GAMMA	external/libpng/png.h	2933;"	d
PNG_GAMMA_THRESHOLD	external/libpng/pngconf.h	480;"	d
PNG_GRAY_TO_RGB	external/libpng/png.h	2934;"	d
PNG_H	external/libpng/png.h	458;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	external/libpng/pngconf.h	1057;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	external/libpng/pngconf.h	1207;"	d
PNG_HANDLE_CHUNK_ALWAYS	external/libpng/png.h	2718;"	d
PNG_HANDLE_CHUNK_ALWAYS	external/libpng/pngtest.c	889;"	d	file:
PNG_HANDLE_CHUNK_AS_DEFAULT	external/libpng/png.h	2715;"	d
PNG_HANDLE_CHUNK_IF_SAFE	external/libpng/png.h	2717;"	d
PNG_HANDLE_CHUNK_IF_SAFE	external/libpng/pngtest.c	896;"	d	file:
PNG_HANDLE_CHUNK_NEVER	external/libpng/png.h	2716;"	d
PNG_HAVE_CHUNK_AFTER_IDAT	external/libpng/png.h	2917;"	d
PNG_HAVE_CHUNK_HEADER	external/libpng/png.h	2912;"	d
PNG_HAVE_IDAT	external/libpng/png.h	2900;"	d
PNG_HAVE_IEND	external/libpng/png.h	2902;"	d
PNG_HAVE_IHDR	external/libpng/png.h	2898;"	d
PNG_HAVE_PLTE	external/libpng/png.h	2899;"	d
PNG_HAVE_PNG_SIGNATURE	external/libpng/png.h	2916;"	d
PNG_HAVE_cHRM	external/libpng/png.h	2910;"	d
PNG_HAVE_gAMA	external/libpng/png.h	2909;"	d
PNG_HAVE_sRGB	external/libpng/png.h	2911;"	d
PNG_HEADER_VERSION_STRING	external/libpng/png.h	468;"	d
PNG_HIMASK	external/libpng/pngwutil.c	2143;"	d	file:
PNG_HISHIFT	external/libpng/pngwutil.c	2141;"	d	file:
PNG_IDAT	external/libpng/png.h	3040;"	d
PNG_IEND	external/libpng/png.h	3041;"	d
PNG_IHDR	external/libpng/png.h	3039;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1426;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1427;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1444;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1461;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1476;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1478;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1487;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1489;"	d
PNG_IMPEXP	external/libpng/pngconf.h	1508;"	d
PNG_INFO_IDAT	external/libpng/png.h	1141;"	d
PNG_INFO_IMAGE_SUPPORTED	external/libpng/pngconf.h	1217;"	d
PNG_INFO_PLTE	external/libpng/png.h	1129;"	d
PNG_INFO_bKGD	external/libpng/png.h	1131;"	d
PNG_INFO_cHRM	external/libpng/png.h	1128;"	d
PNG_INFO_gAMA	external/libpng/png.h	1126;"	d
PNG_INFO_hIST	external/libpng/png.h	1132;"	d
PNG_INFO_iCCP	external/libpng/png.h	1138;"	d
PNG_INFO_oFFs	external/libpng/png.h	1134;"	d
PNG_INFO_pCAL	external/libpng/png.h	1136;"	d
PNG_INFO_pHYs	external/libpng/png.h	1133;"	d
PNG_INFO_sBIT	external/libpng/png.h	1127;"	d
PNG_INFO_sCAL	external/libpng/png.h	1140;"	d
PNG_INFO_sPLT	external/libpng/png.h	1139;"	d
PNG_INFO_sRGB	external/libpng/png.h	1137;"	d
PNG_INFO_tIME	external/libpng/png.h	1135;"	d
PNG_INFO_tRNS	external/libpng/png.h	1130;"	d
PNG_INTERLACE	external/libpng/png.h	2921;"	d
PNG_INTERLACE_ADAM7	external/libpng/png.h	1082;"	d
PNG_INTERLACE_LAST	external/libpng/png.h	1083;"	d
PNG_INTERLACE_NONE	external/libpng/png.h	1081;"	d
PNG_INTERNAL	external/libpng/png.c	14;"	d	file:
PNG_INTERNAL	external/libpng/pngerror.c	19;"	d	file:
PNG_INTERNAL	external/libpng/pngget.c	15;"	d	file:
PNG_INTERNAL	external/libpng/pngmem.c	20;"	d	file:
PNG_INTERNAL	external/libpng/pngpread.c	14;"	d	file:
PNG_INTERNAL	external/libpng/pngread.c	17;"	d	file:
PNG_INTERNAL	external/libpng/pngrio.c	21;"	d	file:
PNG_INTERNAL	external/libpng/pngrtran.c	19;"	d	file:
PNG_INTERNAL	external/libpng/pngrutil.c	17;"	d	file:
PNG_INTERNAL	external/libpng/pngset.c	19;"	d	file:
PNG_INTERNAL	external/libpng/pngtrans.c	14;"	d	file:
PNG_INTERNAL	external/libpng/pngwio.c	21;"	d	file:
PNG_INTERNAL	external/libpng/pngwrite.c	15;"	d	file:
PNG_INTERNAL	external/libpng/pngwtran.c	14;"	d	file:
PNG_INTERNAL	external/libpng/pngwutil.c	14;"	d	file:
PNG_INTRAPIXEL_DIFFERENCING	external/libpng/png.h	1077;"	d
PNG_INVERT_ALPHA	external/libpng/png.h	2939;"	d
PNG_INVERT_MONO	external/libpng/png.h	2925;"	d
PNG_ITXT_COMPRESSION_NONE	external/libpng/png.h	721;"	d
PNG_ITXT_COMPRESSION_zTXt	external/libpng/png.h	722;"	d
PNG_KEYWORD_MAX_LENGTH	external/libpng/png.h	1116;"	d
PNG_LIBPNG_BUILD_ALPHA	external/libpng/png.h	485;"	d
PNG_LIBPNG_BUILD_BASE_TYPE	external/libpng/png.h	499;"	d
PNG_LIBPNG_BUILD_BETA	external/libpng/png.h	486;"	d
PNG_LIBPNG_BUILD_PATCH	external/libpng/png.h	492;"	d
PNG_LIBPNG_BUILD_PRIVATE	external/libpng/png.h	494;"	d
PNG_LIBPNG_BUILD_RC	external/libpng/png.h	487;"	d
PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK	external/libpng/png.h	489;"	d
PNG_LIBPNG_BUILD_SPECIAL	external/libpng/png.h	496;"	d
PNG_LIBPNG_BUILD_STABLE	external/libpng/png.h	488;"	d
PNG_LIBPNG_BUILD_TYPE	external/libpng/png.h	531;"	d
PNG_LIBPNG_BUILD_TYPE	external/libpng/png.h	535;"	d
PNG_LIBPNG_BUILD_TYPE	external/libpng/png.h	538;"	d
PNG_LIBPNG_VER	external/libpng/png.h	507;"	d
PNG_LIBPNG_VER_BUILD	external/libpng/png.h	482;"	d
PNG_LIBPNG_VER_DLLNUM	external/libpng/png.h	472;"	d
PNG_LIBPNG_VER_MAJOR	external/libpng/png.h	475;"	d
PNG_LIBPNG_VER_MINOR	external/libpng/png.h	476;"	d
PNG_LIBPNG_VER_RELEASE	external/libpng/png.h	477;"	d
PNG_LIBPNG_VER_SONUM	external/libpng/png.h	471;"	d
PNG_LIBPNG_VER_STRING	external/libpng/png.h	467;"	d
PNG_LITERAL_LEFT_SQUARE_BRACKET	external/libpng/pngconf.h	883;"	d
PNG_LITERAL_RIGHT_SQUARE_BRACKET	external/libpng/pngconf.h	886;"	d
PNG_LITERAL_SHARP	external/libpng/pngconf.h	880;"	d
PNG_LOMASK	external/libpng/pngwutil.c	2142;"	d	file:
PNG_MAXSUM	external/libpng/pngwutil.c	2140;"	d	file:
PNG_MAX_ERROR_TEXT	external/libpng/pngerror.c	154;"	d	file:
PNG_MAX_GAMMA_8	external/libpng/pngconf.h	473;"	d
PNG_MAX_MALLOC_64K	external/libpng/pngconf.h	1270;"	d
PNG_MAX_MALLOC_64K	external/libpng/pngconf.h	166;"	d
PNG_MAX_PALETTE_LENGTH	external/libpng/png.h	1119;"	d
PNG_MAX_UINT	external/libpng/png.h	1052;"	d
PNG_MMX_CODE_SUPPORTED	external/libpng/pngconf.h	828;"	d
PNG_MMX_FLAGS	external/libpng/png.h	2741;"	d
PNG_MMX_READ_FLAGS	external/libpng/png.h	2733;"	d
PNG_MMX_WRITE_FLAGS	external/libpng/png.h	2739;"	d
PNG_MNG_FEATURES_SUPPORTED	external/libpng/pngconf.h	147;"	d
PNG_NORETURN	external/libpng/pngconf.h	1549;"	d
PNG_NORETURN	external/libpng/pngconf.h	1584;"	d
PNG_NO_CONSOLE_IO	external/libpng/pngconf.h	267;"	d
PNG_NO_CONSOLE_IO	external/libpng/pngconf.h	278;"	d
PNG_NO_CONSOLE_IO	external/libpng/pngconf.h	285;"	d
PNG_NO_EXTERN	external/libpng/png.c	15;"	d	file:
PNG_NO_FILTERS	external/libpng/png.h	1929;"	d
PNG_NO_FIXED_POINT_SUPPORTED	external/libpng/pngconf.h	577;"	d
PNG_NO_FREE_ME	external/libpng/pngconf.h	557;"	d
PNG_NO_HANDLE_AS_UNKNOWN	external/libpng/pngconf.h	1051;"	d
PNG_NO_HANDLE_AS_UNKNOWN	external/libpng/pngconf.h	560;"	d
PNG_NO_INFO_IMAGE	external/libpng/pngconf.h	570;"	d
PNG_NO_MMX_CODE	external/libpng/pngconf.h	811;"	d
PNG_NO_MMX_CODE	external/libpng/pngconf.h	817;"	d
PNG_NO_MMX_CODE	external/libpng/pngconf.h	823;"	d
PNG_NO_MNG_FEATURES	external/libpng/pngconf.h	576;"	d
PNG_NO_MODULEDEF	external/libpng/pngconf.h	1439;"	d
PNG_NO_PEDANTIC_WARNINGS	external/libpng/png.c	16;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngerror.c	20;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngget.c	16;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngmem.c	21;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngpread.c	15;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngread.c	18;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngrio.c	22;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngrtran.c	20;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngrutil.c	18;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngset.c	20;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngtrans.c	15;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngwio.c	22;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngwrite.c	16;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngwtran.c	15;"	d	file:
PNG_NO_PEDANTIC_WARNINGS	external/libpng/pngwutil.c	15;"	d	file:
PNG_NO_READ_EMPTY_PLTE	external/libpng/pngconf.h	575;"	d
PNG_NO_READ_RGB_TO_GRAY	external/libpng/pngconf.h	571;"	d
PNG_NO_READ_UNKNOWN_CHUNKS	external/libpng/pngconf.h	1048;"	d
PNG_NO_READ_UNKNOWN_CHUNKS	external/libpng/pngconf.h	558;"	d
PNG_NO_READ_USER_CHUNKS	external/libpng/pngconf.h	561;"	d
PNG_NO_READ_USER_TRANSFORM	external/libpng/pngconf.h	572;"	d
PNG_NO_READ_iCCP	external/libpng/pngconf.h	562;"	d
PNG_NO_READ_iTXt	external/libpng/pngconf.h	534;"	d
PNG_NO_READ_iTXt	external/libpng/pngconf.h	564;"	d
PNG_NO_READ_iTXt	external/libpng/pngconf.h	950;"	d
PNG_NO_READ_sCAL	external/libpng/pngconf.h	566;"	d
PNG_NO_READ_sPLT	external/libpng/pngconf.h	568;"	d
PNG_NO_READ_tEXt	external/libpng/pngconf.h	951;"	d
PNG_NO_READ_zTXt	external/libpng/pngconf.h	952;"	d
PNG_NO_USER_MEM	external/libpng/pngconf.h	574;"	d
PNG_NO_WRITE_UNKNOWN_CHUNKS	external/libpng/pngconf.h	559;"	d
PNG_NO_WRITE_USER_TRANSFORM	external/libpng/pngconf.h	573;"	d
PNG_NO_WRITE_iCCP	external/libpng/pngconf.h	563;"	d
PNG_NO_WRITE_iTXt	external/libpng/pngconf.h	1065;"	d
PNG_NO_WRITE_iTXt	external/libpng/pngconf.h	537;"	d
PNG_NO_WRITE_iTXt	external/libpng/pngconf.h	565;"	d
PNG_NO_WRITE_sCAL	external/libpng/pngconf.h	567;"	d
PNG_NO_WRITE_sPLT	external/libpng/pngconf.h	569;"	d
PNG_NO_WRITE_tEXt	external/libpng/pngconf.h	1066;"	d
PNG_NO_WRITE_zTXt	external/libpng/pngconf.h	1067;"	d
PNG_NO_iTXt_SUPPORTED	external/libpng/pngconf.h	531;"	d
PNG_OFFSET_LAST	external/libpng/png.h	1088;"	d
PNG_OFFSET_MICROMETER	external/libpng/png.h	1087;"	d
PNG_OFFSET_PIXEL	external/libpng/png.h	1086;"	d
PNG_OPTIMIZED_CODE_SUPPORTED	external/libpng/pngconf.h	799;"	d
PNG_OUT_OF_RANGE	external/libpng/png.h	3023;"	d
PNG_PACK	external/libpng/png.h	2922;"	d
PNG_PACKSWAP	external/libpng/png.h	2936;"	d
PNG_PEDANTIC_WARNINGS	external/libpng/pngtest.c	34;"	d	file:
PNG_PEDANTIC_WARNINGS_SUPPORTED	external/libpng/pngconf.h	1534;"	d
PNG_PLTE	external/libpng/png.h	3042;"	d
PNG_POINTER_INDEXING_SUPPORTED	external/libpng/pngconf.h	920;"	d
PNG_PREMULTIPLY_ALPHA	external/libpng/png.h	2947;"	d
PNG_PRIVATE	external/libpng/pngconf.h	1570;"	d
PNG_PRIVATE	external/libpng/pngconf.h	1593;"	d
PNG_PROGRESSIVE_READ_SUPPORTED	external/libpng/pngconf.h	657;"	d
PNG_READ_16_TO_8_SUPPORTED	external/libpng/pngconf.h	626;"	d
PNG_READ_ANCILLARY_CHUNKS_SUPPORTED	external/libpng/pngconf.h	938;"	d
PNG_READ_BACKGROUND_SUPPORTED	external/libpng/pngconf.h	623;"	d
PNG_READ_BGR_SUPPORTED	external/libpng/pngconf.h	608;"	d
PNG_READ_CHUNK_MODE	external/libpng/pngpread.c	21;"	d	file:
PNG_READ_COMPOSITE_NODIV_SUPPORTED	external/libpng/pngconf.h	673;"	d
PNG_READ_DITHER_SUPPORTED	external/libpng/pngconf.h	620;"	d
PNG_READ_DONE_MODE	external/libpng/pngpread.c	26;"	d	file:
PNG_READ_EMPTY_PLTE_SUPPORTED	external/libpng/pngconf.h	681;"	d
PNG_READ_EXPAND_SUPPORTED	external/libpng/pngconf.h	599;"	d
PNG_READ_FILLER_SUPPORTED	external/libpng/pngconf.h	629;"	d
PNG_READ_GAMMA_SUPPORTED	external/libpng/pngconf.h	632;"	d
PNG_READ_GRAY_TO_RGB_SUPPORTED	external/libpng/pngconf.h	635;"	d
PNG_READ_IDAT_MODE	external/libpng/pngpread.c	22;"	d	file:
PNG_READ_INTERLACING_SUPPORTED	external/libpng/pngconf.h	660;"	d
PNG_READ_INTERLACING_SUPPORTED	external/libpng/pngconf.h	669;"	d
PNG_READ_INVERT_ALPHA_SUPPORTED	external/libpng/pngconf.h	641;"	d
PNG_READ_INVERT_SUPPORTED	external/libpng/pngconf.h	617;"	d
PNG_READ_OPT_PLTE_SUPPORTED	external/libpng/pngconf.h	1027;"	d
PNG_READ_PACKSWAP_SUPPORTED	external/libpng/pngconf.h	614;"	d
PNG_READ_PACK_SUPPORTED	external/libpng/pngconf.h	605;"	d
PNG_READ_RGB_TO_GRAY_SUPPORTED	external/libpng/pngconf.h	650;"	d
PNG_READ_SHIFT_SUPPORTED	external/libpng/pngconf.h	602;"	d
PNG_READ_SIG_MODE	external/libpng/pngpread.c	20;"	d	file:
PNG_READ_STRIP_ALPHA_SUPPORTED	external/libpng/pngconf.h	644;"	d
PNG_READ_SUPPORTED	external/libpng/pngconf.h	109;"	d
PNG_READ_SWAP_ALPHA_SUPPORTED	external/libpng/pngconf.h	638;"	d
PNG_READ_SWAP_SUPPORTED	external/libpng/pngconf.h	611;"	d
PNG_READ_TEXT_SUPPORTED	external/libpng/pngconf.h	1031;"	d
PNG_READ_TRANSFORMS_SUPPORTED	external/libpng/pngconf.h	594;"	d
PNG_READ_UNKNOWN_CHUNKS_SUPPORTED	external/libpng/pngconf.h	1038;"	d
PNG_READ_USER_CHUNKS_SUPPORTED	external/libpng/pngconf.h	1045;"	d
PNG_READ_USER_TRANSFORM_SUPPORTED	external/libpng/pngconf.h	647;"	d
PNG_READ_bKGD_SUPPORTED	external/libpng/pngconf.h	955;"	d
PNG_READ_cHRM_SUPPORTED	external/libpng/pngconf.h	959;"	d
PNG_READ_gAMA_SUPPORTED	external/libpng/pngconf.h	963;"	d
PNG_READ_hIST_SUPPORTED	external/libpng/pngconf.h	967;"	d
PNG_READ_iCCP_SUPPORTED	external/libpng/pngconf.h	971;"	d
PNG_READ_iTXt	external/libpng/pngconf.h	543;"	d
PNG_READ_iTXt_MODE	external/libpng/pngpread.c	27;"	d	file:
PNG_READ_iTXt_SUPPORTED	external/libpng/pngconf.h	976;"	d
PNG_READ_oFFs_SUPPORTED	external/libpng/pngconf.h	983;"	d
PNG_READ_pCAL_SUPPORTED	external/libpng/pngconf.h	987;"	d
PNG_READ_pHYs_SUPPORTED	external/libpng/pngconf.h	995;"	d
PNG_READ_sBIT_SUPPORTED	external/libpng/pngconf.h	999;"	d
PNG_READ_sCAL_SUPPORTED	external/libpng/pngconf.h	991;"	d
PNG_READ_sPLT_SUPPORTED	external/libpng/pngconf.h	1003;"	d
PNG_READ_sRGB_SUPPORTED	external/libpng/pngconf.h	1007;"	d
PNG_READ_tEXt_MODE	external/libpng/pngpread.c	24;"	d	file:
PNG_READ_tEXt_SUPPORTED	external/libpng/pngconf.h	1011;"	d
PNG_READ_tIME_SUPPORTED	external/libpng/pngconf.h	1015;"	d
PNG_READ_tRNS_SUPPORTED	external/libpng/pngconf.h	1019;"	d
PNG_READ_zTXt_MODE	external/libpng/pngpread.c	25;"	d	file:
PNG_READ_zTXt_SUPPORTED	external/libpng/pngconf.h	1023;"	d
PNG_RESOLUTION_LAST	external/libpng/png.h	1106;"	d
PNG_RESOLUTION_METER	external/libpng/png.h	1105;"	d
PNG_RESOLUTION_UNKNOWN	external/libpng/png.h	1104;"	d
PNG_RGBA	external/libpng/png.h	2931;"	d
PNG_RGB_TO_GRAY	external/libpng/png.h	2943;"	d
PNG_RGB_TO_GRAY_ERR	external/libpng/png.h	2941;"	d
PNG_RGB_TO_GRAY_WARN	external/libpng/png.h	2942;"	d
PNG_ROWBYTES	external/libpng/png.h	3013;"	d
PNG_SAVE_BSD_SOURCE	external/libpng/pngconf.h	364;"	d
PNG_SAVE_BSD_SOURCE	external/libpng/pngconf.h	385;"	d
PNG_SCALE_LAST	external/libpng/png.h	1101;"	d
PNG_SCALE_METER	external/libpng/png.h	1099;"	d
PNG_SCALE_RADIAN	external/libpng/png.h	1100;"	d
PNG_SCALE_UNKNOWN	external/libpng/png.h	1098;"	d
PNG_SELECT_READ	external/libpng/png.h	2746;"	d
PNG_SELECT_WRITE	external/libpng/png.h	2747;"	d
PNG_SEQUENTIAL_READ_SUPPORTED	external/libpng/pngconf.h	666;"	d
PNG_SETJMP_SUPPORTED	external/libpng/pngconf.h	347;"	d
PNG_SET_USER_LIMITS_SUPPORTED	external/libpng/pngconf.h	845;"	d
PNG_SET_WILL_FREE_DATA	external/libpng/png.h	2165;"	d
PNG_SHIFT	external/libpng/png.h	2923;"	d
PNG_SIZE_MAX	external/libpng/png.h	1049;"	d
PNG_SKIP_MODE	external/libpng/pngpread.c	23;"	d	file:
PNG_STATIC	external/libpng/pngconf.h	214;"	d
PNG_STATIC	external/libpng/pngconf.h	219;"	d
PNG_STDIO_SUPPORTED	external/libpng/pngconf.h	261;"	d
PNG_STRING_NEWLINE	external/libpng/pngconf.h	891;"	d
PNG_STRIP_ALPHA	external/libpng/png.h	2938;"	d
PNG_STRUCT_INFO	external/libpng/png.h	2956;"	d
PNG_STRUCT_PNG	external/libpng/png.h	2955;"	d
PNG_SWAP_ALPHA	external/libpng/png.h	2937;"	d
PNG_SWAP_BYTES	external/libpng/png.h	2924;"	d
PNG_TEXT_COMPRESSION_LAST	external/libpng/png.h	723;"	d
PNG_TEXT_COMPRESSION_NONE	external/libpng/png.h	719;"	d
PNG_TEXT_COMPRESSION_NONE_WR	external/libpng/png.h	717;"	d
PNG_TEXT_COMPRESSION_zTXt	external/libpng/png.h	720;"	d
PNG_TEXT_COMPRESSION_zTXt_WR	external/libpng/png.h	718;"	d
PNG_TEXT_SUPPORTED	external/libpng/pngconf.h	1032;"	d
PNG_TEXT_SUPPORTED	external/libpng/pngconf.h	1177;"	d
PNG_TIME_RFC1123_SUPPORTED	external/libpng/pngconf.h	769;"	d
PNG_TRANSFORM_BGR	external/libpng/png.h	1207;"	d
PNG_TRANSFORM_EXPAND	external/libpng/png.h	1204;"	d
PNG_TRANSFORM_GRAY_TO_RGB	external/libpng/png.h	1216;"	d
PNG_TRANSFORM_IDENTITY	external/libpng/png.h	1199;"	d
PNG_TRANSFORM_INVERT_ALPHA	external/libpng/png.h	1210;"	d
PNG_TRANSFORM_INVERT_MONO	external/libpng/png.h	1205;"	d
PNG_TRANSFORM_PACKING	external/libpng/png.h	1202;"	d
PNG_TRANSFORM_PACKSWAP	external/libpng/png.h	1203;"	d
PNG_TRANSFORM_SHIFT	external/libpng/png.h	1206;"	d
PNG_TRANSFORM_STRIP_16	external/libpng/png.h	1200;"	d
PNG_TRANSFORM_STRIP_ALPHA	external/libpng/png.h	1201;"	d
PNG_TRANSFORM_STRIP_FILLER	external/libpng/png.h	1211;"	d
PNG_TRANSFORM_STRIP_FILLER_AFTER	external/libpng/png.h	1214;"	d
PNG_TRANSFORM_STRIP_FILLER_BEFORE	external/libpng/png.h	1213;"	d
PNG_TRANSFORM_SWAP_ALPHA	external/libpng/png.h	1208;"	d
PNG_TRANSFORM_SWAP_ENDIAN	external/libpng/png.h	1209;"	d
PNG_TYPECAST_NULL	external/libpng/pngconf.h	319;"	d
PNG_UINT_31_MAX	external/libpng/png.h	1047;"	d
PNG_UINT_32_MAX	external/libpng/png.h	1048;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	external/libpng/pngconf.h	1040;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	external/libpng/pngconf.h	1201;"	d
PNG_USER_CHUNKS_SUPPORTED	external/libpng/pngconf.h	1046;"	d
PNG_USER_CHUNK_CACHE_MAX	external/libpng/pngconf.h	871;"	d
PNG_USER_CHUNK_MALLOC_MAX	external/libpng/pngconf.h	876;"	d
PNG_USER_HEIGHT_MAX	external/libpng/pngconf.h	864;"	d
PNG_USER_LIMITS_SUPPORTED	external/libpng/pngconf.h	853;"	d
PNG_USER_MEM_SUPPORTED	external/libpng/pngconf.h	837;"	d
PNG_USER_PRIVATEBUILD	external/libpng/pngconf.h	31;"	d
PNG_USER_PRIVATEBUILD	external/libpng/pngconf.h	73;"	d
PNG_USER_TRANSFORM	external/libpng/png.h	2940;"	d
PNG_USER_TRANSFORM_PTR_SUPPORTED	external/libpng/pngconf.h	764;"	d
PNG_USER_WIDTH_MAX	external/libpng/pngconf.h	861;"	d
PNG_USER_WILL_FREE_DATA	external/libpng/png.h	2166;"	d
PNG_USE_DLL	external/libpng/pngconf.h	208;"	d
PNG_USE_DLL	external/libpng/pngconf.h	222;"	d
PNG_USE_DLL	external/libpng/pngconf.h	230;"	d
PNG_USE_DLL	external/libpng/pngconf.h	237;"	d
PNG_USE_GLOBAL_ARRAYS	external/libpng/pngconf.h	1393;"	d
PNG_USE_GLOBAL_ARRAYS	external/libpng/pngconf.h	1401;"	d
PNG_USE_GLOBAL_ARRAYS	external/libpng/pngconf.h	1419;"	d
PNG_USE_LOCAL_ARRAYS	external/libpng/pngconf.h	1396;"	d
PNG_USE_LOCAL_ARRAYS	external/libpng/pngconf.h	1406;"	d
PNG_USE_LOCAL_ARRAYS	external/libpng/pngconf.h	1417;"	d
PNG_USE_RESULT	external/libpng/pngconf.h	1546;"	d
PNG_USE_RESULT	external/libpng/pngconf.h	1581;"	d
PNG_WARNINGS_SUPPORTED	external/libpng/pngconf.h	131;"	d
PNG_WARN_UNINITIALIZED_ROW	external/libpng/pngconf.h	85;"	d
PNG_WEIGHT_FACTOR	external/libpng/png.h	2960;"	d
PNG_WEIGHT_SHIFT	external/libpng/png.h	2959;"	d
PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED	external/libpng/pngconf.h	944;"	d
PNG_WRITE_BGR_SUPPORTED	external/libpng/pngconf.h	702;"	d
PNG_WRITE_EMPTY_PLTE_SUPPORTED	external/libpng/pngconf.h	749;"	d
PNG_WRITE_FILLER_SUPPORTED	external/libpng/pngconf.h	714;"	d
PNG_WRITE_FILTER_SUPPORTED	external/libpng/pngconf.h	1195;"	d
PNG_WRITE_FLUSH_SUPPORTED	external/libpng/pngconf.h	743;"	d
PNG_WRITE_INTERLACING_SUPPORTED	external/libpng/pngconf.h	731;"	d
PNG_WRITE_INVERT_ALPHA_SUPPORTED	external/libpng/pngconf.h	721;"	d
PNG_WRITE_INVERT_SUPPORTED	external/libpng/pngconf.h	711;"	d
PNG_WRITE_PACKSWAP_SUPPORTED	external/libpng/pngconf.h	708;"	d
PNG_WRITE_PACK_SUPPORTED	external/libpng/pngconf.h	699;"	d
PNG_WRITE_SHIFT_SUPPORTED	external/libpng/pngconf.h	696;"	d
PNG_WRITE_SUPPORTED	external/libpng/pngconf.h	115;"	d
PNG_WRITE_SWAP_ALPHA_SUPPORTED	external/libpng/pngconf.h	717;"	d
PNG_WRITE_SWAP_SUPPORTED	external/libpng/pngconf.h	705;"	d
PNG_WRITE_TEXT_SUPPORTED	external/libpng/pngconf.h	1175;"	d
PNG_WRITE_TRANSFORMS_SUPPORTED	external/libpng/pngconf.h	691;"	d
PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED	external/libpng/pngconf.h	1199;"	d
PNG_WRITE_USER_TRANSFORM_SUPPORTED	external/libpng/pngconf.h	725;"	d
PNG_WRITE_WEIGHTED_FILTER_SUPPORTED	external/libpng/pngconf.h	739;"	d
PNG_WRITE_bKGD_SUPPORTED	external/libpng/pngconf.h	1070;"	d
PNG_WRITE_cHRM_SUPPORTED	external/libpng/pngconf.h	1076;"	d
PNG_WRITE_gAMA_SUPPORTED	external/libpng/pngconf.h	1082;"	d
PNG_WRITE_hIST_SUPPORTED	external/libpng/pngconf.h	1088;"	d
PNG_WRITE_iCCP_SUPPORTED	external/libpng/pngconf.h	1094;"	d
PNG_WRITE_iTXt	external/libpng/pngconf.h	546;"	d
PNG_WRITE_iTXt_SUPPORTED	external/libpng/pngconf.h	1101;"	d
PNG_WRITE_oFFs_SUPPORTED	external/libpng/pngconf.h	1108;"	d
PNG_WRITE_pCAL_SUPPORTED	external/libpng/pngconf.h	1114;"	d
PNG_WRITE_pHYs_SUPPORTED	external/libpng/pngconf.h	1126;"	d
PNG_WRITE_sBIT_SUPPORTED	external/libpng/pngconf.h	1132;"	d
PNG_WRITE_sCAL_SUPPORTED	external/libpng/pngconf.h	1120;"	d
PNG_WRITE_sPLT_SUPPORTED	external/libpng/pngconf.h	1138;"	d
PNG_WRITE_sRGB_SUPPORTED	external/libpng/pngconf.h	1144;"	d
PNG_WRITE_tEXt_SUPPORTED	external/libpng/pngconf.h	1150;"	d
PNG_WRITE_tIME_SUPPORTED	external/libpng/pngconf.h	1156;"	d
PNG_WRITE_tRNS_SUPPORTED	external/libpng/pngconf.h	1162;"	d
PNG_WRITE_zTXt_SUPPORTED	external/libpng/pngconf.h	1168;"	d
PNG_WROTE_INFO_BEFORE_PLTE	external/libpng/png.h	2914;"	d
PNG_WROTE_tIME	external/libpng/png.h	2913;"	d
PNG_ZBUF_SIZE	external/libpng/pngconf.h	103;"	d
PNG_ZBUF_SIZE	external/libpng/pngconf.h	1658;"	d
PNG_ZBUF_SIZE	external/libpng/pngconf.h	1659;"	d
PNG_bKGD	external/libpng/png.h	3043;"	d
PNG_bKGD_SUPPORTED	external/libpng/pngconf.h	1072;"	d
PNG_bKGD_SUPPORTED	external/libpng/pngconf.h	956;"	d
PNG_cHRM	external/libpng/png.h	3044;"	d
PNG_cHRM_SUPPORTED	external/libpng/pngconf.h	1078;"	d
PNG_cHRM_SUPPORTED	external/libpng/pngconf.h	960;"	d
PNG_gAMA	external/libpng/png.h	3045;"	d
PNG_gAMA_SUPPORTED	external/libpng/pngconf.h	1084;"	d
PNG_gAMA_SUPPORTED	external/libpng/pngconf.h	964;"	d
PNG_hIST	external/libpng/png.h	3046;"	d
PNG_hIST_SUPPORTED	external/libpng/pngconf.h	1090;"	d
PNG_hIST_SUPPORTED	external/libpng/pngconf.h	968;"	d
PNG_iCCP	external/libpng/png.h	3047;"	d
PNG_iCCP_SUPPORTED	external/libpng/pngconf.h	1096;"	d
PNG_iCCP_SUPPORTED	external/libpng/pngconf.h	972;"	d
PNG_iTXt	external/libpng/png.h	3048;"	d
PNG_iTXt_SUPPORTED	external/libpng/pngconf.h	1104;"	d
PNG_iTXt_SUPPORTED	external/libpng/pngconf.h	979;"	d
PNG_oFFs	external/libpng/png.h	3049;"	d
PNG_oFFs_SUPPORTED	external/libpng/pngconf.h	1110;"	d
PNG_oFFs_SUPPORTED	external/libpng/pngconf.h	984;"	d
PNG_pCAL	external/libpng/png.h	3050;"	d
PNG_pCAL_SUPPORTED	external/libpng/pngconf.h	1116;"	d
PNG_pCAL_SUPPORTED	external/libpng/pngconf.h	988;"	d
PNG_pHYs	external/libpng/png.h	3052;"	d
PNG_pHYs_SUPPORTED	external/libpng/pngconf.h	1128;"	d
PNG_pHYs_SUPPORTED	external/libpng/pngconf.h	996;"	d
PNG_sBIT	external/libpng/png.h	3053;"	d
PNG_sBIT_SUPPORTED	external/libpng/pngconf.h	1000;"	d
PNG_sBIT_SUPPORTED	external/libpng/pngconf.h	1134;"	d
PNG_sCAL	external/libpng/png.h	3051;"	d
PNG_sCAL_SUPPORTED	external/libpng/pngconf.h	1122;"	d
PNG_sCAL_SUPPORTED	external/libpng/pngconf.h	992;"	d
PNG_sPLT	external/libpng/png.h	3054;"	d
PNG_sPLT_SUPPORTED	external/libpng/pngconf.h	1004;"	d
PNG_sPLT_SUPPORTED	external/libpng/pngconf.h	1140;"	d
PNG_sRGB	external/libpng/png.h	3055;"	d
PNG_sRGB_INTENT_ABSOLUTE	external/libpng/png.h	1112;"	d
PNG_sRGB_INTENT_LAST	external/libpng/png.h	1113;"	d
PNG_sRGB_INTENT_PERCEPTUAL	external/libpng/png.h	1109;"	d
PNG_sRGB_INTENT_RELATIVE	external/libpng/png.h	1110;"	d
PNG_sRGB_INTENT_SATURATION	external/libpng/png.h	1111;"	d
PNG_sRGB_SUPPORTED	external/libpng/pngconf.h	1008;"	d
PNG_sRGB_SUPPORTED	external/libpng/pngconf.h	1146;"	d
PNG_tEXt	external/libpng/png.h	3056;"	d
PNG_tEXt_SUPPORTED	external/libpng/pngconf.h	1012;"	d
PNG_tEXt_SUPPORTED	external/libpng/pngconf.h	1152;"	d
PNG_tIME	external/libpng/png.h	3057;"	d
PNG_tIME_STRING_LENGTH	external/libpng/pngtest.c	89;"	d	file:
PNG_tIME_SUPPORTED	external/libpng/pngconf.h	1016;"	d
PNG_tIME_SUPPORTED	external/libpng/pngconf.h	1158;"	d
PNG_tRNS	external/libpng/png.h	3058;"	d
PNG_tRNS_SUPPORTED	external/libpng/pngconf.h	1020;"	d
PNG_tRNS_SUPPORTED	external/libpng/pngconf.h	1164;"	d
PNG_zTXt	external/libpng/png.h	3059;"	d
PNG_zTXt_SUPPORTED	external/libpng/pngconf.h	1024;"	d
PNG_zTXt_SUPPORTED	external/libpng/pngconf.h	1170;"	d
POLYCOLLISION_H	external/Box2d/Testbed/Tests/PolyCollision.h	20;"	d
POLY_SHAPES_H	external/Box2d/Testbed/Tests/PolyShapes.h	20;"	d
POS_A	external/Chipmunk/Demo/Joints.c	175;"	d	file:
POS_B	external/Chipmunk/Demo/Joints.c	176;"	d	file:
PRISMATIC_H	external/Box2d/Testbed/Tests/Prismatic.h	20;"	d
PULLEYS_H	external/Box2d/Testbed/Tests/Pulleys.h	20;"	d
PYRAMID_H	external/Box2d/Testbed/Tests/Pyramid.h	20;"	d
PaddleState	tests/TouchesTest/Paddle.h	/^} PaddleState;$/;"	t	typeref:enum:tagPaddleState
Pause	external/Box2d/Testbed/Framework/Main.cpp	/^void Pause(int)$/;"	f
Planet	external/Chipmunk/Demo/Planet.c	/^const chipmunkDemo Planet = {$/;"	v
Player	external/Chipmunk/Demo/Player.c	/^const chipmunkDemo Player = {$/;"	v
PlayerStruct	external/Chipmunk/Demo/Player.c	/^typedef struct PlayerStruct {$/;"	s	file:
PlayerStruct	external/Chipmunk/Demo/Player.c	/^} PlayerStruct;$/;"	t	typeref:struct:PlayerStruct	file:
Plink	external/Chipmunk/Demo/Plink.c	/^const chipmunkDemo Plink = {$/;"	v
PolyCollision	external/Box2d/Testbed/Tests/PolyCollision.h	/^	PolyCollision()$/;"	f	class:PolyCollision
PolyCollision	external/Box2d/Testbed/Tests/PolyCollision.h	/^class PolyCollision : public Test$/;"	c
PolyShapes	external/Box2d/Testbed/Tests/PolyShapes.h	/^	PolyShapes()$/;"	f	class:PolyShapes
PolyShapes	external/Box2d/Testbed/Tests/PolyShapes.h	/^class PolyShapes : public Test$/;"	c
PolyShapesCallback	external/Box2d/Testbed/Tests/PolyShapes.h	/^	PolyShapesCallback()$/;"	f	class:PolyShapesCallback
PolyShapesCallback	external/Box2d/Testbed/Tests/PolyShapes.h	/^class PolyShapesCallback : public b2QueryCallback$/;"	c
PostSolve	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual void PostSolve(b2Contact* contact, const b2ContactImpulse* impulse)$/;"	f	class:b2ContactListener
PostSolve	external/Box2d/Testbed/Framework/Test.h	/^	virtual void PostSolve(const b2Contact* contact, const b2ContactImpulse* impulse)$/;"	f	class:Test
PostSolve	external/Box2d/Testbed/Tests/Breakable.h	/^	void PostSolve(b2Contact* contact, const b2ContactImpulse* impulse)$/;"	f	class:Breakable
PostSolve	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		virtual void PostSolve(const b2Contact* contact, const b2ContactImpulse* impulse)$/;"	f	class:Test
PreSolve	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual void PreSolve(b2Contact* contact, const b2Manifold* oldManifold)$/;"	f	class:b2ContactListener
PreSolve	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::PreSolve(b2Contact* contact, const b2Manifold* oldManifold)$/;"	f	class:Test
PreSolve	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	void PreSolve(b2Contact* contact, const b2Manifold* oldManifold)$/;"	f	class:OneSidedPlatform
Prismatic	external/Box2d/Testbed/Tests/Prismatic.h	/^	Prismatic()$/;"	f	class:Prismatic
Prismatic	external/Box2d/Testbed/Tests/Prismatic.h	/^class Prismatic : public Test$/;"	c
Pulleys	external/Box2d/Testbed/Tests/Pulleys.h	/^	Pulleys()$/;"	f	class:Pulleys
Pulleys	external/Box2d/Testbed/Tests/Pulleys.h	/^class Pulleys : public Test$/;"	c
Pump	external/Chipmunk/Demo/Pump.c	/^const chipmunkDemo Pump = {$/;"	v
Pyramid	external/Box2d/Testbed/Tests/Pyramid.h	/^	Pyramid()$/;"	f	class:Pyramid
Pyramid	external/Box2d/Testbed/Tests/Pyramid.h	/^class Pyramid : public Test$/;"	c
PyramidStack	external/Chipmunk/Demo/PyramidStack.c	/^const chipmunkDemo PyramidStack = {$/;"	v
PyramidTopple	external/Chipmunk/Demo/PyramidTopple.c	/^const chipmunkDemo PyramidTopple = {$/;"	v
Query	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline void b2BroadPhase::Query(T* callback, const b2AABB& aabb) const$/;"	f	class:b2BroadPhase
Query	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^inline void b2DynamicTree::Query(T* callback, const b2AABB& aabb) const$/;"	f	class:b2DynamicTree
Query	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void Query()$/;"	f	class:DynamicTreeTest
Query	external/Chipmunk/Demo/Query.c	/^const chipmunkDemo Query = {$/;"	v
QueryAABB	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::QueryAABB(b2QueryCallback* callback, const b2AABB& aabb) const$/;"	f	class:b2World
QueryCallback	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^bool b2BroadPhase::QueryCallback(int32 proxyId)$/;"	f	class:b2BroadPhase
QueryCallback	external/Box2d/Box2D/Dynamics/b2World.cpp	/^	bool QueryCallback(int32 proxyId)$/;"	f	struct:b2WorldQueryWrapper
QueryCallback	external/Box2d/Testbed/Framework/Test.cpp	/^	QueryCallback(const b2Vec2& point)$/;"	f	class:QueryCallback
QueryCallback	external/Box2d/Testbed/Framework/Test.cpp	/^class QueryCallback : public b2QueryCallback$/;"	c	file:
QueryCallback	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	bool QueryCallback(int32 proxyId)$/;"	f	class:DynamicTreeTest
R	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat22 R;$/;"	m	struct:b2Transform
RAND_LIMIT	external/Box2d/Testbed/Framework/Test.h	32;"	d
RAND_LIMIT	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	41;"	d
RAY_CAST_H	external/Box2d/Testbed/Tests/RayCast.h	20;"	d
READFILE	external/libpng/pngtest.c	43;"	d	file:
READFILE	external/libpng/pngtest.c	51;"	d	file:
REG_TYPE	external/Tremor/mdct.h	25;"	d
RENDER_H	external/Box2d/Testbed/Framework/Render.h	20;"	d
RENDER_H	templates/cocos2d_box2d_app/Classes/GLES-Render.h	27;"	d
REPORT_ERROR	cocos2d/Support/OpenGL_Internal.h	65;"	d
REVOLUTE_H	external/Box2d/Testbed/Tests/Revolute.h	20;"	d
RandomFloat	external/Box2d/Testbed/Framework/Test.h	/^inline float32 RandomFloat()$/;"	f
RandomFloat	external/Box2d/Testbed/Framework/Test.h	/^inline float32 RandomFloat(float32 lo, float32 hi)$/;"	f
RandomFloat	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^inline float32 RandomFloat()$/;"	f
RandomFloat	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^inline float32 RandomFloat(float32 lo, float32 hi)$/;"	f
RayCast	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.cpp	/^bool b2CircleShape::RayCast(b2RayCastOutput* output, const b2RayCastInput& input, const b2Transform& transform) const$/;"	f	class:b2CircleShape
RayCast	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^bool b2PolygonShape::RayCast(b2RayCastOutput* output, const b2RayCastInput& input, const b2Transform& xf) const$/;"	f	class:b2PolygonShape
RayCast	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline void b2BroadPhase::RayCast(T* callback, const b2RayCastInput& input) const$/;"	f	class:b2BroadPhase
RayCast	external/Box2d/Box2D/Collision/b2Collision.cpp	/^bool b2AABB::RayCast(b2RayCastOutput* output, const b2RayCastInput& input) const$/;"	f	class:b2AABB
RayCast	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^inline void b2DynamicTree::RayCast(T* callback, const b2RayCastInput& input) const$/;"	f	class:b2DynamicTree
RayCast	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline bool b2Fixture::RayCast(b2RayCastOutput* output, const b2RayCastInput& input) const$/;"	f	class:b2Fixture
RayCast	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::RayCast(b2RayCastCallback* callback, const b2Vec2& point1, const b2Vec2& point2) const$/;"	f	class:b2World
RayCast	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void RayCast()$/;"	f	class:DynamicTreeTest
RayCast	external/Box2d/Testbed/Tests/RayCast.h	/^	RayCast()$/;"	f	class:RayCast
RayCast	external/Box2d/Testbed/Tests/RayCast.h	/^class RayCast : public Test$/;"	c
RayCastAnyCallback	external/Box2d/Testbed/Tests/RayCast.h	/^	RayCastAnyCallback()$/;"	f	class:RayCastAnyCallback
RayCastAnyCallback	external/Box2d/Testbed/Tests/RayCast.h	/^class RayCastAnyCallback : public b2RayCastCallback$/;"	c
RayCastCallback	external/Box2d/Box2D/Dynamics/b2World.cpp	/^	float32 RayCastCallback(const b2RayCastInput& input, int32 proxyId)$/;"	f	struct:b2WorldRayCastWrapper
RayCastCallback	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	float32 RayCastCallback(const b2RayCastInput& input, int32 proxyId)$/;"	f	class:DynamicTreeTest
RayCastClosestCallback	external/Box2d/Testbed/Tests/RayCast.h	/^	RayCastClosestCallback()$/;"	f	class:RayCastClosestCallback
RayCastClosestCallback	external/Box2d/Testbed/Tests/RayCast.h	/^class RayCastClosestCallback : public b2RayCastCallback$/;"	c
RayCastMultipleCallback	external/Box2d/Testbed/Tests/RayCast.h	/^	RayCastMultipleCallback()$/;"	f	class:RayCastMultipleCallback
RayCastMultipleCallback	external/Box2d/Testbed/Tests/RayCast.h	/^class RayCastMultipleCallback : public b2RayCastCallback$/;"	c
ReadCache	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	void ReadCache(	const b2SimplexCache* cache,$/;"	f	struct:b2Simplex
Rebalance	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^void b2DynamicTree::Rebalance(int32 iterations)$/;"	f	class:b2DynamicTree
RemoveLeaf	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^void b2DynamicTree::RemoveLeaf(int32 leaf)$/;"	f	class:b2DynamicTree
Report	external/Box2d/Box2D/Dynamics/b2Island.cpp	/^void b2Island::Report(const b2ContactConstraint* constraints)$/;"	f	class:b2Island
ReportFixture	external/Box2d/Testbed/Framework/Test.cpp	/^	bool ReportFixture(b2Fixture* fixture)$/;"	f	class:QueryCallback
ReportFixture	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	float32 ReportFixture(	b2Fixture* fixture, const b2Vec2& point,$/;"	f	class:EdgeShapesCallback
ReportFixture	external/Box2d/Testbed/Tests/PolyShapes.h	/^	bool ReportFixture(b2Fixture* fixture)$/;"	f	class:PolyShapesCallback
ReportFixture	external/Box2d/Testbed/Tests/RayCast.h	/^	float32 ReportFixture(	b2Fixture* fixture, const b2Vec2& point,$/;"	f	class:RayCastAnyCallback
ReportFixture	external/Box2d/Testbed/Tests/RayCast.h	/^	float32 ReportFixture(	b2Fixture* fixture, const b2Vec2& point,$/;"	f	class:RayCastClosestCallback
ReportFixture	external/Box2d/Testbed/Tests/RayCast.h	/^	float32 ReportFixture(	b2Fixture* fixture, const b2Vec2& point,$/;"	f	class:RayCastMultipleCallback
ResetMassData	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::ResetMassData()$/;"	f	class:b2Body
Resize	external/Box2d/Testbed/Framework/Main.cpp	/^void Resize(int32 w, int32 h)$/;"	f
Restart	external/Box2d/Testbed/Framework/Main.cpp	/^void Restart(int)$/;"	f
Revolute	external/Box2d/Testbed/Tests/Revolute.h	/^	Revolute()$/;"	f	class:Revolute
Revolute	external/Box2d/Testbed/Tests/Revolute.h	/^class Revolute : public Test$/;"	c
SCORE_SERVER_GETRANK_URL	cocoslive/CLScoreServerRequest.h	36;"	d
SCORE_SERVER_GETRANK_URL	cocoslive/CLScoreServerRequest.h	39;"	d
SCORE_SERVER_PROTOCOL_VERSION	cocoslive/CLScoreServerPost.h	37;"	d
SCORE_SERVER_REQUEST_URL	cocoslive/CLScoreServerRequest.h	35;"	d
SCORE_SERVER_REQUEST_URL	cocoslive/CLScoreServerRequest.h	38;"	d
SCORE_SERVER_SEND_URL	cocoslive/CLScoreServerPost.h	41;"	d
SCORE_SERVER_SEND_URL	cocoslive/CLScoreServerPost.h	44;"	d
SCORE_SERVER_UPDATE_URL	cocoslive/CLScoreServerPost.h	42;"	d
SCORE_SERVER_UPDATE_URL	cocoslive/CLScoreServerPost.h	45;"	d
SENSOR_TEST_H	external/Box2d/Testbed/Tests/SensorTest.h	20;"	d
SET_DELEGATE_METHOD_BIT	cocos2d/Support/OpenGL_Internal.h	80;"	d
SHAPE_EDITING_H	external/Box2d/Testbed/Tests/ShapeEditing.h	20;"	d
SHAPE_ID_COUNTER	external/Chipmunk/src/cpShape.c	/^cpHashValue SHAPE_ID_COUNTER = 0;$/;"	v
SINGLE_ROWBUF_ALLOC	external/libpng/pngtest.c	72;"	d	file:
SINGMAX	external/Chipmunk/Demo/MagnetsElectric.c	16;"	d	file:
SLIDER_CRANK_H	external/Box2d/Testbed/Tests/SliderCrank.h	20;"	d
SND_ID_BACKGROUND_MUSIC	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	18;"	d
SND_ID_FEMALE_HIT_EFFECT	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	21;"	d
SND_ID_MALE_HIT_EFFECT	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	20;"	d
SND_ID_SHOOT_EFFECT	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	19;"	d
SPHERE_STACK_H	external/Box2d/Testbed/Tests/SphereStack.h	20;"	d
STDERR	external/libpng/pngtest.c	104;"	d	file:
STIN	external/Tremor/os.h	27;"	d
STIN	external/Tremor/os.h	29;"	d
STIN	external/Tremor/os.h	32;"	d
STREAMSET	external/Tremor/ivorbisfile.h	50;"	d
SayGoodbye	external/Box2d/Testbed/Framework/Test.cpp	/^void DestructionListener::SayGoodbye(b2Joint* joint)$/;"	f	class:DestructionListener
SayGoodbye	external/Box2d/Testbed/Framework/Test.h	/^	void SayGoodbye(b2Fixture* fixture) { B2_NOT_USED(fixture); }$/;"	f	class:DestructionListener
SayGoodbye	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		void SayGoodbye(b2Fixture* fixture) { B2_NOT_USED(fixture); }$/;"	f	class:DestructionListener
SensorTest	external/Box2d/Testbed/Tests/SensorTest.h	/^	SensorTest()$/;"	f	class:SensorTest
SensorTest	external/Box2d/Testbed/Tests/SensorTest.h	/^class SensorTest : public Test$/;"	c
Sensors	external/Chipmunk/Demo/Sensors.c	/^const chipmunkDemo Sensors = {$/;"	v
Set	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^void b2PolygonShape::Set(const b2Vec2* vertices, int32 count)$/;"	f	class:b2PolygonShape
Set	external/Box2d/Box2D/Collision/b2Distance.cpp	/^void b2DistanceProxy::Set(const b2Shape* shape)$/;"	f	class:b2DistanceProxy
Set	external/Box2d/Box2D/Common/b2Math.h	/^	void Set(const b2Vec2& c1, const b2Vec2& c2)$/;"	f	struct:b2Mat22
Set	external/Box2d/Box2D/Common/b2Math.h	/^	void Set(const b2Vec2& p, float32 angle)$/;"	f	struct:b2Transform
Set	external/Box2d/Box2D/Common/b2Math.h	/^	void Set(float32 angle)$/;"	f	struct:b2Mat22
Set	external/Box2d/Box2D/Common/b2Math.h	/^	void Set(float32 x_, float32 y_) { x = x_; y = y_; }$/;"	f	struct:b2Vec2
Set	external/Box2d/Box2D/Common/b2Math.h	/^	void Set(float32 x_, float32 y_, float32 z_) { x = x_; y = y_; z = z_; }$/;"	f	struct:b2Vec3
Set	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline void b2Jacobian::Set(const b2Vec2& x1, float32 a1, const b2Vec2& x2, float32 a2)$/;"	f	class:b2Jacobian
Set	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	void Set(float32 ri, float32 gi, float32 bi) { r = ri; g = gi; b = bi; }$/;"	f	struct:b2Color
SetActive	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::SetActive(bool flag)$/;"	f	class:b2Body
SetAngularDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetAngularDamping(float32 angularDamping)$/;"	f	class:b2Body
SetAngularVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetAngularVelocity(float32 w)$/;"	f	class:b2Body
SetAsBox	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^void b2PolygonShape::SetAsBox(float32 hx, float32 hy)$/;"	f	class:b2PolygonShape
SetAsBox	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^void b2PolygonShape::SetAsBox(float32 hx, float32 hy, const b2Vec2& center, float32 angle)$/;"	f	class:b2PolygonShape
SetAsEdge	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^void b2PolygonShape::SetAsEdge(const b2Vec2& v1, const b2Vec2& v2)$/;"	f	class:b2PolygonShape
SetAutoClearForces	external/Box2d/Box2D/Dynamics/b2World.h	/^inline void b2World::SetAutoClearForces(bool flag)$/;"	f	class:b2World
SetAwake	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetAwake(bool flag)$/;"	f	class:b2Body
SetBullet	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetBullet(bool flag)$/;"	f	class:b2Body
SetContactFilter	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::SetContactFilter(b2ContactFilter* filter)$/;"	f	class:b2World
SetContactListener	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::SetContactListener(b2ContactListener* listener)$/;"	f	class:b2World
SetContinuousPhysics	external/Box2d/Box2D/Dynamics/b2World.h	/^	void SetContinuousPhysics(bool flag) { m_continuousPhysics = flag; }$/;"	f	class:b2World
SetDampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^inline void b2DistanceJoint::SetDampingRatio(float32 ratio)$/;"	f	class:b2DistanceJoint
SetDampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^void b2MouseJoint::SetDampingRatio(float32 ratio)$/;"	f	class:b2MouseJoint
SetDebugDraw	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::SetDebugDraw(b2DebugDraw* debugDraw)$/;"	f	class:b2World
SetDensity	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline void b2Fixture::SetDensity(float32 density)$/;"	f	class:b2Fixture
SetDestructionListener	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::SetDestructionListener(b2DestructionListener* listener)$/;"	f	class:b2World
SetEnabled	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^inline void b2Contact::SetEnabled(bool flag)$/;"	f	class:b2Contact
SetFilterData	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::SetFilterData(const b2Filter& filter)$/;"	f	class:b2Fixture
SetFixedRotation	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetFixedRotation(bool flag)$/;"	f	class:b2Body
SetFlags	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.cpp	/^void b2DebugDraw::SetFlags(uint32 flags)$/;"	f	class:b2DebugDraw
SetFrequency	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^inline void b2DistanceJoint::SetFrequency(float32 hz)$/;"	f	class:b2DistanceJoint
SetFrequency	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^void b2MouseJoint::SetFrequency(float32 hz)$/;"	f	class:b2MouseJoint
SetFriction	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline void b2Fixture::SetFriction(float32 friction)$/;"	f	class:b2Fixture
SetGravity	external/Box2d/Box2D/Dynamics/b2World.h	/^inline void b2World::SetGravity(const b2Vec2& gravity)$/;"	f	class:b2World
SetIdentity	external/Box2d/Box2D/Common/b2Math.h	/^	void SetIdentity()$/;"	f	struct:b2Mat22
SetIdentity	external/Box2d/Box2D/Common/b2Math.h	/^	void SetIdentity()$/;"	f	struct:b2Transform
SetLength	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^inline void b2DistanceJoint::SetLength(float32 length)$/;"	f	class:b2DistanceJoint
SetLimits	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::SetLimits(float32 lower, float32 upper)$/;"	f	class:b2LineJoint
SetLimits	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::SetLimits(float32 lower, float32 upper)$/;"	f	class:b2PrismaticJoint
SetLimits	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::SetLimits(float32 lower, float32 upper)$/;"	f	class:b2RevoluteJoint
SetLinearDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetLinearDamping(float32 linearDamping)$/;"	f	class:b2Body
SetLinearVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetLinearVelocity(const b2Vec2& v)$/;"	f	class:b2Body
SetMassData	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::SetMassData(const b2MassData* massData)$/;"	f	class:b2Body
SetMaxForce	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^void b2FrictionJoint::SetMaxForce(float32 force)$/;"	f	class:b2FrictionJoint
SetMaxForce	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^void b2MouseJoint::SetMaxForce(float32 force)$/;"	f	class:b2MouseJoint
SetMaxMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::SetMaxMotorForce(float32 force)$/;"	f	class:b2LineJoint
SetMaxMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::SetMaxMotorForce(float32 force)$/;"	f	class:b2PrismaticJoint
SetMaxMotorTorque	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::SetMaxMotorTorque(float32 torque)$/;"	f	class:b2RevoluteJoint
SetMaxTorque	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^void b2FrictionJoint::SetMaxTorque(float32 torque)$/;"	f	class:b2FrictionJoint
SetMotorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::SetMotorSpeed(float32 speed)$/;"	f	class:b2LineJoint
SetMotorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::SetMotorSpeed(float32 speed)$/;"	f	class:b2PrismaticJoint
SetMotorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::SetMotorSpeed(float32 speed)$/;"	f	class:b2RevoluteJoint
SetRatio	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^void b2GearJoint::SetRatio(float32 ratio)$/;"	f	class:b2GearJoint
SetRestitution	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline void b2Fixture::SetRestitution(float32 restitution)$/;"	f	class:b2Fixture
SetSensor	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::SetSensor(bool sensor)$/;"	f	class:b2Fixture
SetSleepingAllowed	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetSleepingAllowed(bool flag)$/;"	f	class:b2Body
SetTarget	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^void b2MouseJoint::SetTarget(const b2Vec2& target)$/;"	f	class:b2MouseJoint
SetTextLine	external/Box2d/Testbed/Framework/Test.h	/^	void SetTextLine(int32 line) { m_textLine = line; }$/;"	f	class:Test
SetTextLine	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		void SetTextLine(int32 line) { m_textLine = line; }$/;"	f	class:Test
SetTransform	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::SetTransform(const b2Vec2& position, float32 angle)$/;"	f	class:b2Body
SetType	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::SetType(b2BodyType type)$/;"	f	class:b2Body
SetUserData	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline void b2Joint::SetUserData(void* data)$/;"	f	class:b2Joint
SetUserData	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SetUserData(void* data)$/;"	f	class:b2Body
SetUserData	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline void b2Fixture::SetUserData(void* data)$/;"	f	class:b2Fixture
SetWarmStarting	external/Box2d/Box2D/Dynamics/b2World.h	/^	void SetWarmStarting(bool flag) { m_warmStarting = flag; }$/;"	f	class:b2World
SetZero	external/Box2d/Box2D/Common/b2Math.h	/^	void SetZero() { x = 0.0f; y = 0.0f; z = 0.0f; }$/;"	f	struct:b2Vec3
SetZero	external/Box2d/Box2D/Common/b2Math.h	/^	void SetZero() { x = 0.0f; y = 0.0f; }$/;"	f	struct:b2Vec2
SetZero	external/Box2d/Box2D/Common/b2Math.h	/^	void SetZero()$/;"	f	struct:b2Mat22
SetZero	external/Box2d/Box2D/Common/b2Math.h	/^	void SetZero()$/;"	f	struct:b2Mat33
SetZero	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^inline void b2Jacobian::SetZero()$/;"	f	class:b2Jacobian
Settings	external/Box2d/Testbed/Framework/Test.h	/^	Settings() :$/;"	f	struct:Settings
Settings	external/Box2d/Testbed/Framework/Test.h	/^struct Settings$/;"	s
Settings	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	Settings() :$/;"	f	struct:Settings
Settings	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^struct Settings$/;"	s
ShapeEditing	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	ShapeEditing()$/;"	f	class:ShapeEditing
ShapeEditing	external/Box2d/Testbed/Tests/ShapeEditing.h	/^class ShapeEditing : public Test$/;"	c
ShiftMouseDown	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::ShiftMouseDown(const b2Vec2& p)$/;"	f	class:Test
ShouldCollide	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^bool b2Body::ShouldCollide(const b2Body* other) const$/;"	f	class:b2Body
ShouldCollide	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.cpp	/^bool b2ContactFilter::ShouldCollide(b2Fixture* fixtureA, b2Fixture* fixtureB)$/;"	f	class:b2ContactFilter
Simple	external/Chipmunk/Demo/Simple.c	/^const chipmunkDemo Simple = {$/;"	v
SimulationLoop	external/Box2d/Testbed/Framework/Main.cpp	/^void SimulationLoop()$/;"	f
Sing	external/Chipmunk/Demo/MagnetsElectric.c	/^}Sing;$/;"	t	typeref:struct:ActorSingularity	file:
SingForceFunc	external/Chipmunk/Demo/MagnetsElectric.c	/^typedef void (*SingForceFunc)(struct DataforForce* data);$/;"	t	file:
SingleStep	external/Box2d/Testbed/Framework/Main.cpp	/^void SingleStep(int)$/;"	f
SliderCrank	external/Box2d/Testbed/Tests/SliderCrank.h	/^	SliderCrank()$/;"	f	class:SliderCrank
SliderCrank	external/Box2d/Testbed/Tests/SliderCrank.h	/^class SliderCrank : public Test$/;"	c
Solve	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 Solve(const b2Vec2& b) const$/;"	f	struct:b2Mat22
Solve	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^bool b2TOISolver::Solve(float32 baumgarte)$/;"	f	class:b2TOISolver
Solve	external/Box2d/Box2D/Dynamics/b2Island.cpp	/^void b2Island::Solve(const b2TimeStep& step, const b2Vec2& gravity, bool allowSleep)$/;"	f	class:b2Island
Solve	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::Solve(const b2TimeStep& step)$/;"	f	class:b2World
Solve2	external/Box2d/Box2D/Collision/b2Distance.cpp	/^void b2Simplex::Solve2()$/;"	f	class:b2Simplex
Solve22	external/Box2d/Box2D/Common/b2Math.cpp	/^b2Vec2 b2Mat33::Solve22(const b2Vec2& b) const$/;"	f	class:b2Mat33
Solve3	external/Box2d/Box2D/Collision/b2Distance.cpp	/^void b2Simplex::Solve3()$/;"	f	class:b2Simplex
Solve33	external/Box2d/Box2D/Common/b2Math.cpp	/^b2Vec3 b2Mat33::Solve33(const b2Vec3& b) const$/;"	f	class:b2Mat33
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^bool b2ContactSolver::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2ContactSolver
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^bool b2DistanceJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2DistanceJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^bool b2FrictionJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2FrictionJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^bool b2GearJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2GearJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^bool b2LineJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2LineJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	bool SolvePositionConstraints(float32 baumgarte) { B2_NOT_USED(baumgarte); return true; }$/;"	f	class:b2MouseJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^bool b2PrismaticJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2PrismaticJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^bool b2PulleyJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2PulleyJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^bool b2RevoluteJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2RevoluteJoint
SolvePositionConstraints	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^bool b2WeldJoint::SolvePositionConstraints(float32 baumgarte)$/;"	f	class:b2WeldJoint
SolveTOI	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::SolveTOI()$/;"	f	class:b2World
SolveTOI	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::SolveTOI(b2Body* body)$/;"	f	class:b2World
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^void b2ContactSolver::SolveVelocityConstraints()$/;"	f	class:b2ContactSolver
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^void b2DistanceJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2DistanceJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^void b2FrictionJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2FrictionJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^void b2GearJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2GearJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^void b2LineJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2LineJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^void b2MouseJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2MouseJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^void b2PrismaticJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2PrismaticJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^void b2PulleyJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2PulleyJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^void b2RevoluteJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2RevoluteJoint
SolveVelocityConstraints	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^void b2WeldJoint::SolveVelocityConstraints(const b2TimeStep& step)$/;"	f	class:b2WeldJoint
SpawnBomb	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::SpawnBomb(const b2Vec2& worldPt)$/;"	f	class:Test
SphereStack	external/Box2d/Testbed/Tests/SphereStack.h	/^	SphereStack()$/;"	f	class:SphereStack
SphereStack	external/Box2d/Testbed/Tests/SphereStack.h	/^class SphereStack : public Test$/;"	c
Springies	external/Chipmunk/Demo/Springies.c	/^const chipmunkDemo Springies = {$/;"	v
SpriteSheetMarginFix	tools/spritesheet-artifact-fixer.py	/^class SpriteSheetMarginFix(object):$/;"	c
State	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	enum State$/;"	g	struct:b2TOIOutput
State	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	enum State$/;"	g	class:OneSidedPlatform
Step	external/Box2d/Box2D/Dynamics/b2World.cpp	/^void b2World::Step(float32 dt, int32 velocityIterations, int32 positionIterations)$/;"	f	class:b2World
Step	external/Box2d/Testbed/Framework/Test.cpp	/^void Test::Step(Settings* settings)$/;"	f	class:Test
Step	external/Box2d/Testbed/Tests/BodyTypes.h	/^	void Step(Settings* settings)$/;"	f	class:BodyTypes
Step	external/Box2d/Testbed/Tests/Breakable.h	/^	void Step(Settings* settings)$/;"	f	class:Breakable
Step	external/Box2d/Testbed/Tests/CharacterCollision.h	/^	void Step(Settings* settings)$/;"	f	class:CharacterCollision
Step	external/Box2d/Testbed/Tests/CollisionProcessing.h	/^	void Step(Settings* settings)$/;"	f	class:CollisionProcessing
Step	external/Box2d/Testbed/Tests/Confined.h	/^	void Step(Settings* settings)$/;"	f	class:Confined
Step	external/Box2d/Testbed/Tests/ContinuousTest.h	/^	void Step(Settings* settings)$/;"	f	class:ContinuousTest
Step	external/Box2d/Testbed/Tests/DistanceTest.h	/^	void Step(Settings* settings)$/;"	f	class:DistanceTest
Step	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	void Step(Settings* settings)$/;"	f	class:DynamicTreeTest
Step	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	void Step(Settings* settings)$/;"	f	class:EdgeShapes
Step	external/Box2d/Testbed/Tests/ElasticBody.h	/^	void Step(Settings* settings)$/;"	f	class:ElasticBody
Step	external/Box2d/Testbed/Tests/Gears.h	/^	void Step(Settings* settings)$/;"	f	class:Gears
Step	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	void Step(Settings* settings)$/;"	f	class:OneSidedPlatform
Step	external/Box2d/Testbed/Tests/PolyCollision.h	/^	void Step(Settings* settings)$/;"	f	class:PolyCollision
Step	external/Box2d/Testbed/Tests/PolyShapes.h	/^	void Step(Settings* settings)$/;"	f	class:PolyShapes
Step	external/Box2d/Testbed/Tests/Prismatic.h	/^	void Step(Settings* settings)$/;"	f	class:Prismatic
Step	external/Box2d/Testbed/Tests/Pulleys.h	/^	void Step(Settings* settings)$/;"	f	class:Pulleys
Step	external/Box2d/Testbed/Tests/RayCast.h	/^	void Step(Settings* settings)$/;"	f	class:RayCast
Step	external/Box2d/Testbed/Tests/Revolute.h	/^	void Step(Settings* settings)$/;"	f	class:Revolute
Step	external/Box2d/Testbed/Tests/SensorTest.h	/^	void Step(Settings* settings)$/;"	f	class:SensorTest
Step	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	void Step(Settings* settings)$/;"	f	class:ShapeEditing
Step	external/Box2d/Testbed/Tests/SliderCrank.h	/^	void Step(Settings* settings)$/;"	f	class:SliderCrank
Step	external/Box2d/Testbed/Tests/SphereStack.h	/^	void Step(Settings* settings)$/;"	f	class:SphereStack
Step	external/Box2d/Testbed/Tests/TheoJansen.h	/^	void Step(Settings* settings)$/;"	f	class:TheoJansen
Step	external/Box2d/Testbed/Tests/TimeOfImpact.h	/^	void Step(Settings* settings)$/;"	f	class:TimeOfImpact
Step	external/Box2d/Testbed/Tests/VerticalStack.h	/^	void Step(Settings* settings)$/;"	f	class:VerticalStack
Step	external/Box2d/Testbed/Tests/Web.h	/^	void Step(Settings* settings)$/;"	f	class:Web
StoreImpulses	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^void b2ContactSolver::StoreImpulses()$/;"	f	class:b2ContactSolver
StringIO	tools/tmx-embeded-2-png.py	/^from cStringIO import StringIO$/;"	i
Synchronize	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^void b2Fixture::Synchronize(b2BroadPhase* broadPhase, const b2Transform& transform1, const b2Transform& transform2)$/;"	f	class:b2Fixture
SynchronizeFixtures	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^void b2Body::SynchronizeFixtures()$/;"	f	class:b2Body
SynchronizeTransform	external/Box2d/Box2D/Dynamics/b2Body.h	/^inline void b2Body::SynchronizeTransform()$/;"	f	class:b2Body
T	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat T;$/;"	m	struct:DataforForce	file:
TEST_DELEGATE_METHOD_BIT	cocos2d/Support/OpenGL_Internal.h	79;"	d
TEST_H	external/Box2d/Testbed/Framework/Test.h	20;"	d
TEST_H	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	28;"	d
TGA_ERROR_COMPRESSED_FILE	cocos2d/Support/TGAlib.h	/^	TGA_ERROR_COMPRESSED_FILE,$/;"	e	enum:__anon40
TGA_ERROR_FILE_OPEN	cocos2d/Support/TGAlib.h	/^	TGA_ERROR_FILE_OPEN,$/;"	e	enum:__anon40
TGA_ERROR_INDEXED_COLOR	cocos2d/Support/TGAlib.h	/^	TGA_ERROR_INDEXED_COLOR,$/;"	e	enum:__anon40
TGA_ERROR_MEMORY	cocos2d/Support/TGAlib.h	/^	TGA_ERROR_MEMORY,$/;"	e	enum:__anon40
TGA_ERROR_READING_FILE	cocos2d/Support/TGAlib.h	/^	TGA_ERROR_READING_FILE,$/;"	e	enum:__anon40
TGA_OK	cocos2d/Support/TGAlib.h	/^	TGA_OK,$/;"	e	enum:__anon40
THEO_JANSEN_H	external/Box2d/Testbed/Tests/TheoJansen.h	23;"	d
TICK_IMP	cocos2d/CCScheduler.h	/^typedef void (*TICK_IMP)(id, SEL, ccTime);$/;"	t
TIME_OF_IMPACT_H	external/Box2d/Testbed/Tests/TimeOfImpact.h	20;"	d
TMXLayerAttribBase64	cocos2d/CCTMXXMLParser.h	/^	TMXLayerAttribBase64 = 1 << 1,$/;"	e	enum:__anon20
TMXLayerAttribGzip	cocos2d/CCTMXXMLParser.h	/^	TMXLayerAttribGzip = 1 << 2,$/;"	e	enum:__anon20
TMXLayerAttribNone	cocos2d/CCTMXXMLParser.h	/^	TMXLayerAttribNone = 1 << 0,$/;"	e	enum:__anon20
TMXPropertyLayer	cocos2d/CCTMXXMLParser.h	/^	TMXPropertyLayer,$/;"	e	enum:__anon21
TMXPropertyMap	cocos2d/CCTMXXMLParser.h	/^	TMXPropertyMap,$/;"	e	enum:__anon21
TMXPropertyNone	cocos2d/CCTMXXMLParser.h	/^	TMXPropertyNone,$/;"	e	enum:__anon21
TMXPropertyObject	cocos2d/CCTMXXMLParser.h	/^	TMXPropertyObject,$/;"	e	enum:__anon21
TMXPropertyObjectGroup	cocos2d/CCTMXXMLParser.h	/^	TMXPropertyObjectGroup,$/;"	e	enum:__anon21
TMXPropertyTile	cocos2d/CCTMXXMLParser.h	/^	TMXPropertyTile$/;"	e	enum:__anon21
TeardownOpenAL	experimental/sound-engine/MyOpenALSupport.h	/^void TeardownOpenAL()$/;"	f
Test	external/Box2d/Testbed/Framework/Test.cpp	/^Test::Test()$/;"	f	class:Test
Test	external/Box2d/Testbed/Framework/Test.h	/^class Test : public b2ContactListener$/;"	c
Test	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^class Test : public b2ContactListener$/;"	c
TestCreateFcn	external/Box2d/Testbed/Framework/Test.h	/^typedef Test* TestCreateFcn();$/;"	t
TestCreateFcn	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^typedef Test* TestCreateFcn();$/;"	t
TestEntry	external/Box2d/Testbed/Framework/Test.h	/^struct TestEntry$/;"	s
TestEntry	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^struct TestEntry$/;"	s
TestOverlap	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline bool b2BroadPhase::TestOverlap(int32 proxyIdA, int32 proxyIdB) const$/;"	f	class:b2BroadPhase
TestPoint	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.cpp	/^bool b2CircleShape::TestPoint(const b2Transform& transform, const b2Vec2& p) const$/;"	f	class:b2CircleShape
TestPoint	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp	/^bool b2PolygonShape::TestPoint(const b2Transform& xf, const b2Vec2& p) const$/;"	f	class:b2PolygonShape
TestPoint	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^inline bool b2Fixture::TestPoint(const b2Vec2& p) const$/;"	f	class:b2Fixture
TheoJansen	external/Box2d/Testbed/Tests/TheoJansen.h	/^	TheoJansen()$/;"	f	class:TheoJansen
TheoJansen	external/Box2d/Testbed/Tests/TheoJansen.h	/^class TheoJansen : public Test$/;"	c
TheoJansen	external/Chipmunk/Demo/TheoJansen.c	/^const chipmunkDemo TheoJansen = {$/;"	v
TimeOfImpact	external/Box2d/Testbed/Tests/TimeOfImpact.h	/^	TimeOfImpact()$/;"	f	class:TimeOfImpact
TimeOfImpact	external/Box2d/Testbed/Tests/TimeOfImpact.h	/^class TimeOfImpact : public Test$/;"	c
Timer	external/Box2d/Testbed/Framework/Main.cpp	/^void Timer(int)$/;"	f
Tumble	external/Chipmunk/Demo/Tumble.c	/^const chipmunkDemo Tumble = {$/;"	v
Type	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	enum Type$/;"	g	class:b2Shape
Type	external/Box2d/Box2D/Collision/b2Collision.h	/^	enum Type$/;"	g	struct:b2Manifold
Type	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	enum Type$/;"	g	struct:b2SeparationFunction	file:
USE_FAR_KEYWORD	external/libpng/pngconf.h	1275;"	d
USE_FAR_KEYWORD	external/libpng/pngconf.h	1294;"	d
UTHASH_H	cocos2d/Support/uthash.h	25;"	d
UTHASH_VERSION	cocos2d/Support/uthash.h	65;"	d
UTLIST_H	cocos2d/Support/utlist.h	25;"	d
UTLIST_VERSION	cocos2d/Support/utlist.h	27;"	d
UT_hash_bucket	cocos2d/Support/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	cocos2d/Support/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	cocos2d/Support/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	cocos2d/Support/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	cocos2d/Support/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	cocos2d/Support/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UnBufferMove	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^void b2BroadPhase::UnBufferMove(int32 proxyId)$/;"	f	class:b2BroadPhase
UnsafeOps	external/Chipmunk/Demo/UnsafeOps.c	/^const chipmunkDemo UnsafeOps = {$/;"	v
Update	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^void b2Contact::Update(b2ContactListener* listener)$/;"	f	class:b2Contact
UpdatePairs	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^void b2BroadPhase::UpdatePairs(T* callback)$/;"	f	class:b2BroadPhase
VARYING_FRICTION_H	external/Box2d/Testbed/Tests/VaryingFriction.h	20;"	d
VARYING_RESTITUTION_H	external/Box2d/Testbed/Tests/VaryingRestitution.h	20;"	d
VERTICAL_STACK_H	external/Box2d/Testbed/Tests/VerticalStack.h	20;"	d
VFLOAT_ADD	external/Tremor/misc.h	/^STIN ogg_int32_t VFLOAT_ADD(ogg_int32_t a,ogg_int32_t ap,$/;"	f
VFLOAT_MULT	external/Tremor/misc.h	/^STIN ogg_int32_t VFLOAT_MULT(ogg_int32_t a,ogg_int32_t ap,$/;"	f
VFLOAT_MULTI	external/Tremor/misc.h	/^STIN ogg_int32_t VFLOAT_MULTI(ogg_int32_t a,ogg_int32_t ap,$/;"	f
VIF_CLASS	external/Tremor/backends.h	59;"	d
VIF_PARTS	external/Tremor/backends.h	60;"	d
VIF_POSIT	external/Tremor/backends.h	58;"	d
VI_FLOORB	external/Tremor/registry.h	24;"	d
VI_MAPB	external/Tremor/registry.h	26;"	d
VI_RESB	external/Tremor/registry.h	25;"	d
VI_TIMEB	external/Tremor/registry.h	23;"	d
VI_TRANSFORMB	external/Tremor/registry.h	21;"	d
VI_WINDOWB	external/Tremor/registry.h	22;"	d
VQ_FEXP	external/Tremor/sharedbook.c	40;"	d	file:
VQ_FEXP_BIAS	external/Tremor/sharedbook.c	42;"	d	file:
VQ_FMAN	external/Tremor/sharedbook.c	41;"	d	file:
Value	external/Chipmunk/include/chipmunk/chipmunk.h	/^			float Value;$/;"	m	union:MSVC_EVIL_FLOAT_HACK
VaryingFriction	external/Box2d/Testbed/Tests/VaryingFriction.h	/^	VaryingFriction()$/;"	f	class:VaryingFriction
VaryingFriction	external/Box2d/Testbed/Tests/VaryingFriction.h	/^class VaryingFriction : public Test$/;"	c
VaryingRestitution	external/Box2d/Testbed/Tests/VaryingRestitution.h	/^	VaryingRestitution()$/;"	f	class:VaryingRestitution
VaryingRestitution	external/Box2d/Testbed/Tests/VaryingRestitution.h	/^class VaryingRestitution : public Test$/;"	c
VerticalStack	external/Box2d/Testbed/Tests/VerticalStack.h	/^	VerticalStack()$/;"	f	class:VerticalStack
VerticalStack	external/Box2d/Testbed/Tests/VerticalStack.h	/^class VerticalStack : public Test$/;"	c
W	external/Tremor/ivorbiscodec.h	/^  long  W;$/;"	m	struct:vorbis_block
W	external/Tremor/ivorbiscodec.h	/^  long W;$/;"	m	struct:vorbis_dsp_state
WEB_H	external/Box2d/Testbed/Tests/Web.h	20;"	d
WIDTH	external/Chipmunk/Demo/MagnetsElectric.c	13;"	d	file:
WIN32_WCE_OLD	external/libpng/pngrutil.c	23;"	d	file:
WORD_ALIGN	external/Tremor/block.c	80;"	d	file:
WRITEFILE	external/libpng/pngtest.c	45;"	d	file:
WRITEFILE	external/libpng/pngtest.c	53;"	d	file:
WarmStart	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^void b2ContactSolver::WarmStart()$/;"	f	class:b2ContactSolver
Web	external/Box2d/Testbed/Tests/Web.h	/^	Web()$/;"	f	class:Web
Web	external/Box2d/Testbed/Tests/Web.h	/^class Web : public Test$/;"	c
WriteCache	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	void WriteCache(b2SimplexCache* cache) const$/;"	f	struct:b2Simplex
X	external/Tremor/os_types.h	21;"	d
X	external/Tremor/os_types.h	24;"	d
XNPROD31	external/Tremor/asm_arm.h	/^static inline void XNPROD31(ogg_int32_t  a, ogg_int32_t  b,$/;"	f
XNPROD31	external/Tremor/misc.h	/^STIN void XNPROD31(ogg_int32_t  a, ogg_int32_t  b,$/;"	f
XNPROD31	external/Tremor/misc.h	127;"	d
XPROD31	external/Tremor/asm_arm.h	/^static inline void XPROD31(ogg_int32_t  a, ogg_int32_t  b,$/;"	f
XPROD31	external/Tremor/misc.h	/^STIN void XPROD31(ogg_int32_t  a, ogg_int32_t  b,$/;"	f
XPROD31	external/Tremor/misc.h	124;"	d
XPROD32	external/Tremor/asm_arm.h	/^static inline void XPROD32(ogg_int32_t  a, ogg_int32_t  b,$/;"	f
XPROD32	external/Tremor/misc.h	/^STIN void XPROD32(ogg_int32_t  a, ogg_int32_t  b,$/;"	f
XPROD32	external/Tremor/misc.h	121;"	d
XdB	external/Tremor/floor1.c	213;"	d	file:
XdB	external/Tremor/floor1.c	215;"	d	file:
Your_png_h_is_not_version_1_2_43	external/libpng/png.c	/^typedef version_1_2_43 Your_png_h_is_not_version_1_2_43;$/;"	t	file:
ZAttributedStringEnumerationLongestEffectiveRangeNotRequired	external/FontLabel/ZAttributedString.h	/^	ZAttributedStringEnumerationLongestEffectiveRangeNotRequired = (1UL << 20)$/;"	e	enum:__anon46
ZAttributedStringEnumerationOptions	external/FontLabel/ZAttributedString.h	/^typedef NSUInteger ZAttributedStringEnumerationOptions;$/;"	t
ZAttributedStringEnumerationReverse	external/FontLabel/ZAttributedString.h	/^	ZAttributedStringEnumerationReverse = (1UL << 1),$/;"	e	enum:__anon46
ZUnderlinePatternMask	external/FontLabel/ZAttributedString.h	77;"	d
ZUnderlinePatternSolid	external/FontLabel/ZAttributedString.h	/^	ZUnderlinePatternSolid = 0x0000$/;"	e	enum:__anon48
ZUnderlineStyleMask	external/FontLabel/ZAttributedString.h	72;"	d
ZUnderlineStyleNone	external/FontLabel/ZAttributedString.h	/^	ZUnderlineStyleNone = 0x00,$/;"	e	enum:__anon47
ZUnderlineStyleSingle	external/FontLabel/ZAttributedString.h	/^	ZUnderlineStyleSingle = 0x01$/;"	e	enum:__anon47
Z_BLOCKS	external/FontLabel/ZAttributedString.h	12;"	d
Z_BLOCKS	external/FontLabel/ZAttributedString.h	15;"	d
_01inverse	external/Tremor/res012.c	/^static int _01inverse(vorbis_block *vb,vorbis_look_residue *vl,$/;"	f	file:
_BSD_SOURCE	external/libpng/pngconf.h	365;"	d
_BSD_SOURCE	external/libpng/pngconf.h	383;"	d
_CASTASGN	cocos2d/Support/utlist.h	88;"	d
_CASTASGN	cocos2d/Support/utlist.h	96;"	d
_DEBUG	external/libpng/png.h	2608;"	d
_NEXT	cocos2d/Support/utlist.h	83;"	d
_NEXT	cocos2d/Support/utlist.h	91;"	d
_NEXTASGN	cocos2d/Support/utlist.h	84;"	d
_NEXTASGN	cocos2d/Support/utlist.h	92;"	d
_OGG_H	external/Tremor/ogg.h	18;"	d
_OGG_mdct_H_	external/Tremor/mdct.h	19;"	d
_OS_CVTYPES_H	external/Tremor/config_types.h	18;"	d
_OS_H	external/Tremor/os.h	2;"	d
_OS_TYPES_H	external/Tremor/os_types.h	18;"	d
_OV_FILE_H_	external/Tremor/ivorbisfile.h	19;"	d
_PREV	cocos2d/Support/utlist.h	85;"	d
_PREV	cocos2d/Support/utlist.h	93;"	d
_PREVASGN	cocos2d/Support/utlist.h	86;"	d
_PREVASGN	cocos2d/Support/utlist.h	94;"	d
_RS	cocos2d/Support/utlist.h	87;"	d
_RS	cocos2d/Support/utlist.h	95;"	d
_SV	cocos2d/Support/utlist.h	82;"	d
_SV	cocos2d/Support/utlist.h	90;"	d
_V_BLOCK_	external/Tremor/block.h	19;"	d
_V_CLIP_MATH	external/Tremor/asm_arm.h	106;"	d
_V_CLIP_MATH	external/Tremor/misc.h	162;"	d
_V_CODEBOOK_H_	external/Tremor/codebook.h	19;"	d
_V_CODECI_H_	external/Tremor/codec_internal.h	19;"	d
_V_IFDEFJAIL_H_	external/Tremor/os.h	24;"	d
_V_LOOKUP_DATA_H_	external/Tremor/lsp_lookup.h	19;"	d
_V_LSP_MATH_ASM	external/Tremor/asm_arm.h	124;"	d
_V_RANDOM_H_	external/Tremor/misc.h	19;"	d
_V_REG_H_	external/Tremor/registry.h	19;"	d
_V_WIDE_MATH	external/Tremor/asm_arm.h	21;"	d
_V_WIDE_MATH	external/Tremor/misc.h	27;"	d
_V_WINDOW_	external/Tremor/window.h	19;"	d
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabel.h	/^- (id)initWithFrame:(CGRect)frame font:(CGFontRef)font pointSize:(CGFloat)pointSize __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabel.h	/^@property (nonatomic, assign) CGFloat pointSize __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabel.h	/^@property (nonatomic, setter=setCGFont:) CGFontRef cgFont __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^		   lineBreakMode:(UILineBreakMode)lineBreakMode __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^	   lineBreakMode:(UILineBreakMode)lineBreakMode __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^	   lineBreakMode:(UILineBreakMode)lineBreakMode alignment:(UITextAlignment)alignment __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^- (CGSize)drawAtPoint:(CGPoint)point withCGFont:(CGFontRef)font pointSize:(CGFloat)pointSize __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^- (CGSize)drawInRect:(CGRect)rect withCGFont:(CGFontRef)font pointSize:(CGFloat)pointSize __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^- (CGSize)sizeWithCGFont:(CGFontRef)font pointSize:(CGFloat)pointSize __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontLabelStringDrawing.h	/^- (CGSize)sizeWithCGFont:(CGFontRef)font pointSize:(CGFloat)pointSize constrainedToSize:(CGSize)size __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__AVAILABILITY_INTERNAL_DEPRECATED	external/FontLabel/FontManager.h	/^- (CGFontRef)fontWithName:(NSString *)filename __AVAILABILITY_INTERNAL_DEPRECATED;$/;"	v
__CC_BASE64_DECODE_H	cocos2d/Support/base64.h	8;"	d
__CC_DRAWING_PRIMITIVES_H	cocos2d/CCDrawingPrimitives.h	27;"	d
__CC_ZIP_UTILS_H	cocos2d/Support/ZipUtils.h	16;"	d
__CD_OPENAL_H	CocosDenshion/CocosDenshion/CDOpenALSupport.h	54;"	d
__COCOS2D_GLU_H	cocos2d/Support/glu.h	7;"	d
__DELEGATE_IVAR__	cocos2d/Support/OpenGL_Internal.h	74;"	d
__DELEGATE_METHODS_IVAR__	cocos2d/Support/OpenGL_Internal.h	77;"	d
__docformat__	tools/spritesheet-artifact-fixer.py	/^__docformat__ = 'restructuredtext'$/;"	v
__docformat__	tools/tmx-embeded-2-png.py	/^__docformat__ = 'restructuredtext'$/;"	v
__init__	tools/spritesheet-artifact-fixer.py	/^    def __init__(self, filename, tilewidth, tileheight, spacing=2, margin=0):$/;"	m	class:SpriteSheetMarginFix
_adv_halt	external/Tremor/bitwise.c	/^static void _adv_halt(oggpack_buffer *b){$/;"	f	file:
_base64Decode	cocos2d/Support/base64.c	/^int _base64Decode( unsigned char *input, unsigned int input_len, unsigned char *output, unsigned int *output_len )$/;"	f
_bisect_forward_serialno	external/Tremor/vorbisfile.c	/^static int _bisect_forward_serialno(OggVorbis_File *vf,$/;"	f	file:
_bitmapFontDef	cocos2d/CCBitmapFontAtlas.h	/^typedef struct _bitmapFontDef {$/;"	s
_bitmapFontPadding	cocos2d/CCBitmapFontAtlas.h	/^typedef struct _bitmapFontPadding {$/;"	s
_book_maptype1_quantvals	external/Tremor/sharedbook.c	/^long _book_maptype1_quantvals(const static_codebook *b){$/;"	f
_book_unquantize	external/Tremor/sharedbook.c	/^ogg_int32_t *_book_unquantize(const static_codebook *b,int n,int *sparsemap,$/;"	f
_bufferInfo	CocosDenshion/CocosDenshion/CocosDenshion.h	/^typedef struct _bufferInfo {$/;"	s
_ccBezierConfig	cocos2d/CCIntervalAction.h	/^typedef struct _ccBezierConfig {$/;"	s
_ccBlendFunc	cocos2d/ccTypes.h	/^typedef struct _ccBlendFunc$/;"	s
_ccColor3B	cocos2d/ccTypes.h	/^typedef struct _ccColor3B$/;"	s
_ccColor4B	cocos2d/ccTypes.h	/^typedef struct _ccColor4B$/;"	s
_ccColor4F	cocos2d/ccTypes.h	/^typedef struct _ccColor4F {$/;"	s
_ccGridSize	cocos2d/ccTypes.h	/^typedef struct _ccGridSize$/;"	s
_ccPointSprite	cocos2d/ccTypes.h	/^typedef struct _ccPointSprite$/;"	s
_ccQuad2	cocos2d/ccTypes.h	/^typedef struct _ccQuad2 {$/;"	s
_ccQuad3	cocos2d/ccTypes.h	/^typedef struct _ccQuad3 {$/;"	s
_ccTex2F	cocos2d/ccTypes.h	/^typedef struct _ccTex2F {$/;"	s
_ccTexParams	cocos2d/CCTexture2D.h	/^typedef struct _ccTexParams {$/;"	s
_ccV2F_C4F_T2F	cocos2d/ccTypes.h	/^typedef struct _ccV2F_C4F_T2F$/;"	s
_ccV2F_C4F_T2F_Quad	cocos2d/ccTypes.h	/^typedef struct _ccV2F_C4F_T2F_Quad$/;"	s
_ccV3F_C4B_T2F	cocos2d/ccTypes.h	/^typedef struct _ccV3F_C4B_T2F$/;"	s
_ccV3F_C4B_T2F_Quad	cocos2d/ccTypes.h	/^typedef struct _ccV3F_C4B_T2F_Quad$/;"	s
_ccVertex3F	cocos2d/ccTypes.h	/^typedef struct _ccVertex3F$/;"	s
_checksum	external/Tremor/framing.c	/^static ogg_uint32_t _checksum(ogg_reference *or, int bytes){$/;"	f	file:
_decode_clear	external/Tremor/vorbisfile.c	/^static void _decode_clear(OggVorbis_File *vf){$/;"	f	file:
_fetch_and_process_packet	external/Tremor/vorbisfile.c	/^static int _fetch_and_process_packet(OggVorbis_File *vf,$/;"	f	file:
_fetch_buffer	external/Tremor/framing.c	/^static ogg_buffer *_fetch_buffer(ogg_buffer_state *bs,long bytes){$/;"	f	file:
_fetch_headers	external/Tremor/vorbisfile.c	/^static int _fetch_headers(OggVorbis_File *vf,$/;"	f	file:
_fetch_ref	external/Tremor/framing.c	/^static ogg_reference *_fetch_ref(ogg_buffer_state *bs){$/;"	f	file:
_float32_unpack	external/Tremor/sharedbook.c	/^static ogg_int32_t _float32_unpack(long val,int *point){$/;"	f	file:
_floor_P	external/Tremor/registry.c	/^vorbis_func_floor     *_floor_P[]={$/;"	v
_floor_P	external/Tremor/registry.h	/^EXTERN vorbis_func_floor     *_floor_P[];$/;"	v
_fseek64_wrap	external/Tremor/vorbisfile.c	/^static int _fseek64_wrap(FILE *f,ogg_int64_t off,int whence){$/;"	f	file:
_get_data	external/Tremor/vorbisfile.c	/^static long _get_data(OggVorbis_File *vf){$/;"	f	file:
_get_next_page	external/Tremor/vorbisfile.c	/^static ogg_int64_t _get_next_page(OggVorbis_File *vf,ogg_page *og,$/;"	f	file:
_get_prev_page	external/Tremor/vorbisfile.c	/^static ogg_int64_t _get_prev_page(OggVorbis_File *vf,ogg_page *og){$/;"	f	file:
_halt_one	external/Tremor/bitwise.c	/^static int _halt_one(oggpack_buffer *b){$/;"	f	file:
_hashElement	cocos2d/CCActionManager.h	/^typedef struct _hashElement$/;"	s
_ilog	external/Tremor/sharedbook.c	/^int _ilog(unsigned int v){$/;"	f
_lookspan	external/Tremor/bitwise.c	74;"	d	file:
_make_decode_ready	external/Tremor/vorbisfile.c	/^static void _make_decode_ready(OggVorbis_File *vf){$/;"	f	file:
_make_words	external/Tremor/sharedbook.c	/^ogg_uint32_t *_make_words(long *l,long n,long sparsecount){$/;"	f
_mapping_P	external/Tremor/registry.c	/^vorbis_func_mapping   *_mapping_P[]={$/;"	v
_mapping_P	external/Tremor/registry.h	/^EXTERN vorbis_func_mapping   *_mapping_P[];$/;"	v
_mmx_supported	external/libpng/pnggccrd.c	/^static int _mmx_supported = 2; \/\/ 0: no MMX; 1: MMX supported; 2: not tested$/;"	v	file:
_next_lace	external/Tremor/framing.c	/^static void _next_lace(oggbyte_buffer *ob,ogg_stream_state *os){$/;"	f	file:
_ogg_buffer_destroy	external/Tremor/framing.c	/^static void _ogg_buffer_destroy(ogg_buffer_state *bs){$/;"	f	file:
_ogg_buffer_mark_one	external/Tremor/framing.c	/^static void _ogg_buffer_mark_one(ogg_reference *or){$/;"	f	file:
_ogg_calloc	external/Tremor/os_types.h	31;"	d
_ogg_free	external/Tremor/os_types.h	33;"	d
_ogg_malloc	external/Tremor/os_types.h	30;"	d
_ogg_realloc	external/Tremor/os_types.h	32;"	d
_open_seekable2	external/Tremor/vorbisfile.c	/^static int _open_seekable2(OggVorbis_File *vf){$/;"	f	file:
_ov_open1	external/Tremor/vorbisfile.c	/^static int _ov_open1(void *f,OggVorbis_File *vf,char *initial,$/;"	f	file:
_ov_open2	external/Tremor/vorbisfile.c	/^static int _ov_open2(OggVorbis_File *vf){$/;"	f	file:
_packetout	external/Tremor/framing.c	/^static int _packetout(ogg_stream_state *os,ogg_packet *op,int adv){$/;"	f	file:
_positionB	external/Tremor/framing.c	/^static void _positionB(oggbyte_buffer *b,int pos){$/;"	f	file:
_positionF	external/Tremor/framing.c	/^static void _positionF(oggbyte_buffer *b,int pos){$/;"	f	file:
_prefetch_all_headers	external/Tremor/vorbisfile.c	/^static void _prefetch_all_headers(OggVorbis_File *vf, ogg_int64_t dataoffset){$/;"	f	file:
_residue_P	external/Tremor/registry.c	/^vorbis_func_residue   *_residue_P[]={$/;"	v
_residue_P	external/Tremor/registry.h	/^EXTERN vorbis_func_residue   *_residue_P[];$/;"	v
_seek_helper	external/Tremor/vorbisfile.c	/^static void _seek_helper(OggVorbis_File *vf,ogg_int64_t offset){$/;"	f	file:
_sourceGroup	CocosDenshion/CocosDenshion/CocosDenshion.h	/^typedef struct _sourceGroup {$/;"	s
_sourceInfo	CocosDenshion/CocosDenshion/CocosDenshion.h	/^typedef struct _sourceInfo {$/;"	s
_span	external/Tremor/bitwise.c	/^static void _span(oggpack_buffer *b){$/;"	f	file:
_span_one	external/Tremor/bitwise.c	/^static void _span_one(oggpack_buffer *b){$/;"	f	file:
_span_queued_page	external/Tremor/framing.c	/^static void _span_queued_page(ogg_stream_state *os){ $/;"	f	file:
_v_readstring	external/Tremor/info.c	/^static void _v_readstring(oggpack_buffer *o,char *buf,int bytes){$/;"	f	file:
_vds_init	external/Tremor/block.c	/^static int _vds_init(vorbis_dsp_state *v,vorbis_info *vi){$/;"	f	file:
_vorbis_apply_window	external/Tremor/window.c	/^void _vorbis_apply_window(ogg_int32_t *d,const void *window_p[2],$/;"	f
_vorbis_backend_h_	external/Tremor/backends.h	23;"	d
_vorbis_block_alloc	external/Tremor/block.c	/^void *_vorbis_block_alloc(vorbis_block *vb,long bytes){$/;"	f
_vorbis_block_ripcord	external/Tremor/block.c	/^void _vorbis_block_ripcord(vorbis_block *vb){$/;"	f
_vorbis_codec_h_	external/Tremor/ivorbiscodec.h	19;"	d
_vorbis_unpack_books	external/Tremor/info.c	/^static int _vorbis_unpack_books(vorbis_info *vi,oggpack_buffer *opb){$/;"	f	file:
_vorbis_unpack_comment	external/Tremor/info.c	/^static int _vorbis_unpack_comment(vorbis_comment *vc,oggpack_buffer *opb){$/;"	f	file:
_vorbis_unpack_info	external/Tremor/info.c	/^static int _vorbis_unpack_info(vorbis_info *vi,oggpack_buffer *opb){$/;"	f	file:
_vorbis_window	external/Tremor/window.c	/^const void *_vorbis_window(int type, int left){$/;"	f
a	cocos2d/ccTypes.h	/^	float a;$/;"	m	struct:_ccColor4F
a	cocos2d/ccTypes.h	/^	unsigned char a;$/;"	m	struct:_ccColor4B
a	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	float32 a;		\/\/ barycentric coordinate for closest point$/;"	m	struct:b2SimplexVertex	file:
a	external/Box2d/Box2D/Common/b2Math.h	/^	float32 a0, a;		\/\/\/< world angles$/;"	m	struct:b2Sweep
a	external/Box2d/Box2D/Dynamics/b2Island.h	/^	float32 a;$/;"	m	struct:b2Position
a	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpBody *a, *b;$/;"	m	struct:cpConstraint
a	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat a, w, t;$/;"	m	struct:cpBody
a	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect a, b, n;$/;"	m	struct:cpSegmentShape
a	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionType a;$/;"	m	struct:cpCollisionHandler
a0	external/Box2d/Box2D/Common/b2Math.h	/^	float32 a0, a;		\/\/\/< world angles$/;"	m	struct:b2Sweep
aabb	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	b2AABB aabb;$/;"	m	struct:b2DynamicTreeNode
aabb	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^		b2AABB aabb;$/;"	m	struct:DynamicTreeTest::Actor
action	cocos2d/CCAction.h	/^+(id) action;$/;"	v
actionIndex	cocos2d/CCActionManager.h	/^	unsigned int	actionIndex;$/;"	m	struct:_hashElement
actionScene	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	/^@property (nonatomic, retain) ActionScene *actionScene;$/;"	v
actions	cocos2d/CCActionManager.h	/^	struct ccArray	*actions;$/;"	m	struct:_hashElement	typeref:struct:_hashElement::ccArray
active	cocos2d/CCGrid.h	/^@property (nonatomic,readwrite) BOOL active;$/;"	v
active	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readonly) BOOL active;$/;"	v
active	external/Box2d/Box2D/Dynamics/b2Body.h	/^	bool active;$/;"	m	struct:b2BodyDef
active2staticIter	external/Chipmunk/src/cpSpace.c	/^active2staticIter(cpShape *shape, cpSpace *space)$/;"	f	file:
activeShapes	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpSpaceHash *activeShapes;$/;"	m	struct:cpSpace
addBall	external/Chipmunk/Demo/Joints.c	/^addBall(cpVect pos, cpVect boxOffset)$/;"	f	file:
addBar	external/Chipmunk/Demo/Joints.c	/^addBar(cpVect pos, cpVect boxOffset)$/;"	f	file:
addChassis	external/Chipmunk/Demo/Joints.c	/^addChassis(cpVect pos, cpVect boxOffset)$/;"	f	file:
addColFunc	external/Chipmunk/src/cpCollision.c	/^addColFunc(cpShapeType a, cpShapeType b, collisionFunc func)$/;"	f	file:
addLever	external/Chipmunk/Demo/Joints.c	/^addLever(cpVect pos, cpVect boxOffset)$/;"	f	file:
addWheel	external/Chipmunk/Demo/Joints.c	/^addWheel(cpVect pos, cpVect boxOffset)$/;"	f	file:
add_ball	external/Chipmunk/Demo/Pump.c	/^add_ball(cpVect pos)$/;"	f	file:
add_bar	external/Chipmunk/Demo/Springies.c	/^add_bar(cpVect a, cpVect b, int group)$/;"	f	file:
add_box	external/Chipmunk/Demo/Bounce.c	/^add_box()$/;"	f	file:
add_box	external/Chipmunk/Demo/Planet.c	/^add_box()$/;"	f	file:
alloc_chain	external/Tremor/ivorbiscodec.h	/^struct alloc_chain{$/;"	s
allocatedBuffers	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	cpArray *allocatedBuffers;$/;"	m	struct:cpHashSet
allocatedBuffers	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpArray *allocatedBuffers;$/;"	m	struct:cpSpace
allocatedBuffers	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpArray *allocatedBuffers;$/;"	m	struct:cpSpaceHash
allowSleep	external/Box2d/Box2D/Dynamics/b2Body.h	/^	bool allowSleep;$/;"	m	struct:b2BodyDef
alpha	external/libpng/png.h	/^   png_byte alpha; \/* for alpha channel files *\/$/;"	m	struct:png_color_8_struct
alpha	external/libpng/png.h	/^   png_uint_16 alpha;$/;"	m	struct:png_sPLT_entry_struct
alphabet	cocos2d/Support/base64.c	/^unsigned char alphabet[64] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
alwaysCollide	external/Chipmunk/src/cpSpace.c	/^static int alwaysCollide(cpArbiter *arb, cpSpace *space, void *data){return 1;}$/;"	f	file:
ampbits	external/Tremor/backends.h	/^  int   ampbits;$/;"	m	struct:__anon74
ampdB	external/Tremor/backends.h	/^  int   ampdB;$/;"	m	struct:__anon74
amplitude	cocos2d/CCGrid3DAction.h	/^@property (nonatomic,readwrite) float amplitude;$/;"	v
amplitude	cocos2d/CCTiledGridAction.h	/^@property (nonatomic,readwrite) float amplitude;$/;"	v
amplitudeRate	cocos2d/CCGrid3DAction.h	/^@property (nonatomic,readwrite) float amplitudeRate;$/;"	v
amplitudeRate	cocos2d/CCTiledGridAction.h	/^@property (nonatomic,readwrite) float amplitudeRate;$/;"	v
analysisp	external/Tremor/ivorbiscodec.h	/^  int analysisp;$/;"	m	struct:vorbis_dsp_state
anchorPoint	cocos2d/CCNode.h	/^@property(nonatomic,readwrite) CGPoint anchorPoint;$/;"	v
anchorPointInPixels	cocos2d/CCNode.h	/^@property(nonatomic,readonly) CGPoint anchorPointInPixels;$/;"	v
anchr1	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpDampedSpring
anchr1	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpPinJoint
anchr1	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpPivotJoint
anchr1	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpSlideJoint
anchr2	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpDampedSpring
anchr2	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect  anchr2;$/;"	m	struct:cpGrooveJoint
anchr2	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpPinJoint
anchr2	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpPivotJoint
anchr2	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpVect anchr1, anchr2;$/;"	m	struct:cpSlideJoint
ang	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat ang;$/;"	m	struct:DataforForce	file:
ang0	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat ang0;$/;"	m	struct:DataforForce	file:
angle	cocos2d/CCParticleSystem.h	/^			float		angle;$/;"	m	struct:sCCParticle::__anon26::__anon28
angle	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float angle;$/;"	v
angle	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 angle;$/;"	m	struct:b2BodyDef
angle	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat angle[SINGMAX];$/;"	m	struct:ActorSingularity	file:
angle	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat angle, phase, ratchet;$/;"	m	struct:cpRatchetJoint
angleVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float angleVar;$/;"	v
angularA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	float32 angularA;$/;"	m	struct:b2Jacobian
angularB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	float32 angularB;$/;"	m	struct:b2Jacobian
angularDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 angularDamping;$/;"	m	struct:b2BodyDef
angularVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 angularVelocity;$/;"	m	struct:b2BodyDef
animation	cocos2d/CCIntervalAction.h	/^@property (readwrite,nonatomic,retain) CCAnimation * animation;$/;"	v
animationInterval	cocos2d/CCDirector.h	/^@property (nonatomic,readwrite, assign) NSTimeInterval animationInterval;$/;"	v
anyCollision	external/Chipmunk/src/cpSpace.c	/^	int anyCollision;$/;"	m	struct:segQueryContext	file:
applyImpulse	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpConstraintApplyImpulseFunction applyImpulse;$/;"	m	struct:cpConstraintClass
applyImpulse	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^applyImpulse(cpDampedRotarySpring *spring)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpDampedSpring.c	/^applyImpulse(cpDampedSpring *spring)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpGearJoint.c	/^applyImpulse(cpGearJoint *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^applyImpulse(cpGrooveJoint *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpPinJoint.c	/^applyImpulse(cpPinJoint *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpPivotJoint.c	/^applyImpulse(cpPivotJoint *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^applyImpulse(cpRatchetJoint *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^applyImpulse(cpRotaryLimitJoint *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^applyImpulse(cpSimpleMotor *joint)$/;"	f	file:
applyImpulse	external/Chipmunk/src/constraints/cpSlideJoint.c	/^applyImpulse(cpSlideJoint *joint)$/;"	f	file:
apply_bias_impulses	external/Chipmunk/include/chipmunk/constraints/util.h	/^apply_bias_impulses(cpBody *a , cpBody *b, cpVect r1, cpVect r2, cpVect j)$/;"	f
apply_impulses	external/Chipmunk/include/chipmunk/constraints/util.h	/^apply_impulses(cpBody *a , cpBody *b, cpVect r1, cpVect r2, cpVect j)$/;"	f
arbiters	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpArray *arbiters, *pooledArbiters;$/;"	m	struct:cpSpace
arr	cocos2d/Support/CCArray.h	/^	id *arr;$/;"	m	struct:pccArrayForeach_
arr	cocos2d/Support/ccCArray.h	/^	id *arr;$/;"	m	struct:ccArray
arr	external/Chipmunk/include/chipmunk/cpArray.h	/^	void **arr;$/;"	m	struct:cpArray
array	cocos2d/Support/CCArray.h	/^+ (id) array;$/;"	v
ascender	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFloat ascender;$/;"	v
asynchLoadProgress	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite) float asynchLoadProgress;$/;"	v
atlasIndex	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) NSUInteger atlasIndex;$/;"	v
attachedBufferId	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	ALuint attachedBufferId;$/;"	m	struct:_sourceInfo
attributes	external/FontLabel/ZAttributedStringPrivate.h	/^@property (nonatomic, readonly) NSArray *attributes;$/;"	v
attributes	external/FontLabel/ZAttributedStringPrivate.h	/^@property (nonatomic, readonly) NSMutableDictionary *attributes;$/;"	v
audioSourceFilePath	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readonly) NSString *audioSourceFilePath;$/;"	v
audioSourcePlayer	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readonly) AVAudioPlayer *audioSourcePlayer;$/;"	v
autoRemoveOnFinish	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite) BOOL autoRemoveOnFinish;$/;"	v
awake	external/Box2d/Box2D/Dynamics/b2Body.h	/^	bool awake;$/;"	m	struct:b2BodyDef
axes	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpPolyShapeAxis *axes;$/;"	m	struct:cpPolyShape
b	cocos2d/ccTypes.h	/^	GLubyte b;$/;"	m	struct:_ccColor3B
b	cocos2d/ccTypes.h	/^	float b;$/;"	m	struct:_ccColor4F
b	cocos2d/ccTypes.h	/^	unsigned char b;$/;"	m	struct:_ccColor4B
b	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	float32 r, g, b;$/;"	m	struct:b2Color
b	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpBody *a, *b;$/;"	m	struct:cpConstraint
b	external/Chipmunk/include/chipmunk/cpBB.h	/^	cpFloat l, b, r ,t;$/;"	m	struct:cpBB
b	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect a, b, n;$/;"	m	struct:cpSegmentShape
b	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionType b;$/;"	m	struct:cpCollisionHandler
b2AABB	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2AABB$/;"	s
b2Abs	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Mat22 b2Abs(const b2Mat22& A)$/;"	f
b2Abs	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Abs(const b2Vec2& a)$/;"	f
b2Abs	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2Abs(float32 a)$/;"	f
b2Alloc	external/Box2d/Box2D/Common/b2Settings.cpp	/^void* b2Alloc(int32 size)$/;"	f
b2Assert	external/Box2d/Box2D/Common/b2Settings.h	26;"	d
b2Atan2	external/Box2d/Box2D/Common/b2Math.h	61;"	d
b2Block	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^struct b2Block$/;"	s	file:
b2BlockAllocator	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^b2BlockAllocator::b2BlockAllocator()$/;"	f	class:b2BlockAllocator
b2BlockAllocator	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^class b2BlockAllocator$/;"	c
b2Body	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^b2Body::b2Body(const b2BodyDef* bd, b2World* world)$/;"	f	class:b2Body
b2Body	external/Box2d/Box2D/Dynamics/b2Body.h	/^class b2Body$/;"	c
b2BodyDef	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2BodyDef()$/;"	f	struct:b2BodyDef
b2BodyDef	external/Box2d/Box2D/Dynamics/b2Body.h	/^struct b2BodyDef$/;"	s
b2BodyType	external/Box2d/Box2D/Dynamics/b2Body.h	/^enum b2BodyType$/;"	g
b2BroadPhase	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^b2BroadPhase::b2BroadPhase()$/;"	f	class:b2BroadPhase
b2BroadPhase	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^class b2BroadPhase$/;"	c
b2Chunk	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^struct b2Chunk$/;"	s	file:
b2CircleContact	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.cpp	/^b2CircleContact::b2CircleContact(b2Fixture* fixtureA, b2Fixture* fixtureB)$/;"	f	class:b2CircleContact
b2CircleContact	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.h	/^class b2CircleContact : public b2Contact$/;"	c
b2CircleShape	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^class b2CircleShape : public b2Shape$/;"	c
b2CircleShape	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^inline b2CircleShape::b2CircleShape()$/;"	f	class:b2CircleShape
b2Clamp	external/Box2d/Box2D/Common/b2Math.h	/^inline T b2Clamp(T a, T low, T high)$/;"	f
b2Clamp	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Clamp(const b2Vec2& a, const b2Vec2& low, const b2Vec2& high)$/;"	f
b2ClipSegmentToLine	external/Box2d/Box2D/Collision/b2Collision.cpp	/^int32 b2ClipSegmentToLine(b2ClipVertex vOut[2], const b2ClipVertex vIn[2],$/;"	f
b2ClipVertex	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2ClipVertex$/;"	s
b2CollideCircles	external/Box2d/Box2D/Collision/b2CollideCircle.cpp	/^void b2CollideCircles($/;"	f
b2CollidePolygonAndCircle	external/Box2d/Box2D/Collision/b2CollideCircle.cpp	/^void b2CollidePolygonAndCircle($/;"	f
b2CollidePolygons	external/Box2d/Box2D/Collision/b2CollidePolygon.cpp	/^void b2CollidePolygons(b2Manifold* manifold,$/;"	f
b2Color	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	b2Color() {}$/;"	f	struct:b2Color
b2Color	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	b2Color(float32 r, float32 g, float32 b) : r(r), g(g), b(b) {}$/;"	f	struct:b2Color
b2Color	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^struct b2Color$/;"	s
b2Contact	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^b2Contact::b2Contact(b2Fixture* fA, b2Fixture* fB)$/;"	f	class:b2Contact
b2Contact	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Contact() : m_fixtureA(NULL), m_fixtureB(NULL) {}$/;"	f	class:b2Contact
b2Contact	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^class b2Contact$/;"	c
b2ContactConstraint	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^struct b2ContactConstraint$/;"	s
b2ContactConstraintPoint	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^struct b2ContactConstraintPoint$/;"	s
b2ContactCreateFcn	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^typedef b2Contact* b2ContactCreateFcn(b2Fixture* fixtureA, b2Fixture* fixtureB, b2BlockAllocator* allocator);$/;"	t
b2ContactDestroyFcn	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^typedef void b2ContactDestroyFcn(b2Contact* contact, b2BlockAllocator* allocator);$/;"	t
b2ContactEdge	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^struct b2ContactEdge$/;"	s
b2ContactFilter	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^class b2ContactFilter$/;"	c
b2ContactID	external/Box2d/Box2D/Collision/b2Collision.h	/^union b2ContactID$/;"	u
b2ContactImpulse	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^struct b2ContactImpulse$/;"	s
b2ContactListener	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^class b2ContactListener$/;"	c
b2ContactManager	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^b2ContactManager::b2ContactManager()$/;"	f	class:b2ContactManager
b2ContactManager	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^class b2ContactManager$/;"	c
b2ContactRegister	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^struct b2ContactRegister$/;"	s
b2ContactSolver	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^b2ContactSolver::b2ContactSolver(b2Contact** contacts, int32 contactCount,$/;"	f	class:b2ContactSolver
b2ContactSolver	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^class b2ContactSolver$/;"	c
b2Cross	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Cross(const b2Vec2& a, float32 s)$/;"	f
b2Cross	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Cross(float32 s, const b2Vec2& a)$/;"	f
b2Cross	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec3 b2Cross(const b2Vec3& a, const b2Vec3& b)$/;"	f
b2Cross	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2Cross(const b2Vec2& a, const b2Vec2& b)$/;"	f
b2DebugDraw	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.cpp	/^b2DebugDraw::b2DebugDraw()$/;"	f	class:b2DebugDraw
b2DebugDraw	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^class b2DebugDraw$/;"	c
b2DestructionListener	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^class b2DestructionListener$/;"	c
b2Distance	external/Box2d/Box2D/Collision/b2Distance.cpp	/^void b2Distance(b2DistanceOutput* output,$/;"	f
b2Distance	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2Distance(const b2Vec2& a, const b2Vec2& b)$/;"	f
b2DistanceInput	external/Box2d/Box2D/Collision/b2Distance.h	/^struct b2DistanceInput$/;"	s
b2DistanceJoint	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.cpp	/^b2DistanceJoint::b2DistanceJoint(const b2DistanceJointDef* def)$/;"	f	class:b2DistanceJoint
b2DistanceJoint	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^class b2DistanceJoint : public b2Joint$/;"	c
b2DistanceJointDef	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	b2DistanceJointDef()$/;"	f	struct:b2DistanceJointDef
b2DistanceJointDef	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^struct b2DistanceJointDef : public b2JointDef$/;"	s
b2DistanceOutput	external/Box2d/Box2D/Collision/b2Distance.h	/^struct b2DistanceOutput$/;"	s
b2DistanceProxy	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2DistanceProxy() : m_vertices(NULL), m_count(0), m_radius(0.0f) {}$/;"	f	struct:b2DistanceProxy
b2DistanceProxy	external/Box2d/Box2D/Collision/b2Distance.h	/^struct b2DistanceProxy$/;"	s
b2DistanceSquared	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2DistanceSquared(const b2Vec2& a, const b2Vec2& b)$/;"	f
b2Dot	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2Dot(const b2Vec2& a, const b2Vec2& b)$/;"	f
b2Dot	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2Dot(const b2Vec3& a, const b2Vec3& b)$/;"	f
b2DynamicTree	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^b2DynamicTree::b2DynamicTree()$/;"	f	class:b2DynamicTree
b2DynamicTree	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^class b2DynamicTree$/;"	c
b2DynamicTreeNode	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^struct b2DynamicTreeNode$/;"	s
b2EdgeSeparation	external/Box2d/Box2D/Collision/b2CollidePolygon.cpp	/^static float32 b2EdgeSeparation(const b2PolygonShape* poly1, const b2Transform& xf1, int32 edge1,$/;"	f	file:
b2Filter	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^struct b2Filter$/;"	s
b2FindIncidentEdge	external/Box2d/Box2D/Collision/b2CollidePolygon.cpp	/^static void b2FindIncidentEdge(b2ClipVertex c[2],$/;"	f	file:
b2FindMaxSeparation	external/Box2d/Box2D/Collision/b2CollidePolygon.cpp	/^static float32 b2FindMaxSeparation(int32* edgeIndex,$/;"	f	file:
b2Fixture	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^b2Fixture::b2Fixture()$/;"	f	class:b2Fixture
b2Fixture	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^class b2Fixture$/;"	c
b2FixtureDef	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2FixtureDef()$/;"	f	struct:b2FixtureDef
b2FixtureDef	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^struct b2FixtureDef$/;"	s
b2Free	external/Box2d/Box2D/Common/b2Settings.cpp	/^void b2Free(void* mem)$/;"	f
b2FrictionJoint	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.cpp	/^b2FrictionJoint::b2FrictionJoint(const b2FrictionJointDef* def)$/;"	f	class:b2FrictionJoint
b2FrictionJoint	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^class b2FrictionJoint : public b2Joint$/;"	c
b2FrictionJointDef	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2FrictionJointDef()$/;"	f	struct:b2FrictionJointDef
b2FrictionJointDef	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^struct b2FrictionJointDef : public b2JointDef$/;"	s
b2GearJoint	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.cpp	/^b2GearJoint::b2GearJoint(const b2GearJointDef* def)$/;"	f	class:b2GearJoint
b2GearJoint	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^class b2GearJoint : public b2Joint$/;"	c
b2GearJointDef	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2GearJointDef()$/;"	f	struct:b2GearJointDef
b2GearJointDef	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^struct b2GearJointDef : public b2JointDef$/;"	s
b2GetPointStates	external/Box2d/Box2D/Collision/b2Collision.cpp	/^void b2GetPointStates(b2PointState state1[b2_maxManifoldPoints], b2PointState state2[b2_maxManifoldPoints],$/;"	f
b2InvSqrt	external/Box2d/Box2D/Common/b2Math.h	/^inline float32 b2InvSqrt(float32 x)$/;"	f
b2IsPowerOfTwo	external/Box2d/Box2D/Common/b2Math.h	/^inline bool b2IsPowerOfTwo(uint32 x)$/;"	f
b2IsValid	external/Box2d/Box2D/Common/b2Math.h	/^inline bool b2IsValid(float32 x)$/;"	f
b2Island	external/Box2d/Box2D/Dynamics/b2Island.cpp	/^b2Island::b2Island($/;"	f	class:b2Island
b2Island	external/Box2d/Box2D/Dynamics/b2Island.h	/^class b2Island$/;"	c
b2Jacobian	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^struct b2Jacobian$/;"	s
b2Joint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.cpp	/^b2Joint::b2Joint(const b2JointDef* def)$/;"	f	class:b2Joint
b2Joint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^class b2Joint$/;"	c
b2JointDef	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointDef()$/;"	f	struct:b2JointDef
b2JointDef	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^struct b2JointDef$/;"	s
b2JointEdge	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^struct b2JointEdge$/;"	s
b2JointType	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^enum b2JointType$/;"	g
b2LimitState	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^enum b2LimitState$/;"	g
b2LineJoint	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.cpp	/^b2LineJoint::b2LineJoint(const b2LineJointDef* def)$/;"	f	class:b2LineJoint
b2LineJoint	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^class b2LineJoint : public b2Joint$/;"	c
b2LineJointDef	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2LineJointDef()$/;"	f	struct:b2LineJointDef
b2LineJointDef	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^struct b2LineJointDef : public b2JointDef$/;"	s
b2Manifold	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2Manifold$/;"	s
b2ManifoldPoint	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2ManifoldPoint$/;"	s
b2MassData	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^struct b2MassData$/;"	s
b2Mat22	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat22() {}$/;"	f	struct:b2Mat22
b2Mat22	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat22(const b2Vec2& c1, const b2Vec2& c2)$/;"	f	struct:b2Mat22
b2Mat22	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat22(float32 a11, float32 a12, float32 a21, float32 a22)$/;"	f	struct:b2Mat22
b2Mat22	external/Box2d/Box2D/Common/b2Math.h	/^	explicit b2Mat22(float32 angle)$/;"	f	struct:b2Mat22
b2Mat22	external/Box2d/Box2D/Common/b2Math.h	/^struct b2Mat22$/;"	s
b2Mat33	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat33() {}$/;"	f	struct:b2Mat33
b2Mat33	external/Box2d/Box2D/Common/b2Math.h	/^	b2Mat33(const b2Vec3& c1, const b2Vec3& c2, const b2Vec3& c3)$/;"	f	struct:b2Mat33
b2Mat33	external/Box2d/Box2D/Common/b2Math.h	/^struct b2Mat33$/;"	s
b2Max	external/Box2d/Box2D/Common/b2Math.h	/^inline T b2Max(T a, T b)$/;"	f
b2Max	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Max(const b2Vec2& a, const b2Vec2& b)$/;"	f
b2Min	external/Box2d/Box2D/Common/b2Math.h	/^inline T b2Min(T a, T b)$/;"	f
b2Min	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Min(const b2Vec2& a, const b2Vec2& b)$/;"	f
b2MixFriction	external/Box2d/Box2D/Common/b2Settings.h	/^inline float32 b2MixFriction(float32 friction1, float32 friction2)$/;"	f
b2MixRestitution	external/Box2d/Box2D/Common/b2Settings.h	/^inline float32 b2MixRestitution(float32 restitution1, float32 restitution2)$/;"	f
b2MouseJoint	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.cpp	/^b2MouseJoint::b2MouseJoint(const b2MouseJointDef* def)$/;"	f	class:b2MouseJoint
b2MouseJoint	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^class b2MouseJoint : public b2Joint$/;"	c
b2MouseJointDef	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2MouseJointDef()$/;"	f	struct:b2MouseJointDef
b2MouseJointDef	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^struct b2MouseJointDef : public b2JointDef$/;"	s
b2Mul	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Mat22 b2Mul(const b2Mat22& A, const b2Mat22& B)$/;"	f
b2Mul	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Mul(const b2Mat22& A, const b2Vec2& v)$/;"	f
b2Mul	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2Mul(const b2Transform& T, const b2Vec2& v)$/;"	f
b2Mul	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec3 b2Mul(const b2Mat33& A, const b2Vec3& v)$/;"	f
b2MulT	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Mat22 b2MulT(const b2Mat22& A, const b2Mat22& B)$/;"	f
b2MulT	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2MulT(const b2Mat22& A, const b2Vec2& v)$/;"	f
b2MulT	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 b2MulT(const b2Transform& T, const b2Vec2& v)$/;"	f
b2NextPowerOfTwo	external/Box2d/Box2D/Common/b2Math.h	/^inline uint32 b2NextPowerOfTwo(uint32 x)$/;"	f
b2NullContact	external/Box2d/Box2D/Dynamics/Contacts/b2NullContact.h	/^	b2NullContact() {}$/;"	f	class:b2NullContact
b2NullContact	external/Box2d/Box2D/Dynamics/Contacts/b2NullContact.h	/^class b2NullContact : public b2Contact$/;"	c
b2Pair	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^struct b2Pair$/;"	s
b2PairLessThan	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^inline bool b2PairLessThan(const b2Pair& pair1, const b2Pair& pair2)$/;"	f
b2PointState	external/Box2d/Box2D/Collision/b2Collision.h	/^enum b2PointState$/;"	g
b2PolygonAndCircleContact	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.cpp	/^b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture* fixtureA, b2Fixture* fixtureB)$/;"	f	class:b2PolygonAndCircleContact
b2PolygonAndCircleContact	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.h	/^class b2PolygonAndCircleContact : public b2Contact$/;"	c
b2PolygonContact	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.cpp	/^b2PolygonContact::b2PolygonContact(b2Fixture* fixtureA, b2Fixture* fixtureB)$/;"	f	class:b2PolygonContact
b2PolygonContact	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.h	/^class b2PolygonContact : public b2Contact$/;"	c
b2PolygonShape	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^class b2PolygonShape : public b2Shape$/;"	c
b2PolygonShape	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^inline b2PolygonShape::b2PolygonShape()$/;"	f	class:b2PolygonShape
b2Position	external/Box2d/Box2D/Dynamics/b2Island.h	/^struct b2Position$/;"	s
b2PositionSolverManifold	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^struct b2PositionSolverManifold$/;"	s	file:
b2PrismaticJoint	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp	/^b2PrismaticJoint::b2PrismaticJoint(const b2PrismaticJointDef* def)$/;"	f	class:b2PrismaticJoint
b2PrismaticJoint	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^class b2PrismaticJoint : public b2Joint$/;"	c
b2PrismaticJointDef	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2PrismaticJointDef()$/;"	f	struct:b2PrismaticJointDef
b2PrismaticJointDef	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^struct b2PrismaticJointDef : public b2JointDef$/;"	s
b2PulleyJoint	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.cpp	/^b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef* def)$/;"	f	class:b2PulleyJoint
b2PulleyJoint	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^class b2PulleyJoint : public b2Joint$/;"	c
b2PulleyJointDef	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2PulleyJointDef()$/;"	f	struct:b2PulleyJointDef
b2PulleyJointDef	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^struct b2PulleyJointDef : public b2JointDef$/;"	s
b2QueryCallback	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^class b2QueryCallback$/;"	c
b2RayCastCallback	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^class b2RayCastCallback$/;"	c
b2RayCastInput	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2RayCastInput$/;"	s
b2RayCastOutput	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2RayCastOutput$/;"	s
b2RevoluteJoint	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp	/^b2RevoluteJoint::b2RevoluteJoint(const b2RevoluteJointDef* def)$/;"	f	class:b2RevoluteJoint
b2RevoluteJoint	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^class b2RevoluteJoint : public b2Joint$/;"	c
b2RevoluteJointDef	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2RevoluteJointDef()$/;"	f	struct:b2RevoluteJointDef
b2RevoluteJointDef	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^struct b2RevoluteJointDef : public b2JointDef$/;"	s
b2SeparationFunction	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^struct b2SeparationFunction$/;"	s	file:
b2Shape	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	b2Shape() { m_type = e_unknown; }$/;"	f	class:b2Shape
b2Shape	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^class b2Shape$/;"	c
b2Simplex	external/Box2d/Box2D/Collision/b2Distance.cpp	/^struct b2Simplex$/;"	s	file:
b2SimplexCache	external/Box2d/Box2D/Collision/b2Distance.h	/^struct b2SimplexCache$/;"	s
b2SimplexVertex	external/Box2d/Box2D/Collision/b2Distance.cpp	/^struct b2SimplexVertex$/;"	s	file:
b2Sqrt	external/Box2d/Box2D/Common/b2Math.h	60;"	d
b2StackAllocator	external/Box2d/Box2D/Common/b2StackAllocator.cpp	/^b2StackAllocator::b2StackAllocator()$/;"	f	class:b2StackAllocator
b2StackAllocator	external/Box2d/Box2D/Common/b2StackAllocator.h	/^class b2StackAllocator$/;"	c
b2StackEntry	external/Box2d/Box2D/Common/b2StackAllocator.h	/^struct b2StackEntry$/;"	s
b2Swap	external/Box2d/Box2D/Common/b2Math.h	/^template<typename T> inline void b2Swap(T& a, T& b)$/;"	f
b2Sweep	external/Box2d/Box2D/Common/b2Math.h	/^struct b2Sweep$/;"	s
b2TOIConstraint	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^struct b2TOIConstraint$/;"	s	file:
b2TOIInput	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^struct b2TOIInput$/;"	s
b2TOIOutput	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^struct b2TOIOutput$/;"	s
b2TOISolver	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^b2TOISolver::b2TOISolver(b2StackAllocator* allocator)$/;"	f	class:b2TOISolver
b2TOISolver	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.h	/^class b2TOISolver$/;"	c
b2TOISolverManifold	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^struct b2TOISolverManifold$/;"	s	file:
b2TestOverlap	external/Box2d/Box2D/Collision/b2Collision.cpp	/^bool b2TestOverlap(const b2Shape* shapeA, const b2Shape* shapeB,$/;"	f
b2TestOverlap	external/Box2d/Box2D/Collision/b2Collision.h	/^inline bool b2TestOverlap(const b2AABB& a, const b2AABB& b)$/;"	f
b2TimeOfImpact	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^void b2TimeOfImpact(b2TOIOutput* output, const b2TOIInput* input)$/;"	f
b2TimeStep	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^struct b2TimeStep$/;"	s
b2Transform	external/Box2d/Box2D/Common/b2Math.h	/^	b2Transform() {}$/;"	f	struct:b2Transform
b2Transform	external/Box2d/Box2D/Common/b2Math.h	/^	b2Transform(const b2Vec2& position, const b2Mat22& R) : position(position), R(R) {}$/;"	f	struct:b2Transform
b2Transform	external/Box2d/Box2D/Common/b2Math.h	/^struct b2Transform$/;"	s
b2Vec2	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2() {}$/;"	f	struct:b2Vec2
b2Vec2	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2(float32 x, float32 y) : x(x), y(y) {}$/;"	f	struct:b2Vec2
b2Vec2	external/Box2d/Box2D/Common/b2Math.h	/^struct b2Vec2$/;"	s
b2Vec3	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec3() {}$/;"	f	struct:b2Vec3
b2Vec3	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec3(float32 x, float32 y, float32 z) : x(x), y(y), z(z) {}$/;"	f	struct:b2Vec3
b2Vec3	external/Box2d/Box2D/Common/b2Math.h	/^struct b2Vec3$/;"	s
b2Velocity	external/Box2d/Box2D/Dynamics/b2Island.h	/^struct b2Velocity$/;"	s
b2Version	external/Box2d/Box2D/Common/b2Settings.h	/^struct b2Version$/;"	s
b2WeldJoint	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.cpp	/^b2WeldJoint::b2WeldJoint(const b2WeldJointDef* def)$/;"	f	class:b2WeldJoint
b2WeldJoint	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^class b2WeldJoint : public b2Joint$/;"	c
b2WeldJointDef	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2WeldJointDef()$/;"	f	struct:b2WeldJointDef
b2WeldJointDef	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^struct b2WeldJointDef : public b2JointDef$/;"	s
b2World	external/Box2d/Box2D/Dynamics/b2World.cpp	/^b2World::b2World(const b2Vec2& gravity, bool doSleep)$/;"	f	class:b2World
b2World	external/Box2d/Box2D/Dynamics/b2World.h	/^class b2World$/;"	c
b2WorldManifold	external/Box2d/Box2D/Collision/b2Collision.h	/^struct b2WorldManifold$/;"	s
b2WorldQueryWrapper	external/Box2d/Box2D/Dynamics/b2World.cpp	/^struct b2WorldQueryWrapper$/;"	s	file:
b2WorldRayCastWrapper	external/Box2d/Box2D/Dynamics/b2World.cpp	/^struct b2WorldRayCastWrapper$/;"	s	file:
b2_aabbExtension	external/Box2d/Box2D/Common/b2Settings.h	55;"	d
b2_aabbMultiplier	external/Box2d/Box2D/Common/b2Settings.h	60;"	d
b2_addState	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2_addState,		\/\/\/< point was added in the update$/;"	e	enum:b2PointState
b2_angularSleepTolerance	external/Box2d/Box2D/Common/b2Settings.h	117;"	d
b2_angularSlop	external/Box2d/Box2D/Common/b2Settings.h	68;"	d
b2_blockSizes	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^const int32 b2_blockSizes = 14;$/;"	v
b2_chunkArrayIncrement	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^const int32 b2_chunkArrayIncrement = 128;$/;"	v
b2_chunkSize	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^const int32 b2_chunkSize = 4096;$/;"	v
b2_contactBaumgarte	external/Box2d/Box2D/Common/b2Settings.h	106;"	d
b2_defaultFilter	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^b2ContactFilter b2_defaultFilter;$/;"	v
b2_defaultListener	external/Box2d/Box2D/Dynamics/b2ContactManager.cpp	/^b2ContactListener b2_defaultListener;$/;"	v
b2_dynamicBody	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2_dynamicBody,$/;"	e	enum:b2BodyType
b2_epsilon	external/Box2d/Box2D/Common/b2Settings.h	37;"	d
b2_gjkCalls	external/Box2d/Box2D/Collision/b2Distance.cpp	/^int32 b2_gjkCalls, b2_gjkIters, b2_gjkMaxIters;$/;"	v
b2_gjkIters	external/Box2d/Box2D/Collision/b2Distance.cpp	/^int32 b2_gjkCalls, b2_gjkIters, b2_gjkMaxIters;$/;"	v
b2_gjkMaxIters	external/Box2d/Box2D/Collision/b2Distance.cpp	/^int32 b2_gjkCalls, b2_gjkIters, b2_gjkMaxIters;$/;"	v
b2_kinematicBody	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2_kinematicBody,$/;"	e	enum:b2BodyType
b2_linearSleepTolerance	external/Box2d/Box2D/Common/b2Settings.h	114;"	d
b2_linearSlop	external/Box2d/Box2D/Common/b2Settings.h	64;"	d
b2_maxAngularCorrection	external/Box2d/Box2D/Common/b2Settings.h	91;"	d
b2_maxBlockSize	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^const int32 b2_maxBlockSize = 640;$/;"	v
b2_maxFloat	external/Box2d/Box2D/Common/b2Settings.h	36;"	d
b2_maxLinearCorrection	external/Box2d/Box2D/Common/b2Settings.h	87;"	d
b2_maxManifoldPoints	external/Box2d/Box2D/Common/b2Settings.h	47;"	d
b2_maxPolygonVertices	external/Box2d/Box2D/Common/b2Settings.h	50;"	d
b2_maxRotation	external/Box2d/Box2D/Common/b2Settings.h	100;"	d
b2_maxRotationSquared	external/Box2d/Box2D/Common/b2Settings.h	101;"	d
b2_maxStackEntries	external/Box2d/Box2D/Common/b2StackAllocator.h	/^const int32 b2_maxStackEntries = 32;$/;"	v
b2_maxTOIContacts	external/Box2d/Box2D/Common/b2Settings.h	79;"	d
b2_maxTranslation	external/Box2d/Box2D/Common/b2Settings.h	95;"	d
b2_maxTranslationSquared	external/Box2d/Box2D/Common/b2Settings.h	96;"	d
b2_minPulleyLength	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^const float32 b2_minPulleyLength = 2.0f;$/;"	v
b2_nullFeature	external/Box2d/Box2D/Collision/b2Collision.h	/^const uint8 b2_nullFeature = UCHAR_MAX;$/;"	v
b2_nullNode	external/Box2d/Box2D/Collision/b2DynamicTree.h	26;"	d
b2_nullState	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2_nullState,		\/\/\/< point does not exist$/;"	e	enum:b2PointState
b2_persistState	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2_persistState,	\/\/\/< point persisted across the update$/;"	e	enum:b2PointState
b2_pi	external/Box2d/Box2D/Common/b2Settings.h	38;"	d
b2_polygonRadius	external/Box2d/Box2D/Common/b2Settings.h	73;"	d
b2_removeState	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2_removeState		\/\/\/< point was removed in the update$/;"	e	enum:b2PointState
b2_stackSize	external/Box2d/Box2D/Common/b2StackAllocator.h	/^const int32 b2_stackSize = 100 * 1024;	\/\/ 100k$/;"	v
b2_staticBody	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2_staticBody = 0,$/;"	e	enum:b2BodyType
b2_timeToSleep	external/Box2d/Box2D/Common/b2Settings.h	111;"	d
b2_toiCalls	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^int32 b2_toiCalls, b2_toiIters, b2_toiMaxIters;$/;"	v
b2_toiIters	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^int32 b2_toiCalls, b2_toiIters, b2_toiMaxIters;$/;"	v
b2_toiMaxIters	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^int32 b2_toiCalls, b2_toiIters, b2_toiMaxIters;$/;"	v
b2_toiMaxOptIters	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^int32 b2_toiMaxOptIters;$/;"	v
b2_toiMaxRootIters	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^int32 b2_toiRootIters, b2_toiMaxRootIters;$/;"	v
b2_toiRootIters	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^int32 b2_toiRootIters, b2_toiMaxRootIters;$/;"	v
b2_velocityThreshold	external/Box2d/Box2D/Common/b2Settings.h	83;"	d
b2_version	external/Box2d/Box2D/Common/b2Settings.cpp	/^b2Version b2_version = {2, 1, 2};$/;"	v
b_o_s	external/Tremor/ogg.h	/^  int            b_o_s;    \/* set after we've written the initial page$/;"	m	struct:ogg_stream_state
b_o_s	external/Tremor/ogg.h	/^  long           b_o_s;$/;"	m	struct:__anon84
backend_state	external/Tremor/ivorbiscodec.h	/^  void       *backend_state;$/;"	m	struct:vorbis_dsp_state
backgroundMusic	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readonly) CDLongAudioSource *backgroundMusic;$/;"	v
backgroundMusicVolume	CocosDenshion/CocosDenshion/SimpleAudioEngine.h	/^@property (readwrite) float backgroundMusicVolume;$/;"	v
balls	external/Chipmunk/Demo/Pump.c	/^static cpBody *balls[numBalls];$/;"	v	file:
barklook	external/Tremor/floor0.c	/^static const int barklook[28]={$/;"	v	file:
barkmap	external/Tremor/backends.h	/^  long  barkmap;$/;"	m	struct:__anon74
base64	tools/tmx-embeded-2-png.py	/^import base64$/;"	i
base64Decode	cocos2d/Support/base64.c	/^int base64Decode(unsigned char *in, unsigned int inLength, unsigned char **out)$/;"	f
baseref	external/Tremor/ogg.h	/^  ogg_reference *baseref;$/;"	m	struct:oggbyte_buffer
bb	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpBB bb;$/;"	m	struct:cpShape
bbFromCircle	external/Chipmunk/src/cpShape.c	/^bbFromCircle(const cpVect c, const cpFloat r)$/;"	f	file:
bbQueryContext	external/Chipmunk/src/cpSpace.c	/^typedef struct bbQueryContext {$/;"	s	file:
bbQueryContext	external/Chipmunk/src/cpSpace.c	/^} bbQueryContext;$/;"	t	typeref:struct:bbQueryContext	file:
bbQueryHelper	external/Chipmunk/src/cpSpace.c	/^bbQueryHelper(cpBB *bb, cpShape *shape, bbQueryContext *context)$/;"	f	file:
bbfunc	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpSpaceHashBBFunc bbfunc;$/;"	m	struct:cpSpaceHash
begin	external/Chipmunk/Demo/Player.c	/^begin(cpArbiter *arb, cpSpace *space, void *ignore)$/;"	f	file:
begin	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionBeginFunc begin;$/;"	m	struct:cpCollisionHandler
begin	external/Tremor/backends.h	/^  long  begin;$/;"	m	struct:vorbis_info_residue0
begin	external/Tremor/ogg.h	/^  long           begin;$/;"	m	struct:ogg_reference
bias	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat bias;$/;"	m	struct:cpGearJoint
bias	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect bias;$/;"	m	struct:cpGrooveJoint
bias	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpFloat bias;$/;"	m	struct:cpPinJoint
bias	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect bias;$/;"	m	struct:cpPivotJoint
bias	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat bias;$/;"	m	struct:cpRatchetJoint
bias	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpFloat bias;$/;"	m	struct:cpRotaryLimitJoint
bias	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpFloat bias;$/;"	m	struct:cpSlideJoint
bias	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat bias;$/;"	m	struct:cpContact
biasCoef	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpFloat biasCoef;$/;"	m	struct:cpConstraint
binarypoint	external/Tremor/codebook.h	/^  int           binarypoint;$/;"	m	struct:codebook
bit_depth	external/libpng/png.h	/^   png_byte bit_depth; \/* bit depth of row *\/$/;"	m	struct:png_row_info_struct
bitrate_lower	external/Tremor/ivorbiscodec.h	/^  long bitrate_lower;$/;"	m	struct:vorbis_info
bitrate_nominal	external/Tremor/ivorbiscodec.h	/^  long bitrate_nominal;$/;"	m	struct:vorbis_info
bitrate_upper	external/Tremor/ivorbiscodec.h	/^  long bitrate_upper;$/;"	m	struct:vorbis_info
bitrate_window	external/Tremor/ivorbiscodec.h	/^  long bitrate_window;$/;"	m	struct:vorbis_info
bitrev	external/Tremor/mdct.c	/^static unsigned char bitrev[16]={0,8,4,12,2,10,6,14,1,9,5,13,3,11,7,15};$/;"	v	file:
bitrev12	external/Tremor/mdct.c	/^STIN int bitrev12(int x){$/;"	f
bitreverse	external/Tremor/codebook.c	/^static ogg_uint32_t bitreverse(ogg_uint32_t x){$/;"	f	file:
bitreverse	external/Tremor/sharedbook.c	/^static ogg_uint32_t bitreverse(ogg_uint32_t x){$/;"	f	file:
bittrack	external/Tremor/ivorbisfile.h	/^  ogg_int64_t      bittrack;$/;"	m	struct:OggVorbis_File
bl	cocos2d/ccTypes.h	/^	ccV2F_C4F_T2F	bl;$/;"	m	struct:_ccV2F_C4F_T2F_Quad
bl	cocos2d/ccTypes.h	/^	ccV3F_C4B_T2F	bl;$/;"	m	struct:_ccV3F_C4B_T2F_Quad
bl	cocos2d/ccTypes.h	/^	ccVertex2F		bl;$/;"	m	struct:_ccQuad2
bl	cocos2d/ccTypes.h	/^	ccVertex3F		bl;$/;"	m	struct:_ccQuad3
blendAdditive	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite) BOOL blendAdditive;$/;"	v
blendFunc	cocos2d/CCAtlasNode.h	/^@property (nonatomic,readwrite) ccBlendFunc blendFunc;$/;"	v
blendFunc	cocos2d/CCLayer.h	/^@property (nonatomic,readwrite) ccBlendFunc blendFunc;$/;"	v
blendFunc	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite) ccBlendFunc blendFunc;$/;"	v
blendFunc	cocos2d/CCRibbon.h	/^@property (nonatomic,readwrite,assign) ccBlendFunc blendFunc;$/;"	v
blendFunc	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) ccBlendFunc blendFunc;$/;"	v
blendFunc	cocos2d/CCSpriteSheet.h	/^@property (nonatomic,readwrite) ccBlendFunc blendFunc;$/;"	v
blockSize	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^	int32 blockSize;$/;"	m	struct:b2Chunk	file:
blocked	external/Chipmunk/Demo/Sensors.c	/^	int blocked;$/;"	m	struct:Emitter	file:
blockerBegin	external/Chipmunk/Demo/Sensors.c	/^blockerBegin(cpArbiter *arb, cpSpace *space, void *unused)$/;"	f	file:
blockerSeparate	external/Chipmunk/Demo/Sensors.c	/^blockerSeparate(cpArbiter *arb, cpSpace *space, void *unused)$/;"	f	file:
blockflag	external/Tremor/codec_internal.h	/^  int blockflag;$/;"	m	struct:__anon80
blocks	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^	b2Block* blocks;$/;"	m	struct:b2Chunk	file:
blocksizes	external/Tremor/codec_internal.h	/^  long blocksizes[2];$/;"	m	struct:codec_setup_info
bloom_bv	cocos2d/Support/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table
bloom_nbits	cocos2d/Support/uthash.h	/^   char bloom_nbits;$/;"	m	struct:UT_hash_table
bloom_sig	cocos2d/Support/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table
blue	external/libpng/png.h	/^   png_byte blue;$/;"	m	struct:png_color_8_struct
blue	external/libpng/png.h	/^   png_byte blue;$/;"	m	struct:png_color_struct
blue	external/libpng/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_color_16_struct
blue	external/libpng/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_sPLT_entry_struct
bodies	external/Box2d/Testbed/Tests/ElasticBody.h	/^	b2Body* bodies[64];$/;"	m	class:ElasticBody
bodies	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpArray *bodies;$/;"	m	struct:cpSpace
body	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpBody *body;$/;"	m	struct:cpShape
body	external/Tremor/ogg.h	/^  ogg_reference *body;$/;"	m	struct:__anon85
bodyA	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Body* bodyA;$/;"	m	struct:b2ContactConstraint
bodyA	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Body* bodyA;$/;"	m	struct:b2TOIConstraint	file:
bodyA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Body* bodyA;$/;"	m	struct:b2JointDef
bodyB	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Body* bodyB;$/;"	m	struct:b2ContactConstraint
bodyB	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Body* bodyB;$/;"	m	struct:b2TOIConstraint	file:
bodyB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Body* bodyB;$/;"	m	struct:b2JointDef
bodyFreeWrap	external/Chipmunk/src/cpSpace.c	/^static void         bodyFreeWrap(cpBody       *ptr, void *unused){      cpBodyFree(ptr);}$/;"	f	file:
bodyPointSize	external/Chipmunk/Demo/drawSpace.h	/^	float bodyPointSize;$/;"	m	struct:drawSpaceOptions
body_fill	external/Tremor/ogg.h	/^  ogg_uint32_t   body_fill;$/;"	m	struct:ogg_stream_state
body_fill_next	external/Tremor/ogg.h	/^  ogg_uint32_t   body_fill_next;$/;"	m	struct:ogg_stream_state
body_head	external/Tremor/ogg.h	/^  ogg_reference *body_head;$/;"	m	struct:ogg_stream_state
body_len	external/Tremor/ogg.h	/^  long           body_len;$/;"	m	struct:__anon85
body_tail	external/Tremor/ogg.h	/^  ogg_reference *body_tail;$/;"	m	struct:ogg_stream_state
bodybytes	external/Tremor/ogg.h	/^  int               bodybytes;$/;"	m	struct:ogg_sync_state
book_param	external/Tremor/codec_internal.h	/^  static_codebook        *book_param[256];$/;"	m	struct:codec_setup_info
booklist	external/Tremor/backends.h	/^  int    booklist[256];    \/* list of second stage books *\/$/;"	m	struct:vorbis_info_residue0
books	external/Tremor/backends.h	/^  int   books[16];$/;"	m	struct:__anon74
books	external/Tremor/codec_internal.h	/^  int        books;$/;"	m	struct:codec_setup_info
bottom	cocos2d/CCBitmapFontAtlas.h	/^	int bottom;$/;"	m	struct:_bitmapFontPadding
bounce	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat nMass, tMass, bounce;$/;"	m	struct:cpContact
boundarySet	cocos2d/CCAction.h	/^@property (nonatomic,readwrite) BOOL boundarySet;$/;"	v
br	cocos2d/ccTypes.h	/^	ccV2F_C4F_T2F	br;$/;"	m	struct:_ccV2F_C4F_T2F_Quad
br	cocos2d/ccTypes.h	/^	ccV3F_C4B_T2F	br;$/;"	m	struct:_ccV3F_C4B_T2F_Quad
br	cocos2d/ccTypes.h	/^	ccVertex2F		br;$/;"	m	struct:_ccQuad2
br	cocos2d/ccTypes.h	/^	ccVertex3F		br;$/;"	m	struct:_ccQuad3
broadPhase	external/Box2d/Box2D/Dynamics/b2World.cpp	/^	const b2BroadPhase* broadPhase;$/;"	m	struct:b2WorldQueryWrapper	file:
broadPhase	external/Box2d/Box2D/Dynamics/b2World.cpp	/^	const b2BroadPhase* broadPhase;$/;"	m	struct:b2WorldRayCastWrapper	file:
buckets	cocos2d/Support/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table
buffer	external/Tremor/ogg.h	/^  ogg_buffer    *buffer;$/;"	m	struct:ogg_reference
bufferData	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	void* bufferData;$/;"	m	struct:_bufferInfo
bufferId	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	ALuint bufferId;$/;"	m	struct:_bufferInfo
bufferInfo	CocosDenshion/CocosDenshion/CocosDenshion.h	/^} bufferInfo;	$/;"	t	typeref:struct:_bufferInfo
bufferState	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	int bufferState;$/;"	m	struct:_bufferInfo
bufferState	CocosDenshion/CocosDenshion/CocosDenshion.h	/^enum bufferState {$/;"	g
bufferpool	external/Tremor/ogg.h	/^  ogg_buffer_state *bufferpool;$/;"	m	struct:ogg_sync_state
bullet	external/Box2d/Box2D/Dynamics/b2Body.h	/^	bool bullet;$/;"	m	struct:b2BodyDef
bytes	external/Tremor/ogg.h	/^  long           bytes;$/;"	m	struct:__anon84
c	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 c0, c;		\/\/\/< center world positions$/;"	m	struct:b2Sweep
c	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect c;$/;"	m	struct:cpCircleShape
c0	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 c0, c;		\/\/\/< center world positions$/;"	m	struct:b2Sweep
cPI1_8	external/Tremor/mdct.h	30;"	d
cPI1_8	external/Tremor/mdct.h	34;"	d
cPI2_8	external/Tremor/mdct.h	29;"	d
cPI2_8	external/Tremor/mdct.h	33;"	d
cPI3_8	external/Tremor/mdct.h	28;"	d
cPI3_8	external/Tremor/mdct.h	32;"	d
cacheData	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpBB (*cacheData)(struct cpShape *shape, cpVect p, cpVect rot);$/;"	m	struct:cpShapeClass
callback	external/Box2d/Box2D/Dynamics/b2World.cpp	/^	b2QueryCallback* callback;$/;"	m	struct:b2WorldQueryWrapper	file:
callback	external/Box2d/Box2D/Dynamics/b2World.cpp	/^	b2RayCastCallback* callback;$/;"	m	struct:b2WorldRayCastWrapper	file:
callbackMethod	cocos2d/CCInstantAction.h	/^@property (nonatomic,readwrite) CC_CALLBACK_ND callbackMethod;$/;"	v
callbacks	external/Tremor/ivorbisfile.h	/^  ov_callbacks callbacks;$/;"	m	struct:OggVorbis_File
camera	cocos2d/CCNode.h	/^ @property(nonatomic,readonly) CCCamera* camera;$/;"	v
capHeight	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFloat capHeight;$/;"	v
capacity	cocos2d/CCTextureAtlas.h	/^@property (nonatomic,readonly) NSUInteger capacity;$/;"	v
catcherBarBegin	external/Chipmunk/Demo/Sensors.c	/^catcherBarBegin(cpArbiter *arb, cpSpace *space, void *unused)$/;"	f	file:
categoryBits	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	uint16 categoryBits;$/;"	m	struct:b2Filter
ccArray	cocos2d/Support/ccCArray.h	/^typedef struct ccArray {$/;"	s
ccArray	cocos2d/Support/ccCArray.h	/^} ccArray;$/;"	t	typeref:struct:ccArray
ccArrayAppendArray	cocos2d/Support/ccCArray.h	/^static inline void ccArrayAppendArray(ccArray *arr, ccArray *plusArr)$/;"	f
ccArrayAppendArrayWithResize	cocos2d/Support/ccCArray.h	/^static inline void ccArrayAppendArrayWithResize(ccArray *arr, ccArray *plusArr)$/;"	f
ccArrayAppendObject	cocos2d/Support/ccCArray.h	/^static inline void ccArrayAppendObject(ccArray *arr, id object)$/;"	f
ccArrayAppendObjectWithResize	cocos2d/Support/ccCArray.h	/^static inline void ccArrayAppendObjectWithResize(ccArray *arr, id object)$/;"	f
ccArrayContainsObject	cocos2d/Support/ccCArray.h	/^static inline BOOL ccArrayContainsObject(ccArray *arr, id object)$/;"	f
ccArrayDoubleCapacity	cocos2d/Support/ccCArray.h	/^static inline void ccArrayDoubleCapacity(ccArray *arr)$/;"	f
ccArrayEnsureExtraCapacity	cocos2d/Support/ccCArray.h	/^static inline void ccArrayEnsureExtraCapacity(ccArray *arr, NSUInteger extra)$/;"	f
ccArrayFastRemoveObject	cocos2d/Support/ccCArray.h	/^static inline void ccArrayFastRemoveObject(ccArray *arr, id object)$/;"	f
ccArrayFastRemoveObjectAtIndex	cocos2d/Support/ccCArray.h	/^static inline void ccArrayFastRemoveObjectAtIndex(ccArray *arr, NSUInteger index)$/;"	f
ccArrayFree	cocos2d/Support/ccCArray.h	/^static inline void ccArrayFree(ccArray *arr)$/;"	f
ccArrayFullRemoveArray	cocos2d/Support/ccCArray.h	/^static inline void ccArrayFullRemoveArray(ccArray *arr, ccArray *minusArr)$/;"	f
ccArrayGetIndexOfObject	cocos2d/Support/ccCArray.h	/^static inline NSUInteger ccArrayGetIndexOfObject(ccArray *arr, id object)$/;"	f
ccArrayInsertObjectAtIndex	cocos2d/Support/ccCArray.h	/^static inline void ccArrayInsertObjectAtIndex(ccArray *arr, id object, NSUInteger index)$/;"	f
ccArrayMakeObjectsPerformSelector	cocos2d/Support/ccCArray.h	/^static inline void ccArrayMakeObjectsPerformSelector(ccArray *arr, SEL sel)$/;"	f
ccArrayMakeObjectsPerformSelectorWithObject	cocos2d/Support/ccCArray.h	/^static inline void ccArrayMakeObjectsPerformSelectorWithObject(ccArray *arr, SEL sel, id object)$/;"	f
ccArrayNew	cocos2d/Support/ccCArray.h	/^static inline ccArray* ccArrayNew(NSUInteger capacity) {$/;"	f
ccArrayRemoveAllObjects	cocos2d/Support/ccCArray.h	/^static inline void ccArrayRemoveAllObjects(ccArray *arr)$/;"	f
ccArrayRemoveArray	cocos2d/Support/ccCArray.h	/^static inline void ccArrayRemoveArray(ccArray *arr, ccArray *minusArr)$/;"	f
ccArrayRemoveObject	cocos2d/Support/ccCArray.h	/^static inline void ccArrayRemoveObject(ccArray *arr, id object)$/;"	f
ccArrayRemoveObjectAtIndex	cocos2d/Support/ccCArray.h	/^static inline void ccArrayRemoveObjectAtIndex(ccArray *arr, NSUInteger index)$/;"	f
ccBLACK	cocos2d/ccTypes.h	/^static const ccColor3B ccBLACK={0,0,0};$/;"	v
ccBLUE	cocos2d/ccTypes.h	/^static const ccColor3B ccBLUE={0,0,255};$/;"	v
ccBezierConfig	cocos2d/CCIntervalAction.h	/^} ccBezierConfig;$/;"	t	typeref:struct:_ccBezierConfig
ccBitmapFontDef	cocos2d/CCBitmapFontAtlas.h	/^} ccBitmapFontDef;$/;"	t	typeref:struct:_bitmapFontDef
ccBitmapFontPadding	cocos2d/CCBitmapFontAtlas.h	/^} ccBitmapFontPadding;$/;"	t	typeref:struct:_bitmapFontPadding
ccBlendFunc	cocos2d/ccTypes.h	/^} ccBlendFunc;$/;"	t	typeref:struct:_ccBlendFunc
ccCArray	cocos2d/Support/ccCArray.h	/^typedef ccArray ccCArray;$/;"	t
ccCArrayAppendArray	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayAppendArray(ccCArray *arr, ccCArray *plusArr)$/;"	f
ccCArrayAppendArrayWithResize	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayAppendArrayWithResize(ccCArray *arr, ccCArray *plusArr)$/;"	f
ccCArrayAppendValue	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayAppendValue(ccCArray *arr, void* value)$/;"	f
ccCArrayAppendValueWithResize	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayAppendValueWithResize(ccCArray *arr, id value)$/;"	f
ccCArrayContainsValue	cocos2d/Support/ccCArray.h	/^static inline BOOL ccCArrayContainsValue(ccCArray *arr, void* value)$/;"	f
ccCArrayDoubleCapacity	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayDoubleCapacity(ccCArray *arr)$/;"	f
ccCArrayEnsureExtraCapacity	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayEnsureExtraCapacity(ccCArray *arr, NSUInteger extra)$/;"	f
ccCArrayFastRemoveValueAtIndex	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayFastRemoveValueAtIndex(ccCArray *arr, NSUInteger index)$/;"	f
ccCArrayFree	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayFree(ccCArray *arr)$/;"	f
ccCArrayFullRemoveArray	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayFullRemoveArray(ccCArray *arr, ccCArray *minusArr)$/;"	f
ccCArrayGetIndexOfValue	cocos2d/Support/ccCArray.h	/^static inline NSUInteger ccCArrayGetIndexOfValue(ccCArray *arr, void* value)$/;"	f
ccCArrayInsertValueAtIndex	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayInsertValueAtIndex( ccCArray *arr, void *value, NSUInteger index)$/;"	f
ccCArrayNew	cocos2d/Support/ccCArray.h	/^static inline ccCArray* ccCArrayNew(NSUInteger capacity) {$/;"	f
ccCArrayRemoveAllValues	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayRemoveAllValues(ccCArray *arr)$/;"	f
ccCArrayRemoveArray	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayRemoveArray(ccCArray *arr, ccCArray *minusArr)$/;"	f
ccCArrayRemoveValue	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayRemoveValue(ccCArray *arr, void* value)$/;"	f
ccCArrayRemoveValueAtIndex	cocos2d/Support/ccCArray.h	/^static inline void ccCArrayRemoveValueAtIndex(ccCArray *arr, NSUInteger index)$/;"	f
ccColor3B	cocos2d/ccTypes.h	/^} ccColor3B;$/;"	t	typeref:struct:_ccColor3B
ccColor4B	cocos2d/ccTypes.h	/^} ccColor4B;$/;"	t	typeref:struct:_ccColor4B
ccColor4F	cocos2d/ccTypes.h	/^} ccColor4F;$/;"	t	typeref:struct:_ccColor4F
ccDeviceOrientation	cocos2d/CCDirector.h	/^} ccDeviceOrientation;$/;"	t	typeref:enum:__anon39
ccDirectorProjection	cocos2d/CCDirector.h	/^} ccDirectorProjection;$/;"	t	typeref:enum:__anon37
ccDirectorType	cocos2d/CCDirector.h	/^} ccDirectorType;$/;"	t	typeref:enum:__anon38
ccGRAY	cocos2d/ccTypes.h	/^static const ccColor3B ccGRAY={166,166,166};$/;"	v
ccGREEN	cocos2d/ccTypes.h	/^static const ccColor3B ccGREEN={0,255,0};$/;"	v
ccGridSize	cocos2d/ccTypes.h	/^} ccGridSize;$/;"	t	typeref:struct:_ccGridSize
ccHonorParentTransform	cocos2d/CCSprite.h	/^} ccHonorParentTransform;$/;"	t	typeref:enum:__anon43
ccMAGENTA	cocos2d/ccTypes.h	/^static const ccColor3B ccMAGENTA={255,0,255};$/;"	v
ccORANGE	cocos2d/ccTypes.h	/^static const ccColor3B ccORANGE={255,127,0};$/;"	v
ccPointSprite	cocos2d/ccTypes.h	/^} ccPointSprite;$/;"	t	typeref:struct:_ccPointSprite
ccQuad2	cocos2d/ccTypes.h	/^} ccQuad2;$/;"	t	typeref:struct:_ccQuad2
ccQuad3	cocos2d/ccTypes.h	/^} ccQuad3;$/;"	t	typeref:struct:_ccQuad3
ccRED	cocos2d/ccTypes.h	/^static const ccColor3B ccRED={255,0,0};$/;"	v
ccTex2F	cocos2d/ccTypes.h	/^} ccTex2F;$/;"	t	typeref:struct:_ccTex2F
ccTexParams	cocos2d/CCTexture2D.h	/^} ccTexParams;$/;"	t	typeref:struct:_ccTexParams
ccTime	cocos2d/ccTypes.h	/^typedef float ccTime;$/;"	t
ccTouchBegan	cocos2d/CCTouchDispatcher.h	/^	ccTouchBegan,$/;"	e	enum:__anon31
ccTouchCancelled	cocos2d/CCTouchDispatcher.h	/^	ccTouchCancelled,$/;"	e	enum:__anon31
ccTouchEnded	cocos2d/CCTouchDispatcher.h	/^	ccTouchEnded,$/;"	e	enum:__anon31
ccTouchHandlerHelperData	cocos2d/CCTouchDispatcher.h	/^struct ccTouchHandlerHelperData {$/;"	s
ccTouchMax	cocos2d/CCTouchDispatcher.h	/^	ccTouchMax,$/;"	e	enum:__anon31
ccTouchMoved	cocos2d/CCTouchDispatcher.h	/^	ccTouchMoved,$/;"	e	enum:__anon31
ccTouchSelectorAllBits	cocos2d/CCTouchDispatcher.h	/^	ccTouchSelectorAllBits = ( ccTouchSelectorBeganBit | ccTouchSelectorMovedBit | ccTouchSelectorEndedBit | ccTouchSelectorCancelledBit),$/;"	e	enum:__anon30
ccTouchSelectorBeganBit	cocos2d/CCTouchDispatcher.h	/^	ccTouchSelectorBeganBit = 1 << 0,$/;"	e	enum:__anon30
ccTouchSelectorCancelledBit	cocos2d/CCTouchDispatcher.h	/^	ccTouchSelectorCancelledBit = 1 << 3,$/;"	e	enum:__anon30
ccTouchSelectorEndedBit	cocos2d/CCTouchDispatcher.h	/^	ccTouchSelectorEndedBit = 1 << 2,$/;"	e	enum:__anon30
ccTouchSelectorFlag	cocos2d/CCTouchDispatcher.h	/^} ccTouchSelectorFlag;$/;"	t	typeref:enum:__anon30
ccTouchSelectorMovedBit	cocos2d/CCTouchDispatcher.h	/^	ccTouchSelectorMovedBit = 1 << 1,$/;"	e	enum:__anon30
ccV2F_C4F_T2F	cocos2d/ccTypes.h	/^} ccV2F_C4F_T2F;$/;"	t	typeref:struct:_ccV2F_C4F_T2F
ccV2F_C4F_T2F_Quad	cocos2d/ccTypes.h	/^} ccV2F_C4F_T2F_Quad;$/;"	t	typeref:struct:_ccV2F_C4F_T2F_Quad
ccV3F_C4B_T2F	cocos2d/ccTypes.h	/^} ccV3F_C4B_T2F;$/;"	t	typeref:struct:_ccV3F_C4B_T2F
ccV3F_C4B_T2F_Quad	cocos2d/ccTypes.h	/^} ccV3F_C4B_T2F_Quad;$/;"	t	typeref:struct:_ccV3F_C4B_T2F_Quad
ccVertex2F	cocos2d/ccTypes.h	128;"	d
ccVertex3F	cocos2d/ccTypes.h	/^} ccVertex3F;$/;"	t	typeref:struct:_ccVertex3F
ccWHITE	cocos2d/ccTypes.h	/^static const ccColor3B ccWHITE={255,255,255};$/;"	v
ccYELLOW	cocos2d/ccTypes.h	/^static const ccColor3B ccYELLOW={255,255,0};$/;"	v
ccc3	cocos2d/ccTypes.h	/^ccc3(const GLubyte r, const GLubyte g, const GLubyte b)$/;"	f
ccc4	cocos2d/ccTypes.h	/^ccc4(const GLubyte r, const GLubyte g, const GLubyte b, const GLubyte o)$/;"	f
ccc4FEqual	cocos2d/ccTypes.h	/^static inline BOOL ccc4FEqual(ccColor4F a, ccColor4F b)$/;"	f
ccc4FFromccc3B	cocos2d/ccTypes.h	/^static inline ccColor4F ccc4FFromccc3B(ccColor3B c)$/;"	f
ccc4FFromccc4B	cocos2d/ccTypes.h	/^static inline ccColor4F ccc4FFromccc4B(ccColor4B c)$/;"	f
ccg	cocos2d/ccTypes.h	/^ccg(const int x, const int y)$/;"	f
ccp	cocos2d/Support/CGPointExtension.h	59;"	d
ccpAdd	cocos2d/Support/CGPointExtension.h	/^ccpAdd(const CGPoint v1, const CGPoint v2)$/;"	f
ccpCross	cocos2d/Support/CGPointExtension.h	/^ccpCross(const CGPoint v1, const CGPoint v2)$/;"	f
ccpDot	cocos2d/Support/CGPointExtension.h	/^ccpDot(const CGPoint v1, const CGPoint v2)$/;"	f
ccpLengthSQ	cocos2d/Support/CGPointExtension.h	/^ccpLengthSQ(const CGPoint v)$/;"	f
ccpMidpoint	cocos2d/Support/CGPointExtension.h	/^ccpMidpoint(const CGPoint v1, const CGPoint v2)$/;"	f
ccpMult	cocos2d/Support/CGPointExtension.h	/^ccpMult(const CGPoint v, const CGFloat s)$/;"	f
ccpNeg	cocos2d/Support/CGPointExtension.h	/^ccpNeg(const CGPoint v)$/;"	f
ccpPerp	cocos2d/Support/CGPointExtension.h	/^ccpPerp(const CGPoint v)$/;"	f
ccpProject	cocos2d/Support/CGPointExtension.h	/^ccpProject(const CGPoint v1, const CGPoint v2)$/;"	f
ccpRPerp	cocos2d/Support/CGPointExtension.h	/^ccpRPerp(const CGPoint v)$/;"	f
ccpRotate	cocos2d/Support/CGPointExtension.h	/^ccpRotate(const CGPoint v1, const CGPoint v2)$/;"	f
ccpSub	cocos2d/Support/CGPointExtension.h	/^ccpSub(const CGPoint v1, const CGPoint v2)$/;"	f
ccpUnrotate	cocos2d/Support/CGPointExtension.h	/^ccpUnrotate(const CGPoint v1, const CGPoint v2)$/;"	f
celldim	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpFloat celldim;$/;"	m	struct:cpSpaceHash
center	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	b2Vec2 center;$/;"	m	struct:b2MassData
centerOfGravity	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) CGPoint centerOfGravity;$/;"	v
centerW	external/Tremor/ivorbiscodec.h	/^  long centerW;$/;"	m	struct:vorbis_dsp_state
cgFont	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFontRef cgFont;$/;"	v
ch	external/Tremor/mapping0.c	/^  int ch;$/;"	m	struct:__anon82	file:
channels	external/Tremor/ivorbiscodec.h	/^  int channels;$/;"	m	struct:vorbis_info
channels	external/libpng/png.h	/^   png_byte channels; \/* number of channels (1, 2, 3, or 4) *\/$/;"	m	struct:png_row_info_struct
charID	cocos2d/CCBitmapFontAtlas.h	/^	unsigned int charID;$/;"	m	struct:_bitmapFontDef
check_dst_dir	install-templates.sh	/^check_dst_dir(){$/;"	f
child1	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 child1;$/;"	m	struct:b2DynamicTreeNode
child2	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 child2;$/;"	m	struct:b2DynamicTreeNode
children	cocos2d/CCNode.h	/^@property(nonatomic,readonly) CCArray *children;$/;"	v
chipmunkDemo	external/Chipmunk/Demo/ChipmunkDemo.h	/^typedef struct chipmunkDemo {$/;"	s
chipmunkDemo	external/Chipmunk/Demo/ChipmunkDemo.h	/^} chipmunkDemo;$/;"	t	typeref:struct:chipmunkDemo
chipmunkDemo	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^typedef struct chipmunkDemo {$/;"	s
chipmunkDemo	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^} chipmunkDemo;$/;"	t	typeref:struct:chipmunkDemo
chmuxlist	external/Tremor/backends.h	/^  int   chmuxlist[256];   \/* up to 256 channels in a Vorbis stream *\/$/;"	m	struct:vorbis_info_mapping0
circle2circle	external/Chipmunk/src/cpCollision.c	/^circle2circle(cpShape *shape1, cpShape *shape2, cpContact *arr)$/;"	f	file:
circle2circleQuery	external/Chipmunk/src/cpCollision.c	/^circle2circleQuery(cpVect p1, cpVect p2, cpFloat r1, cpFloat r2, cpContact *con)$/;"	f	file:
circle2poly	external/Chipmunk/src/cpCollision.c	/^circle2poly(cpShape *shape1, cpShape *shape2, cpContact *con)$/;"	f	file:
circle2segment	external/Chipmunk/src/cpCollision.c	/^circle2segment(cpShape *circleShape, cpShape *segmentShape, cpContact *con)$/;"	f	file:
circleRadius	external/Chipmunk/Demo/UnsafeOps.c	/^cpFloat circleRadius = 30.0f;$/;"	v
circleSegmentQuery	external/Chipmunk/src/cpShape.c	/^circleSegmentQuery(cpShape *shape, cpVect center, cpFloat r, cpVect a, cpVect b, cpSegmentQueryInfo *info)$/;"	f	file:
circleVAR	external/Chipmunk/Demo/drawSpace.c	/^static const GLfloat circleVAR[] = {$/;"	v	file:
circleVAR_count	external/Chipmunk/Demo/drawSpace.c	/^static const int circleVAR_count = sizeof(circleVAR)\/sizeof(GLfloat)\/2;$/;"	v	file:
circles	external/Chipmunk/Demo/UnsafeOps.c	/^cpShape *circles[NUM_CIRCLES];$/;"	v
claimedTouches	cocos2d/CCTouchHandler.h	/^@property(nonatomic, readonly) NSMutableSet *claimedTouches;$/;"	v
clamp	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpFloat clamp;$/;"	m	struct:cpGrooveJoint
clamp_vect	external/Chipmunk/include/chipmunk/constraints/util.h	/^clamp_vect(cpVect v, cpFloat len)$/;"	f
class_book	external/Tremor/backends.h	/^  int   class_book[VIF_CLASS];       \/* subs ^ dim entries *\/$/;"	m	struct:__anon75
class_dim	external/Tremor/backends.h	/^  int   class_dim[VIF_CLASS];        \/* 1 to 8 *\/$/;"	m	struct:__anon75
class_parser	tools/compatibility_with_0_8/generate_compat_file.py	/^def class_parser():$/;"	f
class_subbook	external/Tremor/backends.h	/^  int   class_subbook[VIF_CLASS][8]; \/* [VIF_CLASS][subs] *\/$/;"	m	struct:__anon75
class_subs	external/Tremor/backends.h	/^  int   class_subs[VIF_CLASS];       \/* 0,1,2,3 (bits: 1<<n poss) *\/$/;"	m	struct:__anon75
classes	tools/compatibility_with_0_8/classes_0_8.py	/^classes = {	"AccelAmplitude" : "",	"AccelDeccelAmplitude" : "",	"Action" : "",	"ActionManager" : "",	"Animate" : "",	"Animation" : "",	"AtlasAnimation" : "",	"AtlasNode" : "",	"AtlasSprite" : "",	"AtlasSpriteFrame" : "",	"AtlasSpriteManager" : "",	"BezierBy" : "",	"BezierTo" : "",	"BitmapFontAtlas" : "",	"BitmapFontConfiguration" : "",	"Blink" : "",	"CallFunc" : "",	"CallFuncN" : "",	"CallFuncND" : "",	"Camera" : "",	"CameraAction" : "",	"CocosNode" : "",	"ColorLayer" : "",	"DeccelAmplitude" : "",	"DelayTime" : "",	"Director" : "",	"DisplayLinkDirector" : "",	"EAGLView" : "",	"EaseAction" : "",	"EaseBackIn" : "",	"EaseBackInOut" : "",	"EaseBackOut" : "",	"EaseBounce" : "",	"EaseBounceIn" : "",	"EaseBounceInOut" : "",	"EaseBounceOut" : "",	"EaseElastic" : "",	"EaseElasticIn" : "",	"EaseElasticInOut" : "",	"EaseElasticOut" : "",	"EaseExponentialIn" : "",	"EaseExponentialInOut" : "",	"EaseExponentialOut" : "",	"EaseIn" : "",	"EaseInOut" : "",	"EaseOut" : "",	"EaseRateAction" : "",	"EaseSineIn" : "",	"EaseSineInOut" : "",	"EaseSineOut" : "",	"FadeBLTransition" : "",	"FadeDownTransition" : "",	"FadeIn" : "",	"FadeOut" : "",	"FadeOutBLTiles" : "",	"FadeOutDownTiles" : "",	"FadeOutTRTiles" : "",	"FadeOutUpTiles" : "",	"FadeTRTransition" : "",	"FadeTo" : "",	"FadeTransition" : "",	"FadeUpTransition" : "",	"FastDirector" : "",	"FileUtils" : "",	"FiniteTimeAction" : "",	"FlipAngularTransition" : "",	"FlipX3D" : "",	"FlipXTransition" : "",	"FlipY3D" : "",	"FlipYTransition" : "",	"Grabber" : "",	"Grid3D" : "",	"Grid3DAction" : "",	"GridAction" : "",	"GridBase" : "",	"Hide" : "",	"InstantAction" : "",	"IntervalAction" : "",	"JumpBy" : "",	"JumpTiles3D" : "",	"JumpTo" : "",	"JumpZoomTransition" : "",	"Label" : "",	"LabelAtlas" : "",	"Layer" : "",	"Lens3D" : "",	"Liquid" : "",	"Menu" : "",	"MenuItem" : "",	"MenuItemAtlasFont" : "",	"MenuItemAtlasSprite" : "",	"MenuItemFont" : "",	"MenuItemImage" : "",	"MenuItemLabel" : "",	"MenuItemSprite" : "",	"MenuItemToggle" : "",	"MotionStreak" : "",	"MoveBy" : "",	"MoveInBTransition" : "",	"MoveInLTransition" : "",	"MoveInRTransition" : "",	"MoveInTTransition" : "",	"MoveTo" : "",	"MultiplexLayer" : "",	"OrbitCamera" : "",	"OrientedTransitionScene" : "",	"PVRTexture" : "",	"PageTurn3D" : "",	"PageTurnTransition" : "",	"ParallaxNode" : "",	"ParticleExplosion" : "",	"ParticleFire" : "",	"ParticleFireworks" : "",	"ParticleFlower" : "",	"ParticleGalaxy" : "",	"ParticleMeteor" : "",	"ParticleRain" : "",	"ParticleSmoke" : "",	"ParticleSnow" : "",	"ParticleSpiral" : "",	"ParticleSun" : "",	"ParticleSystem" : "",	"Place" : "",	"PointParticleSystem" : "",	"QuadParticleSystem" : "",	"RenderTexture" : "",	"Repeat" : "",	"RepeatForever" : "",	"ReuseGrid" : "",	"ReverseTime" : "",	"Ribbon" : "",	"RibbonSegment" : "",	"Ripple3D" : "",	"RotateBy" : "",	"RotateTo" : "",	"RotoZoomTransition" : "",	"ScaleBy" : "",	"ScaleTo" : "",	"Scene" : "",	"Scheduler" : "",	"Sequence" : "",	"Shaky3D" : "",	"ShakyTiles3D" : "",	"ShatteredTiles3D" : "",	"Show" : "",	"ShrinkGrowTransition" : "",	"ShuffleTiles" : "",	"SlideInBTransition" : "",	"SlideInLTransition" : "",	"SlideInRTransition" : "",	"SlideInTTransition" : "",	"Spawn" : "",	"Speed" : "",	"SplitCols" : "",	"SplitColsTransition" : "",	"SplitRows" : "",	"SplitRowsTransition" : "",	"Sprite" : "",	"StandardTouchHandler" : "",	"StopGrid" : "",	"TMXLayer" : "",	"TMXLayerInfo" : "",	"TMXMapInfo" : "",	"TMXTiledMap" : "",	"TMXTilesetInfo" : "",	"TargetedTouchHandler" : "",	"Texture2D" : "",	"TextureAtlas" : "",	"TextureMgr" : "",	"TextureNode" : "",	"ThreadedFastDirector" : "",	"TileMapAtlas" : "",	"TiledGrid3D" : "",	"TiledGrid3DAction" : "",	"Timer" : "",	"TimerDirector" : "",	"TintBy" : "",	"TintTo" : "",	"ToggleVisibility" : "",	"TouchDispatcher" : "",	"TouchHandler" : "",	"TransitionScene" : "",	"TurnOffTiles" : "",	"TurnOffTilesTransition" : "",	"Twirl" : "",	"Waves" : "",	"Waves3D" : "",	"WavesTiles3D" : "",	"ZoomFlipAngularTransition" : "",	"ZoomFlipXTransition" : "",	"ZoomFlipYTransition" : "",}/;"	v
classes_0_8	tools/compatibility_with_0_8/generate_compat_file.py	/^    import classes_0_8$/;"	i
clearHash	external/Chipmunk/src/cpSpaceHash.c	/^clearHash(cpSpaceHash *hash)$/;"	f	file:
clearHashCell	external/Chipmunk/src/cpSpaceHash.c	/^clearHashCell(cpSpaceHash *hash, int idx)$/;"	f	file:
clearflag	external/Tremor/ogg.h	/^  int            clearflag;$/;"	m	struct:ogg_stream_state
close_func	external/Tremor/ivorbisfile.h	/^  int    (*close_func) (void *datasource);$/;"	m	struct:__anon81
codebook	external/Tremor/codebook.h	/^typedef struct codebook{$/;"	s
codebook	external/Tremor/codebook.h	/^} codebook;$/;"	t	typeref:struct:codebook
codec_setup	external/Tremor/ivorbiscodec.h	/^  void *codec_setup;$/;"	m	struct:vorbis_info
codec_setup_info	external/Tremor/codec_internal.h	/^typedef struct codec_setup_info {$/;"	s
codec_setup_info	external/Tremor/codec_internal.h	/^} codec_setup_info;$/;"	t	typeref:struct:codec_setup_info
codelist	external/Tremor/codebook.h	/^  ogg_uint32_t *codelist;   \/* list of bitstream codewords for each entry *\/$/;"	m	struct:codebook
col1	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 col1, col2;$/;"	m	struct:b2Mat22
col1	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec3 col1, col2, col3;$/;"	m	struct:b2Mat33
col2	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 col1, col2;$/;"	m	struct:b2Mat22
col2	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec3 col1, col2, col3;$/;"	m	struct:b2Mat33
col3	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec3 col1, col2, col3;$/;"	m	struct:b2Mat33
colfuncs	external/Chipmunk/src/cpCollision.c	/^static collisionFunc *colfuncs = NULL;$/;"	v	file:
collFuncSet	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpHashSet *collFuncSet;$/;"	m	struct:cpSpace
collFuncSetEql	external/Chipmunk/src/cpSpace.c	/^collFuncSetEql(cpCollisionHandler *check, cpCollisionHandler *pair)$/;"	f	file:
collFuncSetTrans	external/Chipmunk/src/cpSpace.c	/^collFuncSetTrans(cpCollisionHandler *handler, void *unused)$/;"	f	file:
collideConnected	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	bool collideConnected;$/;"	m	struct:b2JointDef
collisionFunc	external/Chipmunk/src/cpCollision.c	/^typedef int (*collisionFunc)(cpShape *, cpShape *, cpContact *);$/;"	t	file:
collisionPointSize	external/Chipmunk/Demo/drawSpace.h	/^	float collisionPointSize;$/;"	m	struct:drawSpaceOptions
collision_type	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpCollisionType collision_type;$/;"	m	struct:cpShape
color	cocos2d/CCAtlasNode.h	/^@property (nonatomic,readwrite) ccColor3B color;$/;"	v
color	cocos2d/CCBitmapFontAtlas.h	/^@property (nonatomic,readwrite) ccColor3B color;$/;"	v
color	cocos2d/CCLayer.h	/^@property (nonatomic,readonly) ccColor3B color;$/;"	v
color	cocos2d/CCMenu.h	/^@property (nonatomic,readonly) ccColor3B color;$/;"	v
color	cocos2d/CCMenuItem.h	/^@property (nonatomic,readonly) ccColor3B color;$/;"	v
color	cocos2d/CCParticleSystem.h	/^	ccColor4F	color;$/;"	m	struct:sCCParticle
color	cocos2d/CCRibbon.h	/^@property (nonatomic,readwrite) ccColor4B color;$/;"	v
color	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) ccColor3B color;$/;"	v
color_type	external/libpng/png.h	/^   png_byte color_type; \/* color type of row *\/$/;"	m	struct:png_row_info_struct
colors	cocos2d/ccTypes.h	/^	ccColor4B		colors;				\/\/ 4 bytes$/;"	m	struct:_ccV3F_C4B_T2F
colors	cocos2d/ccTypes.h	/^	ccColor4F		colors;$/;"	m	struct:_ccV2F_C4F_T2F
colors	cocos2d/ccTypes.h	/^	ccColor4F	colors;		\/\/ 16 bytes$/;"	m	struct:_ccPointSprite
comment_lengths	external/Tremor/ivorbiscodec.h	/^  int   *comment_lengths;$/;"	m	struct:vorbis_comment
comments	external/Tremor/ivorbiscodec.h	/^  int    comments;$/;"	m	struct:vorbis_comment
compression	external/libpng/png.h	/^   int  compression;       \/* compression value:$/;"	m	struct:png_text_struct
compression_state	external/libpng/pngwutil.c	/^} compression_state;$/;"	t	typeref:struct:__anon50	file:
connection	cocoslive/CLScoreServerPost.h	/^@property (nonatomic, retain) NSURLConnection *connection;$/;"	v
connection	cocoslive/CLScoreServerRequest.h	/^@property (nonatomic, retain) NSURLConnection *connection;$/;"	v
constraint	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpConstraint constraint;$/;"	m	struct:cpDampedRotarySpring
constraint	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpConstraint constraint;$/;"	m	struct:cpDampedSpring
constraint	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpGearJoint
constraint	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpGrooveJoint
constraint	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpPinJoint
constraint	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpPivotJoint
constraint	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpRatchetJoint
constraint	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpRotaryLimitJoint
constraint	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^	cpConstraint constraint;$/;"	m	struct:cpSimpleMotor
constraint	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpConstraint constraint;$/;"	m	struct:cpSlideJoint
constraintFreeWrap	external/Chipmunk/src/cpSpace.c	/^static void   constraintFreeWrap(cpConstraint *ptr, void *unused){cpConstraintFree(ptr);}$/;"	f	file:
constraints	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpArray *constraints;$/;"	m	struct:cpSpace
contact	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Contact* contact;		\/\/\/< the contact$/;"	m	struct:b2ContactEdge
contactBuffersHead	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpContactBufferHeader *contactBuffersHead, *contactBuffersTail;$/;"	m	struct:cpSpace
contactBuffersTail	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpContactBufferHeader *contactBuffersHead, *contactBuffersTail;$/;"	m	struct:cpSpace
contactSet	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpHashSet *contactSet;$/;"	m	struct:cpSpace
contactSetEql	external/Chipmunk/src/cpSpace.c	/^contactSetEql(cpShape **shapes, cpArbiter *arb)$/;"	f	file:
contactSetFilter	external/Chipmunk/src/cpSpace.c	/^contactSetFilter(cpArbiter *arb, cpSpace *space)$/;"	f	file:
contactSetFilterRemovedShape	external/Chipmunk/src/cpSpace.c	/^contactSetFilterRemovedShape(cpArbiter *arb, removalContext *context)$/;"	f	file:
contactSetTrans	external/Chipmunk/src/cpSpace.c	/^contactSetTrans(cpShape **shapes, cpSpace *space)$/;"	f	file:
contacts	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpContact *contacts;$/;"	m	struct:cpArbiter
contacts	external/Chipmunk/src/cpSpace.c	/^	cpContact contacts[CP_CONTACTS_BUFFER_SIZE];$/;"	m	struct:cpContactBuffer	file:
containsHandle	external/Chipmunk/src/cpSpaceHash.c	/^containsHandle(cpSpaceHashBin *bin, cpHandle *hand)$/;"	f	file:
contentScaleFactor	cocos2d/CCDirector.h	/^@property (nonatomic, readwrite) CGFloat contentScaleFactor;$/;"	v
contentSize	cocos2d/CCNode.h	/^@property (nonatomic,readwrite) CGSize contentSize;$/;"	v
contentSize	cocos2d/CCTexture2D.h	/^@property(nonatomic,readonly, nonatomic) CGSize contentSize;$/;"	v
context	cocos2d/Support/EAGLView.h	/^@property(nonatomic,readonly) EAGLContext *context;$/;"	v
context	cocos2d/Support/ES1Renderer.h	/^@property (nonatomic,readonly) EAGLContext* context;$/;"	v
controlPoint_1	cocos2d/CCIntervalAction.h	/^	CGPoint controlPoint_1;$/;"	m	struct:_ccBezierConfig
controlPoint_2	cocos2d/CCIntervalAction.h	/^	CGPoint controlPoint_2;$/;"	m	struct:_ccBezierConfig
copy_base_files	install-templates.sh	/^copy_base_files(){$/;"	f
copy_file_templates	install-templates.sh	/^copy_file_templates(){$/;"	f
copy_files	install-templates.sh	/^copy_files(){$/;"	f
copy_project_templates	install-templates.sh	/^copy_project_templates(){$/;"	f
count	cocos2d/Support/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket
count	external/Box2d/Box2D/Collision/b2Distance.h	/^	uint16 count;$/;"	m	struct:b2SimplexCache
count	external/Tremor/ogg.h	/^  long              count; \/* doesn't count the tail *\/$/;"	m	struct:oggpack_buffer
count_filters	external/libpng/pngtest.c	/^count_filters(png_structp png_ptr, png_row_infop row_info, png_bytep data)$/;"	f
count_zero_samples	external/libpng/pngtest.c	/^count_zero_samples(png_structp png_ptr, png_row_infop row_info, png_bytep data)$/;"	f
coupling_ang	external/Tremor/backends.h	/^  int   coupling_ang[256];$/;"	m	struct:vorbis_info_mapping0
coupling_mag	external/Tremor/backends.h	/^  int   coupling_mag[256];$/;"	m	struct:vorbis_info_mapping0
coupling_passes	external/Tremor/codec_internal.h	/^  int    coupling_passes;$/;"	m	struct:codec_setup_info
coupling_steps	external/Tremor/backends.h	/^  int   coupling_steps;$/;"	m	struct:vorbis_info_mapping0
cpApplyDampedSpring	external/Chipmunk/src/cpBody.c	/^cpApplyDampedSpring(cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2, cpFloat rlen, cpFloat k, cpFloat dmp, cpFloat dt)$/;"	f
cpArbiter	external/Chipmunk/include/chipmunk/cpArbiter.h	/^typedef struct cpArbiter {$/;"	s
cpArbiter	external/Chipmunk/include/chipmunk/cpArbiter.h	/^} cpArbiter;$/;"	t	typeref:struct:cpArbiter
cpArbiterAlloc	external/Chipmunk/src/cpArbiter.c	/^cpArbiterAlloc(void)$/;"	f
cpArbiterApplyCachedImpulse	external/Chipmunk/src/cpArbiter.c	/^cpArbiterApplyCachedImpulse(cpArbiter *arb)$/;"	f
cpArbiterApplyImpulse	external/Chipmunk/src/cpArbiter.c	/^cpArbiterApplyImpulse(cpArbiter *arb, cpFloat eCoef)$/;"	f
cpArbiterDestroy	external/Chipmunk/src/cpArbiter.c	/^cpArbiterDestroy(cpArbiter *arb)$/;"	f
cpArbiterFree	external/Chipmunk/src/cpArbiter.c	/^cpArbiterFree(cpArbiter *arb)$/;"	f
cpArbiterGetNormal	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpArbiterGetNormal);$/;"	v
cpArbiterGetNormal	external/Chipmunk/include/chipmunk/cpArbiter.h	/^cpArbiterGetNormal(cpArbiter *arb, int i)$/;"	f
cpArbiterGetPoint	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpArbiterGetPoint);$/;"	v
cpArbiterGetPoint	external/Chipmunk/include/chipmunk/cpArbiter.h	/^cpArbiterGetPoint(cpArbiter *arb, int i)$/;"	f
cpArbiterGetShapes	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpArbiterGetShapes);$/;"	v
cpArbiterGetShapes	external/Chipmunk/include/chipmunk/cpArbiter.h	/^cpArbiterGetShapes(cpArbiter *arb, cpShape **a, cpShape **b)$/;"	f
cpArbiterIgnore	external/Chipmunk/src/cpArbiter.c	/^cpArbiterIgnore(cpArbiter *arb)$/;"	f
cpArbiterInit	external/Chipmunk/src/cpArbiter.c	/^cpArbiterInit(cpArbiter *arb, cpShape *a, cpShape *b)$/;"	f
cpArbiterIsFirstContact	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpArbiterIsFirstContact);$/;"	v
cpArbiterIsFirstContact	external/Chipmunk/include/chipmunk/cpArbiter.h	/^cpArbiterIsFirstContact(cpArbiter *arb)$/;"	f
cpArbiterNew	external/Chipmunk/src/cpArbiter.c	/^cpArbiterNew(cpShape *a, cpShape *b)$/;"	f
cpArbiterPreStep	external/Chipmunk/src/cpArbiter.c	/^cpArbiterPreStep(cpArbiter *arb, cpFloat dt_inv)$/;"	f
cpArbiterState	external/Chipmunk/include/chipmunk/cpArbiter.h	/^typedef enum cpArbiterState {$/;"	g
cpArbiterState	external/Chipmunk/include/chipmunk/cpArbiter.h	/^} cpArbiterState;$/;"	t	typeref:enum:cpArbiterState
cpArbiterStateFirstColl	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpArbiterStateFirstColl,$/;"	e	enum:cpArbiterState
cpArbiterStateIgnore	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpArbiterStateIgnore,$/;"	e	enum:cpArbiterState
cpArbiterStateNormal	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpArbiterStateNormal,$/;"	e	enum:cpArbiterState
cpArbiterTotalImpulse	external/Chipmunk/src/cpArbiter.c	/^cpArbiterTotalImpulse(cpArbiter *arb)$/;"	f
cpArbiterTotalImpulseWithFriction	external/Chipmunk/src/cpArbiter.c	/^cpArbiterTotalImpulseWithFriction(cpArbiter *arb)$/;"	f
cpArbiterUpdate	external/Chipmunk/src/cpArbiter.c	/^cpArbiterUpdate(cpArbiter *arb, cpContact *contacts, int numContacts, cpCollisionHandler *handler, cpShape *a, cpShape *b)$/;"	f
cpArray	external/Chipmunk/include/chipmunk/cpArray.h	/^typedef struct cpArray{$/;"	s
cpArray	external/Chipmunk/include/chipmunk/cpArray.h	/^} cpArray;$/;"	t	typeref:struct:cpArray
cpArrayAlloc	external/Chipmunk/src/cpArray.c	/^cpArrayAlloc(void)$/;"	f
cpArrayContains	external/Chipmunk/src/cpArray.c	/^cpArrayContains(cpArray *arr, void *ptr)$/;"	f
cpArrayDeleteIndex	external/Chipmunk/src/cpArray.c	/^cpArrayDeleteIndex(cpArray *arr, int idx)$/;"	f
cpArrayDeleteObj	external/Chipmunk/src/cpArray.c	/^cpArrayDeleteObj(cpArray *arr, void *obj)$/;"	f
cpArrayDestroy	external/Chipmunk/src/cpArray.c	/^cpArrayDestroy(cpArray *arr)$/;"	f
cpArrayEach	external/Chipmunk/src/cpArray.c	/^cpArrayEach(cpArray *arr, cpArrayIter iterFunc, void *data)$/;"	f
cpArrayFree	external/Chipmunk/src/cpArray.c	/^cpArrayFree(cpArray *arr)$/;"	f
cpArrayInit	external/Chipmunk/src/cpArray.c	/^cpArrayInit(cpArray *arr, int size)$/;"	f
cpArrayIter	external/Chipmunk/include/chipmunk/cpArray.h	/^typedef void (*cpArrayIter)(void *ptr, void *data);$/;"	t
cpArrayNew	external/Chipmunk/src/cpArray.c	/^cpArrayNew(int size)$/;"	f
cpArrayPop	external/Chipmunk/src/cpArray.c	/^cpArrayPop(cpArray *arr)$/;"	f
cpArrayPush	external/Chipmunk/src/cpArray.c	/^cpArrayPush(cpArray *arr, void *object)$/;"	f
cpAssert	external/Chipmunk/include/chipmunk/chipmunk.h	37;"	d
cpAssert	external/Chipmunk/include/chipmunk/chipmunk.h	39;"	d
cpAssertSpaceUnlocked	external/Chipmunk/src/cpSpace.c	311;"	d	file:
cpAssertWarn	external/Chipmunk/include/chipmunk/chipmunk.h	31;"	d
cpAssertWarn	external/Chipmunk/include/chipmunk/chipmunk.h	33;"	d
cpBB	external/Chipmunk/include/chipmunk/cpBB.h	/^typedef struct cpBB{$/;"	s
cpBB	external/Chipmunk/include/chipmunk/cpBB.h	/^} cpBB;$/;"	t	typeref:struct:cpBB
cpBBClampVect	external/Chipmunk/src/cpBB.c	/^cpBBClampVect(const cpBB bb, const cpVect v)$/;"	f
cpBBNew	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBBNew);$/;"	v
cpBBNew	external/Chipmunk/include/chipmunk/cpBB.h	/^cpBBNew(const cpFloat l, const cpFloat b,$/;"	f
cpBBWrapVect	external/Chipmunk/src/cpBB.c	/^cpBBWrapVect(const cpBB bb, const cpVect v)$/;"	f
cpBBcontainsBB	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBBcontainsBB);$/;"	v
cpBBcontainsBB	external/Chipmunk/include/chipmunk/cpBB.h	/^cpBBcontainsBB(const cpBB bb, const cpBB other)$/;"	f
cpBBcontainsVect	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBBcontainsVect);$/;"	v
cpBBcontainsVect	external/Chipmunk/include/chipmunk/cpBB.h	/^cpBBcontainsVect(const cpBB bb, const cpVect v)$/;"	f
cpBBexpand	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBBexpand);$/;"	v
cpBBexpand	external/Chipmunk/include/chipmunk/cpBB.h	/^cpBBexpand(const cpBB bb, const cpVect v){$/;"	f
cpBBintersects	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBBintersects);$/;"	v
cpBBintersects	external/Chipmunk/include/chipmunk/cpBB.h	/^cpBBintersects(const cpBB a, const cpBB b)$/;"	f
cpBBmerge	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBBmerge);$/;"	v
cpBBmerge	external/Chipmunk/include/chipmunk/cpBB.h	/^cpBBmerge(const cpBB a, const cpBB b){$/;"	f
cpBody	external/Chipmunk/include/chipmunk/cpBody.h	/^typedef struct cpBody{$/;"	s
cpBody	external/Chipmunk/include/chipmunk/cpBody.h	/^} cpBody;$/;"	t	typeref:struct:cpBody
cpBodyAlloc	external/Chipmunk/src/cpBody.c	/^cpBodyAlloc(void)$/;"	f
cpBodyApplyBiasImpulse	external/Chipmunk/include/chipmunk/cpBody.h	/^cpBodyApplyBiasImpulse(cpBody *body, cpVect j, cpVect r)$/;"	f
cpBodyApplyForce	external/Chipmunk/src/cpBody.c	/^cpBodyApplyForce(cpBody *body, cpVect force, cpVect r)$/;"	f
cpBodyApplyImpulse	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBodyApplyImpulse);$/;"	v
cpBodyApplyImpulse	external/Chipmunk/include/chipmunk/cpBody.h	/^cpBodyApplyImpulse(cpBody *body, cpVect j, cpVect r)$/;"	f
cpBodyDestroy	external/Chipmunk/src/cpBody.c	/^void cpBodyDestroy(cpBody *body){}$/;"	f
cpBodyFree	external/Chipmunk/src/cpBody.c	/^cpBodyFree(cpBody *body)$/;"	f
cpBodyInit	external/Chipmunk/src/cpBody.c	/^cpBodyInit(cpBody *body, cpFloat m, cpFloat i)$/;"	f
cpBodyLocal2World	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBodyLocal2World);$/;"	v
cpBodyLocal2World	external/Chipmunk/include/chipmunk/cpBody.h	/^cpBodyLocal2World(cpBody *body, cpVect v)$/;"	f
cpBodyNew	external/Chipmunk/src/cpBody.c	/^cpBodyNew(cpFloat m, cpFloat i)$/;"	f
cpBodyPositionFunc	external/Chipmunk/include/chipmunk/cpBody.h	/^typedef void (*cpBodyPositionFunc)(struct cpBody *body, cpFloat dt);$/;"	t
cpBodyResetForces	external/Chipmunk/src/cpBody.c	/^cpBodyResetForces(cpBody *body)$/;"	f
cpBodySetAngle	external/Chipmunk/src/cpBody.c	/^cpBodySetAngle(cpBody *body, cpFloat angle)$/;"	f
cpBodySetMass	external/Chipmunk/src/cpBody.c	/^cpBodySetMass(cpBody *body, cpFloat mass)$/;"	f
cpBodySetMoment	external/Chipmunk/src/cpBody.c	/^cpBodySetMoment(cpBody *body, cpFloat moment)$/;"	f
cpBodySlew	external/Chipmunk/src/cpBody.c	/^cpBodySlew(cpBody *body, cpVect pos, cpFloat dt)$/;"	f
cpBodyUpdatePosition	external/Chipmunk/src/cpBody.c	/^cpBodyUpdatePosition(cpBody *body, cpFloat dt)$/;"	f
cpBodyUpdatePositionDefault	external/Chipmunk/src/cpBody.c	/^cpBodyPositionFunc cpBodyUpdatePositionDefault = cpBodyUpdatePosition;$/;"	v
cpBodyUpdateVelocity	external/Chipmunk/src/cpBody.c	/^cpBodyUpdateVelocity(cpBody *body, cpVect gravity, cpFloat damping, cpFloat dt)$/;"	f
cpBodyUpdateVelocityDefault	external/Chipmunk/src/cpBody.c	/^cpBodyVelocityFunc cpBodyUpdateVelocityDefault = cpBodyUpdateVelocity;$/;"	v
cpBodyVelocityFunc	external/Chipmunk/include/chipmunk/cpBody.h	/^typedef void (*cpBodyVelocityFunc)(struct cpBody *body, cpVect gravity, cpFloat damping, cpFloat dt);$/;"	t
cpBodyWorld2Local	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpBodyWorld2Local);$/;"	v
cpBodyWorld2Local	external/Chipmunk/include/chipmunk/cpBody.h	/^cpBodyWorld2Local(cpBody *body, cpVect v)$/;"	f
cpBoxShapeInit	external/Chipmunk/src/cpPolyShape.c	/^cpBoxShapeInit(cpPolyShape *poly, cpBody *body, cpFloat width, cpFloat height)$/;"	f
cpBoxShapeNew	external/Chipmunk/src/cpPolyShape.c	/^cpBoxShapeNew(cpBody *body, cpFloat width, cpFloat height)$/;"	f
cpCircleShape	external/Chipmunk/include/chipmunk/cpShape.h	/^typedef struct cpCircleShape{$/;"	s
cpCircleShape	external/Chipmunk/include/chipmunk/cpShape.h	/^} cpCircleShape;$/;"	t	typeref:struct:cpCircleShape
cpCircleShapeAlloc	external/Chipmunk/src/cpShape.c	/^cpCircleShapeAlloc(void)$/;"	f
cpCircleShapeCacheData	external/Chipmunk/src/cpShape.c	/^cpCircleShapeCacheData(cpShape *shape, cpVect p, cpVect rot)$/;"	f	file:
cpCircleShapeClass	external/Chipmunk/src/cpShape.c	/^static const cpShapeClass cpCircleShapeClass = {$/;"	v	file:
cpCircleShapeInit	external/Chipmunk/src/cpShape.c	/^cpCircleShapeInit(cpCircleShape *circle, cpBody *body, cpFloat radius, cpVect offset)$/;"	f
cpCircleShapeNew	external/Chipmunk/src/cpShape.c	/^cpCircleShapeNew(cpBody *body, cpFloat radius, cpVect offset)$/;"	f
cpCircleShapePointQuery	external/Chipmunk/src/cpShape.c	/^cpCircleShapePointQuery(cpShape *shape, cpVect p){$/;"	f	file:
cpCircleShapeSegmentQuery	external/Chipmunk/src/cpShape.c	/^cpCircleShapeSegmentQuery(cpShape *shape, cpVect a, cpVect b, cpSegmentQueryInfo *info)$/;"	f	file:
cpCircleShapeSetOffset	external/Chipmunk/src/cpShape.c	/^cpCircleShapeSetOffset(cpShape *shape, cpVect offset)$/;"	f
cpCollideShapes	external/Chipmunk/src/cpCollision.c	/^cpCollideShapes(cpShape *a, cpShape *b, cpContact *arr)$/;"	f
cpCollisionBeginFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef int (*cpCollisionBeginFunc)(cpArbiter *arb, struct cpSpace *space, void *data);$/;"	t
cpCollisionHandler	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef struct cpCollisionHandler {$/;"	s
cpCollisionHandler	external/Chipmunk/include/chipmunk/cpSpace.h	/^} cpCollisionHandler;$/;"	t	typeref:struct:cpCollisionHandler
cpCollisionPostSolveFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpCollisionPostSolveFunc)(cpArbiter *arb, struct cpSpace *space, void *data);$/;"	t
cpCollisionPreSolveFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef int (*cpCollisionPreSolveFunc)(cpArbiter *arb, struct cpSpace *space, void *data);$/;"	t
cpCollisionSeparateFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpCollisionSeparateFunc)(cpArbiter *arb, struct cpSpace *space, void *data);$/;"	t
cpCollisionType	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef CP_COLLISION_TYPE_TYPE cpCollisionType;$/;"	t
cpCollisionType	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef unsigned int cpCollisionType;$/;"	t
cpConstraint	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^typedef struct cpConstraint {$/;"	s
cpConstraint	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^} cpConstraint;$/;"	t	typeref:struct:cpConstraint
cpConstraintApplyImpulseFunction	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^typedef void (*cpConstraintApplyImpulseFunction)(struct cpConstraint *constraint);$/;"	t
cpConstraintCheckCast	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	60;"	d
cpConstraintClass	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^typedef struct cpConstraintClass {$/;"	s
cpConstraintClass	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^} cpConstraintClass;$/;"	t	typeref:struct:cpConstraintClass
cpConstraintDestroy	external/Chipmunk/src/constraints/cpConstraint.c	/^void cpConstraintDestroy(cpConstraint *constraint){}$/;"	f
cpConstraintFree	external/Chipmunk/src/constraints/cpConstraint.c	/^cpConstraintFree(cpConstraint *constraint)$/;"	f
cpConstraintGetImpulseFunction	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^typedef cpFloat (*cpConstraintGetImpulseFunction)(struct cpConstraint *constraint);$/;"	t
cpConstraintInit	external/Chipmunk/src/constraints/cpConstraint.c	/^cpConstraintInit(cpConstraint *constraint, const cpConstraintClass *klass, cpBody *a, cpBody *b)$/;"	f
cpConstraintPreStepFunction	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^typedef void (*cpConstraintPreStepFunction)(struct cpConstraint *constraint, cpFloat dt, cpFloat dt_inv);$/;"	t
cpContact	external/Chipmunk/include/chipmunk/cpArbiter.h	/^typedef struct cpContact {$/;"	s
cpContact	external/Chipmunk/include/chipmunk/cpArbiter.h	/^} cpContact;$/;"	t	typeref:struct:cpContact
cpContactBuffer	external/Chipmunk/src/cpSpace.c	/^typedef struct cpContactBuffer {$/;"	s	file:
cpContactBuffer	external/Chipmunk/src/cpSpace.c	/^} cpContactBuffer;$/;"	t	typeref:struct:cpContactBuffer	file:
cpContactBufferHeader	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef struct cpContactBufferHeader {$/;"	s
cpContactBufferHeader	external/Chipmunk/include/chipmunk/cpSpace.h	/^} cpContactBufferHeader;$/;"	t	typeref:struct:cpContactBufferHeader
cpContactBufferHeaderInit	external/Chipmunk/src/cpSpace.c	/^cpContactBufferHeaderInit(cpContactBufferHeader *header, cpSpace *space)$/;"	f	file:
cpContactInit	external/Chipmunk/src/cpArbiter.c	/^cpContactInit(cpContact *con, cpVect p, cpVect n, cpFloat dist, cpHashValue hash)$/;"	f
cpContactsEstimateCrushingImpulse	external/Chipmunk/src/cpArbiter.c	/^cpContactsEstimateCrushingImpulse(cpContact *contacts, int numContacts)$/;"	f
cpDampedRotarySpring	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^typedef struct cpDampedRotarySpring {$/;"	s
cpDampedRotarySpring	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^} cpDampedRotarySpring;$/;"	t	typeref:struct:cpDampedRotarySpring
cpDampedRotarySpringInit	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^cpDampedRotarySpringInit(cpDampedRotarySpring *spring, cpBody *a, cpBody *b, cpFloat restAngle, cpFloat stiffness, cpFloat damping)$/;"	f
cpDampedRotarySpringNew	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^cpDampedRotarySpringNew(cpBody *a, cpBody *b, cpFloat restAngle, cpFloat stiffness, cpFloat damping)$/;"	f
cpDampedRotarySpringTorqueFunc	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^typedef cpFloat (*cpDampedRotarySpringTorqueFunc)(struct cpConstraint *spring, cpFloat relativeAngle);$/;"	t
cpDampedSpring	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^typedef struct cpDampedSpring {$/;"	s
cpDampedSpring	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^} cpDampedSpring;$/;"	t	typeref:struct:cpDampedSpring
cpDampedSpringForceFunc	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^typedef cpFloat (*cpDampedSpringForceFunc)(struct cpConstraint *spring, cpFloat dist);$/;"	t
cpDampedSpringInit	external/Chipmunk/src/constraints/cpDampedSpring.c	/^cpDampedSpringInit(cpDampedSpring *spring, cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2, cpFloat restLength, cpFloat stiffness, cpFloat damping)$/;"	f
cpDampedSpringNew	external/Chipmunk/src/constraints/cpDampedSpring.c	/^cpDampedSpringNew(cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2, cpFloat restLength, cpFloat stiffness, cpFloat damping)$/;"	f
cpDataPointer	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef CP_DATA_POINTER_TYPE cpDataPointer;$/;"	t
cpDataPointer	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef void * cpDataPointer;$/;"	t
cpFloat	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef double cpFloat;$/;"	t
cpFloat	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef float cpFloat;$/;"	t
cpGearJoint	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^typedef struct cpGearJoint {$/;"	s
cpGearJoint	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^} cpGearJoint;$/;"	t	typeref:struct:cpGearJoint
cpGearJointInit	external/Chipmunk/src/constraints/cpGearJoint.c	/^cpGearJointInit(cpGearJoint *joint, cpBody *a, cpBody *b, cpFloat phase, cpFloat ratio)$/;"	f
cpGearJointNew	external/Chipmunk/src/constraints/cpGearJoint.c	/^cpGearJointNew(cpBody *a, cpBody *b, cpFloat phase, cpFloat ratio)$/;"	f
cpGearJointSetRatio	external/Chipmunk/src/constraints/cpGearJoint.c	/^cpGearJointSetRatio(cpConstraint *constraint, cpFloat value)$/;"	f
cpGrooveJoint	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^typedef struct cpGrooveJoint {$/;"	s
cpGrooveJoint	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^} cpGrooveJoint;$/;"	t	typeref:struct:cpGrooveJoint
cpGrooveJointInit	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^cpGrooveJointInit(cpGrooveJoint *joint, cpBody *a, cpBody *b, cpVect groove_a, cpVect groove_b, cpVect anchr2)$/;"	f
cpGrooveJointNew	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^cpGrooveJointNew(cpBody *a, cpBody *b, cpVect groove_a, cpVect groove_b, cpVect anchr2)$/;"	f
cpGroup	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef CP_GROUP_TYPE cpGroup;$/;"	t
cpGroup	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef unsigned int cpGroup;$/;"	t
cpHandle	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef struct cpHandle{$/;"	s
cpHandle	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^} cpHandle;$/;"	t	typeref:struct:cpHandle
cpHandleInit	external/Chipmunk/src/cpSpaceHash.c	/^cpHandleInit(cpHandle *hand, void *obj)$/;"	f	file:
cpHandleRelease	external/Chipmunk/src/cpSpaceHash.c	/^cpHandleRelease(cpHandle *hand, cpArray *pooledHandles)$/;"	f	file:
cpHandleRetain	external/Chipmunk/src/cpSpaceHash.c	/^cpHandleRetain(cpHandle *hand)$/;"	f	file:
cpHashSet	external/Chipmunk/include/chipmunk/cpHashSet.h	/^typedef struct cpHashSet {$/;"	s
cpHashSet	external/Chipmunk/include/chipmunk/cpHashSet.h	/^} cpHashSet;$/;"	t	typeref:struct:cpHashSet
cpHashSetAlloc	external/Chipmunk/src/cpHashSet.c	/^cpHashSetAlloc(void)$/;"	f
cpHashSetBin	external/Chipmunk/include/chipmunk/cpHashSet.h	/^typedef struct cpHashSetBin {$/;"	s
cpHashSetBin	external/Chipmunk/include/chipmunk/cpHashSet.h	/^} cpHashSetBin;$/;"	t	typeref:struct:cpHashSetBin
cpHashSetDestroy	external/Chipmunk/src/cpHashSet.c	/^cpHashSetDestroy(cpHashSet *set)$/;"	f
cpHashSetEach	external/Chipmunk/src/cpHashSet.c	/^cpHashSetEach(cpHashSet *set, cpHashSetIterFunc func, void *data)$/;"	f
cpHashSetEqlFunc	external/Chipmunk/include/chipmunk/cpHashSet.h	/^typedef int (*cpHashSetEqlFunc)(void *ptr, void *elt);$/;"	t
cpHashSetFilter	external/Chipmunk/src/cpHashSet.c	/^cpHashSetFilter(cpHashSet *set, cpHashSetFilterFunc func, void *data)$/;"	f
cpHashSetFilterFunc	external/Chipmunk/include/chipmunk/cpHashSet.h	/^typedef int (*cpHashSetFilterFunc)(void *elt, void *data);$/;"	t
cpHashSetFind	external/Chipmunk/src/cpHashSet.c	/^cpHashSetFind(cpHashSet *set, cpHashValue hash, void *ptr)$/;"	f
cpHashSetFree	external/Chipmunk/src/cpHashSet.c	/^cpHashSetFree(cpHashSet *set)$/;"	f
cpHashSetInit	external/Chipmunk/src/cpHashSet.c	/^cpHashSetInit(cpHashSet *set, int size, cpHashSetEqlFunc eqlFunc, cpHashSetTransFunc trans)$/;"	f
cpHashSetInsert	external/Chipmunk/src/cpHashSet.c	/^cpHashSetInsert(cpHashSet *set, cpHashValue hash, void *ptr, void *data)$/;"	f
cpHashSetIterFunc	external/Chipmunk/include/chipmunk/cpHashSet.h	/^typedef void (*cpHashSetIterFunc)(void *elt, void *data);$/;"	t
cpHashSetNew	external/Chipmunk/src/cpHashSet.c	/^cpHashSetNew(int size, cpHashSetEqlFunc eqlFunc, cpHashSetTransFunc trans)$/;"	f
cpHashSetRemove	external/Chipmunk/src/cpHashSet.c	/^cpHashSetRemove(cpHashSet *set, cpHashValue hash, void *ptr)$/;"	f
cpHashSetResize	external/Chipmunk/src/cpHashSet.c	/^cpHashSetResize(cpHashSet *set)$/;"	f	file:
cpHashSetTransFunc	external/Chipmunk/include/chipmunk/cpHashSet.h	/^typedef void *(*cpHashSetTransFunc)(void *ptr, void *data);$/;"	t
cpHashValue	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^typedef unsigned int cpHashValue;$/;"	t
cpInitChipmunk	external/Chipmunk/src/chipmunk.c	/^cpInitChipmunk(void)$/;"	f
cpInitCollisionFuncs	external/Chipmunk/src/cpCollision.c	/^	cpInitCollisionFuncs(void)$/;"	f
cpJoint	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^typedef cpConstraint cpJoint;$/;"	t
cpLayers	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef CP_GROUP_TYPE cpLayers;$/;"	t
cpLayers	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef unsigned int cpLayers;$/;"	t
cpMessage	external/Chipmunk/src/chipmunk.c	/^cpMessage(char *message, char *condition, char *file, int line, int isError)$/;"	f
cpMomentForBox	external/Chipmunk/src/chipmunk.c	/^cpMomentForBox(cpFloat m, cpFloat width, cpFloat height)$/;"	f
cpMomentForCircle	external/Chipmunk/src/chipmunk.c	/^cpMomentForCircle(cpFloat m, cpFloat r1, cpFloat r2, cpVect offset)$/;"	f
cpMomentForPoly	external/Chipmunk/src/chipmunk.c	/^cpMomentForPoly(cpFloat m, const int numVerts, cpVect *verts, cpVect offset)$/;"	f
cpMomentForSegment	external/Chipmunk/src/chipmunk.c	/^cpMomentForSegment(cpFloat m, cpVect a, cpVect b)$/;"	f
cpPinJoint	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^typedef struct cpPinJoint {$/;"	s
cpPinJoint	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^} cpPinJoint;$/;"	t	typeref:struct:cpPinJoint
cpPinJoint	external/Chipmunk/src/constraints/cpPinJoint.c	/^CP_DefineClassGetter(cpPinJoint);$/;"	v
cpPinJointAlloc	external/Chipmunk/src/constraints/cpPinJoint.c	/^cpPinJointAlloc(void)$/;"	f
cpPinJointInit	external/Chipmunk/src/constraints/cpPinJoint.c	/^cpPinJointInit(cpPinJoint *joint, cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2)$/;"	f
cpPinJointNew	external/Chipmunk/src/constraints/cpPinJoint.c	/^cpPinJointNew(cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2)$/;"	f
cpPivotJoint	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^typedef struct cpPivotJoint {$/;"	s
cpPivotJoint	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^} cpPivotJoint;$/;"	t	typeref:struct:cpPivotJoint
cpPivotJointInit	external/Chipmunk/src/constraints/cpPivotJoint.c	/^cpPivotJointInit(cpPivotJoint *joint, cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2)$/;"	f
cpPivotJointNew	external/Chipmunk/src/constraints/cpPivotJoint.c	/^cpPivotJointNew(cpBody *a, cpBody *b, cpVect pivot)$/;"	f
cpPivotJointNew2	external/Chipmunk/src/constraints/cpPivotJoint.c	/^cpPivotJointNew2(cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2)$/;"	f
cpPolyShape	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^typedef struct cpPolyShape{$/;"	s
cpPolyShape	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^} cpPolyShape;$/;"	t	typeref:struct:cpPolyShape
cpPolyShapeAlloc	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeAlloc(void)$/;"	f
cpPolyShapeAxis	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^typedef struct cpPolyShapeAxis{$/;"	s
cpPolyShapeAxis	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^} cpPolyShapeAxis;$/;"	t	typeref:struct:cpPolyShapeAxis
cpPolyShapeCacheData	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeCacheData(cpShape *shape, cpVect p, cpVect rot)$/;"	f	file:
cpPolyShapeContainsVert	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^cpPolyShapeContainsVert(cpPolyShape *poly, cpVect v)$/;"	f
cpPolyShapeContainsVertPartial	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^cpPolyShapeContainsVertPartial(cpPolyShape *poly, cpVect v, cpVect n)$/;"	f
cpPolyShapeDestroy	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeDestroy(cpShape *shape)$/;"	f	file:
cpPolyShapeGetNumVerts	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeGetNumVerts(cpShape *shape)$/;"	f
cpPolyShapeGetVert	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeGetVert(cpShape *shape, int idx)$/;"	f
cpPolyShapeInit	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeInit(cpPolyShape *poly, cpBody *body, int numVerts, cpVect *verts, cpVect offset)$/;"	f
cpPolyShapeNew	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeNew(cpBody *body, int numVerts, cpVect *verts, cpVect offset)$/;"	f
cpPolyShapePointQuery	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapePointQuery(cpShape *shape, cpVect p){$/;"	f	file:
cpPolyShapeSegmentQuery	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeSegmentQuery(cpShape *shape, cpVect a, cpVect b, cpSegmentQueryInfo *info)$/;"	f	file:
cpPolyShapeSetVerts	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeSetVerts(cpShape *shape, int numVerts, cpVect *verts, cpVect offset)$/;"	f
cpPolyShapeTransformAxes	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeTransformAxes(cpPolyShape *poly, cpVect p, cpVect rot)$/;"	f	file:
cpPolyShapeTransformVerts	external/Chipmunk/src/cpPolyShape.c	/^cpPolyShapeTransformVerts(cpPolyShape *poly, cpVect p, cpVect rot)$/;"	f	file:
cpPolyShapeValueOnAxis	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^cpPolyShapeValueOnAxis(const cpPolyShape *poly, const cpVect n, const cpFloat d)$/;"	f
cpPolyValidate	external/Chipmunk/src/cpPolyShape.c	/^cpPolyValidate(cpVect *verts, int numVerts)$/;"	f
cpPostStepFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpPostStepFunc)(cpSpace *space, void *obj, void *data);$/;"	t
cpRatchetJoint	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^typedef struct cpRatchetJoint {$/;"	s
cpRatchetJoint	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^} cpRatchetJoint;$/;"	t	typeref:struct:cpRatchetJoint
cpRatchetJointInit	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^cpRatchetJointInit(cpRatchetJoint *joint, cpBody *a, cpBody *b, cpFloat phase, cpFloat ratchet)$/;"	f
cpRatchetJointNew	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^cpRatchetJointNew(cpBody *a, cpBody *b, cpFloat phase, cpFloat ratchet)$/;"	f
cpResetShapeIdCounter	external/Chipmunk/src/cpShape.c	/^cpResetShapeIdCounter(void)$/;"	f
cpRotaryLimitJoint	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^typedef struct cpRotaryLimitJoint {$/;"	s
cpRotaryLimitJoint	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^} cpRotaryLimitJoint;$/;"	t	typeref:struct:cpRotaryLimitJoint
cpRotaryLimitJointInit	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^cpRotaryLimitJointInit(cpRotaryLimitJoint *joint, cpBody *a, cpBody *b, cpFloat min, cpFloat max)$/;"	f
cpRotaryLimitJointNew	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^cpRotaryLimitJointNew(cpBody *a, cpBody *b, cpFloat min, cpFloat max)$/;"	f
cpSegmentQueryHitDist	external/Chipmunk/include/chipmunk/cpShape.h	/^cpSegmentQueryHitDist(cpVect start, cpVect end, cpSegmentQueryInfo info)$/;"	f
cpSegmentQueryHitPoint	external/Chipmunk/include/chipmunk/cpShape.h	/^cpSegmentQueryHitPoint(cpVect start, cpVect end, cpSegmentQueryInfo info)$/;"	f
cpSegmentQueryInfo	external/Chipmunk/include/chipmunk/cpShape.h	/^typedef struct cpSegmentQueryInfo {$/;"	s
cpSegmentQueryInfo	external/Chipmunk/include/chipmunk/cpShape.h	/^} cpSegmentQueryInfo;$/;"	t	typeref:struct:cpSegmentQueryInfo
cpSegmentQueryInfoPrint	external/Chipmunk/src/cpShape.c	/^cpSegmentQueryInfoPrint(cpSegmentQueryInfo *info)$/;"	f
cpSegmentShape	external/Chipmunk/include/chipmunk/cpShape.h	/^typedef struct cpSegmentShape{$/;"	s
cpSegmentShape	external/Chipmunk/include/chipmunk/cpShape.h	/^} cpSegmentShape;$/;"	t	typeref:struct:cpSegmentShape
cpSegmentShapeCacheData	external/Chipmunk/src/cpShape.c	/^cpSegmentShapeCacheData(cpShape *shape, cpVect p, cpVect rot)$/;"	f	file:
cpSegmentShapeClass	external/Chipmunk/src/cpShape.c	/^static const cpShapeClass cpSegmentShapeClass = {$/;"	v	file:
cpSegmentShapeInit	external/Chipmunk/src/cpShape.c	/^cpSegmentShapeInit(cpSegmentShape *seg, cpBody *body, cpVect a, cpVect b, cpFloat r)$/;"	f
cpSegmentShapeNew	external/Chipmunk/src/cpShape.c	/^cpSegmentShapeNew(cpBody *body, cpVect a, cpVect b, cpFloat r)$/;"	f
cpSegmentShapePointQuery	external/Chipmunk/src/cpShape.c	/^cpSegmentShapePointQuery(cpShape *shape, cpVect p){$/;"	f	file:
cpSegmentShapeSegmentQuery	external/Chipmunk/src/cpShape.c	/^cpSegmentShapeSegmentQuery(cpShape *shape, cpVect a, cpVect b, cpSegmentQueryInfo *info)$/;"	f	file:
cpSegmentShapeSetEndpoints	external/Chipmunk/src/cpShape.c	/^cpSegmentShapeSetEndpoints(cpShape *shape, cpVect a, cpVect b)$/;"	f
cpSegmentShapeSetRadius	external/Chipmunk/src/cpShape.c	/^cpSegmentShapeSetRadius(cpShape *shape, cpFloat radius)$/;"	f
cpShape	external/Chipmunk/include/chipmunk/cpShape.h	/^typedef struct cpShape{$/;"	s
cpShape	external/Chipmunk/include/chipmunk/cpShape.h	/^} cpShape;$/;"	t	typeref:struct:cpShape
cpShapeCacheBB	external/Chipmunk/src/cpShape.c	/^cpShapeCacheBB(cpShape *shape)$/;"	f
cpShapeClass	external/Chipmunk/include/chipmunk/cpShape.h	/^typedef struct cpShapeClass {$/;"	s
cpShapeClass	external/Chipmunk/include/chipmunk/cpShape.h	/^} cpShapeClass;$/;"	t	typeref:struct:cpShapeClass
cpShapeDestroy	external/Chipmunk/src/cpShape.c	/^cpShapeDestroy(cpShape *shape)$/;"	f
cpShapeFree	external/Chipmunk/src/cpShape.c	/^cpShapeFree(cpShape *shape)$/;"	f
cpShapeInit	external/Chipmunk/src/cpShape.c	/^cpShapeInit(cpShape *shape, const cpShapeClass *klass, cpBody *body)$/;"	f
cpShapePointQuery	external/Chipmunk/src/cpShape.c	/^cpShapePointQuery(cpShape *shape, cpVect p){$/;"	f
cpShapeSegmentQuery	external/Chipmunk/src/cpShape.c	/^cpShapeSegmentQuery(cpShape *shape, cpVect a, cpVect b, cpSegmentQueryInfo *info){$/;"	f
cpShapeType	external/Chipmunk/include/chipmunk/cpShape.h	/^typedef enum cpShapeType{$/;"	g
cpShapeType	external/Chipmunk/include/chipmunk/cpShape.h	/^} cpShapeType;$/;"	t	typeref:enum:cpShapeType
cpSimpleMotor	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^typedef struct cpSimpleMotor {$/;"	s
cpSimpleMotor	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^} cpSimpleMotor;$/;"	t	typeref:struct:cpSimpleMotor
cpSimpleMotorInit	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^cpSimpleMotorInit(cpSimpleMotor *joint, cpBody *a, cpBody *b, cpFloat rate)$/;"	f
cpSimpleMotorNew	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^cpSimpleMotorNew(cpBody *a, cpBody *b, cpFloat rate)$/;"	f
cpSlideJoint	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^typedef struct cpSlideJoint {$/;"	s
cpSlideJoint	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^} cpSlideJoint;$/;"	t	typeref:struct:cpSlideJoint
cpSlideJointInit	external/Chipmunk/src/constraints/cpSlideJoint.c	/^cpSlideJointInit(cpSlideJoint *joint, cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2, cpFloat min, cpFloat max)$/;"	f
cpSlideJointNew	external/Chipmunk/src/constraints/cpSlideJoint.c	/^cpSlideJointNew(cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2, cpFloat min, cpFloat max)$/;"	f
cpSpace	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef struct cpSpace{$/;"	s
cpSpace	external/Chipmunk/include/chipmunk/cpSpace.h	/^} cpSpace;$/;"	t	typeref:struct:cpSpace
cpSpaceAddBody	external/Chipmunk/src/cpSpace.c	/^cpSpaceAddBody(cpSpace *space, cpBody *body)$/;"	f
cpSpaceAddCollisionHandler	external/Chipmunk/src/cpSpace.c	/^cpSpaceAddCollisionHandler($/;"	f
cpSpaceAddConstraint	external/Chipmunk/src/cpSpace.c	/^cpSpaceAddConstraint(cpSpace *space, cpConstraint *constraint)$/;"	f
cpSpaceAddPostStepCallback	external/Chipmunk/src/cpSpace.c	/^cpSpaceAddPostStepCallback(cpSpace *space, cpPostStepFunc func, void *obj, void *data)$/;"	f
cpSpaceAddShape	external/Chipmunk/src/cpSpace.c	/^cpSpaceAddShape(cpSpace *space, cpShape *shape)$/;"	f
cpSpaceAddStaticShape	external/Chipmunk/src/cpSpace.c	/^cpSpaceAddStaticShape(cpSpace *space, cpShape *shape)$/;"	f
cpSpaceAlloc	external/Chipmunk/src/cpSpace.c	/^cpSpaceAlloc(void)$/;"	f
cpSpaceAllocContactBuffer	external/Chipmunk/src/cpSpace.c	/^cpSpaceAllocContactBuffer(cpSpace *space)$/;"	f	file:
cpSpaceBBQuery	external/Chipmunk/src/cpSpace.c	/^cpSpaceBBQuery(cpSpace *space, cpBB bb, cpLayers layers, cpGroup group, cpSpaceBBQueryFunc func, void *data)$/;"	f
cpSpaceBBQueryFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpSpaceBBQueryFunc)(cpShape *shape, void *data);$/;"	t
cpSpaceBodyIterator	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpSpaceBodyIterator)(cpBody *body, void *data);$/;"	t
cpSpaceDestroy	external/Chipmunk/src/cpSpace.c	/^cpSpaceDestroy(cpSpace *space)$/;"	f
cpSpaceEachBody	external/Chipmunk/src/cpSpace.c	/^cpSpaceEachBody(cpSpace *space, cpSpaceBodyIterator func, void *data)$/;"	f
cpSpaceFree	external/Chipmunk/src/cpSpace.c	/^cpSpaceFree(cpSpace *space)$/;"	f
cpSpaceFreeChildren	external/Chipmunk/src/cpSpace.c	/^cpSpaceFreeChildren(cpSpace *space)$/;"	f
cpSpaceGetFreeContactBuffer	external/Chipmunk/src/cpSpace.c	/^cpSpaceGetFreeContactBuffer(cpSpace *space)$/;"	f	file:
cpSpaceHash	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef struct cpSpaceHash{$/;"	s
cpSpaceHash	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^} cpSpaceHash;$/;"	t	typeref:struct:cpSpaceHash
cpSpaceHashAlloc	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashAlloc(void)$/;"	f
cpSpaceHashAllocTable	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashAllocTable(cpSpaceHash *hash, int numcells)$/;"	f	file:
cpSpaceHashBBFunc	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef cpBB (*cpSpaceHashBBFunc)(void *obj);$/;"	t
cpSpaceHashBin	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef struct cpSpaceHashBin{$/;"	s
cpSpaceHashBin	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^} cpSpaceHashBin;$/;"	t	typeref:struct:cpSpaceHashBin
cpSpaceHashDestroy	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashDestroy(cpSpaceHash *hash)$/;"	f
cpSpaceHashEach	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashEach(cpSpaceHash *hash, cpSpaceHashIterator func, void *data)$/;"	f
cpSpaceHashFree	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashFree(cpSpaceHash *hash)$/;"	f
cpSpaceHashInit	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashInit(cpSpaceHash *hash, cpFloat celldim, int numcells, cpSpaceHashBBFunc bbfunc)$/;"	f
cpSpaceHashInsert	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashInsert(cpSpaceHash *hash, void *obj, cpHashValue hashid, cpBB bb)$/;"	f
cpSpaceHashIterator	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef void (*cpSpaceHashIterator)(void *obj, void *data);$/;"	t
cpSpaceHashNew	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashNew(cpFloat celldim, int cells, cpSpaceHashBBFunc bbfunc)$/;"	f
cpSpaceHashPointQuery	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashPointQuery(cpSpaceHash *hash, cpVect point, cpSpaceHashQueryFunc func, void *data)$/;"	f
cpSpaceHashQuery	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashQuery(cpSpaceHash *hash, void *obj, cpBB bb, cpSpaceHashQueryFunc func, void *data)$/;"	f
cpSpaceHashQueryFunc	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef void (*cpSpaceHashQueryFunc)(void *obj1, void *obj2, void *data);$/;"	t
cpSpaceHashQueryRehash	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashQueryRehash(cpSpaceHash *hash, cpSpaceHashQueryFunc func, void *data)$/;"	f
cpSpaceHashRehash	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashRehash(cpSpaceHash *hash)$/;"	f
cpSpaceHashRehashObject	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashRehashObject(cpSpaceHash *hash, void *obj, cpHashValue hashid)$/;"	f
cpSpaceHashRemove	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashRemove(cpSpaceHash *hash, void *obj, cpHashValue hashid)$/;"	f
cpSpaceHashResize	external/Chipmunk/src/cpSpaceHash.c	/^cpSpaceHashResize(cpSpaceHash *hash, cpFloat celldim, int numcells)$/;"	f
cpSpaceHashSegmentQuery	external/Chipmunk/src/cpSpaceHash.c	/^void cpSpaceHashSegmentQuery(cpSpaceHash *hash, void *obj, cpVect a, cpVect b, cpFloat t_exit, cpSpaceHashSegmentQueryFunc func, void *data)$/;"	f
cpSpaceHashSegmentQueryFunc	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^typedef cpFloat (*cpSpaceHashSegmentQueryFunc)(void *obj1, void *obj2, void *data);$/;"	t
cpSpaceInit	external/Chipmunk/src/cpSpace.c	/^cpSpaceInit(cpSpace *space)$/;"	f
cpSpaceNew	external/Chipmunk/src/cpSpace.c	/^cpSpaceNew(void)$/;"	f
cpSpacePointQuery	external/Chipmunk/src/cpSpace.c	/^cpSpacePointQuery(cpSpace *space, cpVect point, cpLayers layers, cpGroup group, cpSpacePointQueryFunc func, void *data)$/;"	f
cpSpacePointQueryFirst	external/Chipmunk/src/cpSpace.c	/^cpSpacePointQueryFirst(cpSpace *space, cpVect point, cpLayers layers, cpGroup group)$/;"	f
cpSpacePointQueryFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpSpacePointQueryFunc)(cpShape *shape, void *data);$/;"	t
cpSpacePostStepRemoveAndFreeShapeAndBody	external/Chipmunk/src/cpSpace.c	/^cpSpacePostStepRemoveAndFreeShapeAndBody(cpSpace *space, cpShape *shape)$/;"	f
cpSpacePushNewContactBuffer	external/Chipmunk/src/cpSpace.c	/^cpSpacePushNewContactBuffer(cpSpace *space)$/;"	f	file:
cpSpaceRehashStatic	external/Chipmunk/src/cpSpace.c	/^cpSpaceRehashStatic(cpSpace *space)$/;"	f
cpSpaceRemoveBody	external/Chipmunk/src/cpSpace.c	/^cpSpaceRemoveBody(cpSpace *space, cpBody *body)$/;"	f
cpSpaceRemoveCollisionHandler	external/Chipmunk/src/cpSpace.c	/^cpSpaceRemoveCollisionHandler(cpSpace *space, cpCollisionType a, cpCollisionType b)$/;"	f
cpSpaceRemoveConstraint	external/Chipmunk/src/cpSpace.c	/^cpSpaceRemoveConstraint(cpSpace *space, cpConstraint *constraint)$/;"	f
cpSpaceRemoveShape	external/Chipmunk/src/cpSpace.c	/^cpSpaceRemoveShape(cpSpace *space, cpShape *shape)$/;"	f
cpSpaceRemoveStaticShape	external/Chipmunk/src/cpSpace.c	/^cpSpaceRemoveStaticShape(cpSpace *space, cpShape *shape)$/;"	f
cpSpaceResizeActiveHash	external/Chipmunk/src/cpSpace.c	/^cpSpaceResizeActiveHash(cpSpace *space, cpFloat dim, int count)$/;"	f
cpSpaceResizeStaticHash	external/Chipmunk/src/cpSpace.c	/^cpSpaceResizeStaticHash(cpSpace *space, cpFloat dim, int count)$/;"	f
cpSpaceSegmentQuery	external/Chipmunk/src/cpSpace.c	/^cpSpaceSegmentQuery(cpSpace *space, cpVect start, cpVect end, cpLayers layers, cpGroup group, cpSpaceSegmentQueryFunc func, void *data)$/;"	f
cpSpaceSegmentQueryFirst	external/Chipmunk/src/cpSpace.c	/^cpSpaceSegmentQueryFirst(cpSpace *space, cpVect start, cpVect end, cpLayers layers, cpGroup group, cpSegmentQueryInfo *out)$/;"	f
cpSpaceSegmentQueryFunc	external/Chipmunk/include/chipmunk/cpSpace.h	/^typedef void (*cpSpaceSegmentQueryFunc)(cpShape *shape, cpFloat t, cpVect n, void *data);$/;"	t
cpSpaceSetDefaultCollisionHandler	external/Chipmunk/src/cpSpace.c	/^cpSpaceSetDefaultCollisionHandler($/;"	f
cpSpaceStep	external/Chipmunk/src/cpSpace.c	/^cpSpaceStep(cpSpace *space, cpFloat dt)$/;"	f
cpVect	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef CGPoint cpVect;$/;"	t
cpVect	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef struct cpVect{cpFloat x,y;} cpVect;$/;"	s
cpVect	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef struct cpVect{cpFloat x,y;} cpVect;$/;"	t	typeref:struct:cpVect
cpVersionString	external/Chipmunk/src/chipmunk.c	/^char *cpVersionString = "5.x.x";$/;"	v
cp_bias_coef	external/Chipmunk/src/cpArbiter.c	/^cpFloat cp_bias_coef = 0.1f;$/;"	v
cp_collision_slop	external/Chipmunk/src/cpArbiter.c	/^cpFloat cp_collision_slop = 0.1f;$/;"	v
cp_constraint_bias_coef	external/Chipmunk/src/constraints/cpConstraint.c	/^cpFloat cp_constraint_bias_coef = 0.1f;$/;"	v
cp_contact_persistence	external/Chipmunk/src/cpSpace.c	/^int cp_contact_persistence = 1;$/;"	v
cpcalloc	external/Chipmunk/include/chipmunk/chipmunk.h	104;"	d
cpfabs	external/Chipmunk/include/chipmunk/chipmunk.h	/^cpfabs(cpFloat n)$/;"	f
cpfacos	external/Chipmunk/include/chipmunk/chipmunk_types.h	18;"	d
cpfacos	external/Chipmunk/include/chipmunk/chipmunk_types.h	30;"	d
cpfatan2	external/Chipmunk/include/chipmunk/chipmunk_types.h	19;"	d
cpfatan2	external/Chipmunk/include/chipmunk/chipmunk_types.h	31;"	d
cpfceil	external/Chipmunk/include/chipmunk/chipmunk_types.h	24;"	d
cpfceil	external/Chipmunk/include/chipmunk/chipmunk_types.h	36;"	d
cpfclamp	external/Chipmunk/include/chipmunk/chipmunk.h	/^cpfclamp(cpFloat f, cpFloat min, cpFloat max)$/;"	f
cpfcos	external/Chipmunk/include/chipmunk/chipmunk_types.h	17;"	d
cpfcos	external/Chipmunk/include/chipmunk/chipmunk_types.h	29;"	d
cpfexp	external/Chipmunk/include/chipmunk/chipmunk_types.h	21;"	d
cpfexp	external/Chipmunk/include/chipmunk/chipmunk_types.h	33;"	d
cpffloor	external/Chipmunk/include/chipmunk/chipmunk_types.h	23;"	d
cpffloor	external/Chipmunk/include/chipmunk/chipmunk_types.h	35;"	d
cpflerp	external/Chipmunk/include/chipmunk/chipmunk.h	/^cpflerp(cpFloat f1, cpFloat f2, cpFloat t)$/;"	f
cpflerpconst	external/Chipmunk/include/chipmunk/chipmunk.h	/^cpflerpconst(cpFloat f1, cpFloat f2, cpFloat d)$/;"	f
cpfmax	external/Chipmunk/include/chipmunk/chipmunk.h	/^cpfmax(cpFloat a, cpFloat b)$/;"	f
cpfmin	external/Chipmunk/include/chipmunk/chipmunk.h	/^cpfmin(cpFloat a, cpFloat b)$/;"	f
cpfmod	external/Chipmunk/include/chipmunk/chipmunk_types.h	20;"	d
cpfmod	external/Chipmunk/include/chipmunk/chipmunk_types.h	32;"	d
cpfpow	external/Chipmunk/include/chipmunk/chipmunk_types.h	22;"	d
cpfpow	external/Chipmunk/include/chipmunk/chipmunk_types.h	34;"	d
cpfree	external/Chipmunk/include/chipmunk/chipmunk.h	106;"	d
cpfsin	external/Chipmunk/include/chipmunk/chipmunk_types.h	16;"	d
cpfsin	external/Chipmunk/include/chipmunk/chipmunk_types.h	28;"	d
cpfsqrt	external/Chipmunk/include/chipmunk/chipmunk_types.h	15;"	d
cpfsqrt	external/Chipmunk/include/chipmunk/chipmunk_types.h	27;"	d
cpmalloc	external/Chipmunk/include/chipmunk/chipmunk.h	103;"	d
cprealloc	external/Chipmunk/include/chipmunk/chipmunk.h	105;"	d
cpv	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpv); \/\/ makes a variable named _cpv that contains the function pointer for cpv()$/;"	v
cpv	external/Chipmunk/include/chipmunk/cpVect.h	/^cpv(const cpFloat x, const cpFloat y)$/;"	f
cpvadd	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvadd);$/;"	v
cpvadd	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvadd(const cpVect v1, const cpVect v2)$/;"	f
cpvclamp	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvclamp);$/;"	v
cpvclamp	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvclamp(const cpVect v, const cpFloat len)$/;"	f
cpvcross	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvcross);$/;"	v
cpvcross	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvcross(const cpVect v1, const cpVect v2)$/;"	f
cpvdist	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvdist);$/;"	v
cpvdist	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvdist(const cpVect v1, const cpVect v2)$/;"	f
cpvdistsq	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvdistsq);$/;"	v
cpvdistsq	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvdistsq(const cpVect v1, const cpVect v2)$/;"	f
cpvdot	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvdot);$/;"	v
cpvdot	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvdot(const cpVect v1, const cpVect v2)$/;"	f
cpvforangle	external/Chipmunk/src/cpVect.c	/^cpvforangle(const cpFloat a)$/;"	f
cpvlength	external/Chipmunk/src/cpVect.c	/^cpvlength(const cpVect v)$/;"	f
cpvlengthsq	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvlengthsq);$/;"	v
cpvlengthsq	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvlengthsq(const cpVect v)$/;"	f
cpvlerp	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvlerp);$/;"	v
cpvlerp	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvlerp(const cpVect v1, const cpVect v2, const cpFloat t)$/;"	f
cpvlerpconst	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvlerpconst);$/;"	v
cpvlerpconst	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvlerpconst(cpVect v1, cpVect v2, cpFloat d)$/;"	f
cpvmult	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvmult);$/;"	v
cpvmult	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvmult(const cpVect v, const cpFloat s)$/;"	f
cpvnear	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvnear);$/;"	v
cpvnear	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvnear(const cpVect v1, const cpVect v2, const cpFloat dist)$/;"	f
cpvneg	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvneg);$/;"	v
cpvneg	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvneg(const cpVect v)$/;"	f
cpvnormalize	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvnormalize);$/;"	v
cpvnormalize	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvnormalize(const cpVect v)$/;"	f
cpvnormalize_safe	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvnormalize_safe);$/;"	v
cpvnormalize_safe	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvnormalize_safe(const cpVect v)$/;"	f
cpvperp	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvperp);$/;"	v
cpvperp	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvperp(const cpVect v)$/;"	f
cpvproject	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvproject);$/;"	v
cpvproject	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvproject(const cpVect v1, const cpVect v2)$/;"	f
cpvrotate	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvrotate);$/;"	v
cpvrotate	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvrotate(const cpVect v1, const cpVect v2)$/;"	f
cpvrperp	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvrperp);$/;"	v
cpvrperp	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvrperp(const cpVect v)$/;"	f
cpvslerp	external/Chipmunk/src/cpVect.c	/^cpvslerp(const cpVect v1, const cpVect v2, const cpFloat t)$/;"	f
cpvslerpconst	external/Chipmunk/src/cpVect.c	/^cpvslerpconst(const cpVect v1, const cpVect v2, const cpFloat a)$/;"	f
cpvstr	external/Chipmunk/src/cpVect.c	/^cpvstr(const cpVect v)$/;"	f
cpvsub	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvsub);$/;"	v
cpvsub	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvsub(const cpVect v1, const cpVect v2)$/;"	f
cpvtoangle	external/Chipmunk/src/cpVect.c	/^cpvtoangle(const cpVect v)$/;"	f
cpvunrotate	external/Chipmunk/include/chipmunk/chipmunk_ffi.h	/^MAKE_REF(cpvunrotate);$/;"	v
cpvunrotate	external/Chipmunk/include/chipmunk/cpVect.h	/^cpvunrotate(const cpVect v1, const cpVect v2)$/;"	f
cpvzero	external/Chipmunk/include/chipmunk/cpVect.h	/^static const cpVect cpvzero={0.0f,0.0f};$/;"	v
crc_lookup	external/Tremor/framing.c	/^static ogg_uint32_t crc_lookup[256]={$/;"	v	file:
createFcn	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2ContactCreateFcn* createFcn;$/;"	m	struct:b2ContactRegister
createFcn	external/Box2d/Testbed/Framework/Test.h	/^	TestCreateFcn *createFcn;$/;"	m	struct:TestEntry
createFcn	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	TestCreateFcn *createFcn;$/;"	m	struct:TestEntry
curLevel	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^@property (nonatomic, retain) Level *curLevel;$/;"	v
curLevelIndex	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^@property (nonatomic, assign) int curLevelIndex;$/;"	v
curStoryIndex	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) int curStoryIndex;$/;"	v
currentAction	cocos2d/CCActionManager.h	/^	CCAction		*currentAction;$/;"	m	struct:_hashElement
currentActionSalvaged	cocos2d/CCActionManager.h	/^	BOOL			currentActionSalvaged;$/;"	m	struct:_hashElement
currentIndex	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	int currentIndex;$/;"	m	struct:_sourceGroup
current_allocation	external/libpng/pngtest.c	/^static int current_allocation = 0;$/;"	v	file:
current_link	external/Tremor/ivorbisfile.h	/^  int              current_link;$/;"	m	struct:OggVorbis_File
current_serialno	external/Tremor/ivorbisfile.h	/^  ogg_uint32_t     current_serialno;$/;"	m	struct:OggVorbis_File
d	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpFloat d;$/;"	m	struct:cpPolyShapeAxis
damping	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpFloat damping;$/;"	m	struct:cpDampedRotarySpring
damping	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpFloat damping;$/;"	m	struct:cpDampedSpring
damping	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpFloat damping;$/;"	m	struct:cpSpace
dampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 dampingRatio;$/;"	m	struct:b2DistanceJointDef
dampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 dampingRatio;$/;"	m	struct:b2MouseJointDef
data	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	char* data;$/;"	m	struct:b2StackEntry
data	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpDataPointer data;$/;"	m	struct:cpConstraint
data	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpDataPointer data;$/;"	m	struct:cpBody
data	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpDataPointer data;$/;"	m	struct:cpShape
data	external/Chipmunk/include/chipmunk/cpSpace.h	/^	void *data;$/;"	m	struct:cpCollisionHandler
data	external/Chipmunk/src/cpSpace.c	/^	void *data;$/;"	m	struct:bbQueryContext	file:
data	external/Chipmunk/src/cpSpace.c	/^	void *data;$/;"	m	struct:pointQueryContext	file:
data	external/Chipmunk/src/cpSpace.c	/^	void *data;$/;"	m	struct:postStepCallback	file:
data	external/Chipmunk/src/cpSpaceHash.c	/^	void *data;$/;"	m	struct:eachPair	file:
data	external/Chipmunk/src/cpSpaceHash.c	/^	void *data;$/;"	m	struct:queryRehashPair	file:
data	external/TouchJSON/CDataScanner.h	/^@property (readwrite, nonatomic, retain) NSData *data;$/;"	v
data	external/Tremor/ogg.h	/^  unsigned char      *data;$/;"	m	struct:ogg_buffer
data	external/libpng/png.h	/^    png_byte *data;$/;"	m	struct:png_unknown_chunk_t
dataoffsets	external/Tremor/ivorbisfile.h	/^  ogg_int64_t     *dataoffsets;$/;"	m	struct:OggVorbis_File
datasource	external/Tremor/ivorbisfile.h	/^  void            *datasource; \/* Pointer to a FILE *, etc. *\/$/;"	m	struct:OggVorbis_File
day	external/libpng/png.h	/^   png_byte day;     \/* day of month, 1 - 31 *\/$/;"	m	struct:png_time_struct
dec_codelengths	external/Tremor/codebook.h	/^  char         *dec_codelengths;$/;"	m	struct:codebook
dec_firsttable	external/Tremor/codebook.h	/^  ogg_uint32_t *dec_firsttable;$/;"	m	struct:codebook
dec_firsttablen	external/Tremor/codebook.h	/^  int           dec_firsttablen;$/;"	m	struct:codebook
dec_index	external/Tremor/codebook.h	/^  int          *dec_index;  $/;"	m	struct:codebook
dec_maxlength	external/Tremor/codebook.h	/^  int           dec_maxlength;$/;"	m	struct:codebook
decode_packed_entry_number	external/Tremor/codebook.c	/^STIN long decode_packed_entry_number(codebook *book, $/;"	f
decodemap	external/Tremor/res012.c	/^  int       **decodemap;$/;"	m	struct:__anon72	file:
decompress_data	tools/tmx-embeded-2-png.py	/^def decompress_data(data):$/;"	f
defaultAlphaPixelFormat	cocos2d/CCTexture2D.h	/^+(CCTexture2DPixelFormat) defaultAlphaPixelFormat;$/;"	v
defaultHandler	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionHandler defaultHandler;$/;"	m	struct:cpSpace
defaultHandler	external/Chipmunk/src/cpSpace.c	/^cpCollisionHandler defaultHandler = {0, 0, alwaysCollide, alwaysCollide, nothing, nothing, NULL};$/;"	v
defaultImage	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSprite *defaultImage;$/;"	v
defaultSpringForce	external/Chipmunk/src/constraints/cpDampedSpring.c	/^defaultSpringForce(cpDampedSpring *spring, cpFloat dist){$/;"	f	file:
defaultSpringTorque	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^defaultSpringTorque(cpDampedRotarySpring *spring, cpFloat relativeAngle){$/;"	f	file:
default_value	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	void *default_value;$/;"	m	struct:cpHashSet
degreesPerSecond	cocos2d/CCParticleSystem.h	/^			float		degreesPerSecond;$/;"	m	struct:sCCParticle::__anon26::__anon28
delay	cocos2d/CCSpriteFrame.h	/^@property (nonatomic,readwrite,assign) float delay;$/;"	v
delegate	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property(assign) id<CDLongAudioSourceDelegate> delegate; $/;"	v
delegate	cocos2d/CCTouchHandler.h	/^@property(nonatomic, readwrite, retain) id delegate;$/;"	v
deltaColor	cocos2d/CCParticleSystem.h	/^	ccColor4F	deltaColor;$/;"	m	struct:sCCParticle
deltaRadius	cocos2d/CCParticleSystem.h	/^			float		deltaRadius;$/;"	m	struct:sCCParticle::__anon26::__anon28
deltaRotation	cocos2d/CCParticleSystem.h	/^	float		deltaRotation;$/;"	m	struct:sCCParticle
deltaSize	cocos2d/CCParticleSystem.h	/^	float		deltaSize;$/;"	m	struct:sCCParticle
demoDestroyFunc	external/Chipmunk/Demo/ChipmunkDemo.h	/^typedef void (*demoDestroyFunc)(void);$/;"	t
demoDestroyFunc	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^typedef void (*demoDestroyFunc)(void);$/;"	t
demoInitFunc	external/Chipmunk/Demo/ChipmunkDemo.h	/^typedef cpSpace *(*demoInitFunc)(void);$/;"	t
demoInitFunc	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^typedef cpSpace *(*demoInitFunc)(void);$/;"	t
demoUpdateFunc	external/Chipmunk/Demo/ChipmunkDemo.h	/^typedef void (*demoUpdateFunc)(int ticks);$/;"	t
demoUpdateFunc	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^typedef void (*demoUpdateFunc)(int ticks);$/;"	t
density	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	float32 density;$/;"	m	struct:b2FixtureDef
depth	external/libpng/png.h	/^   png_byte depth;           \/* depth of palette samples *\/$/;"	m	struct:png_sPLT_struct
depthFormat	cocos2d/Support/EAGLView.h	/^@property(nonatomic,readonly) GLuint depthFormat;$/;"	v
descendants	cocos2d/CCSpriteSheet.h	/^@property (nonatomic,readonly) CCArray *descendants;$/;"	v
descender	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFloat descender;$/;"	v
deserializer	external/TouchJSON/JSON/CJSONDeserializer.h	/^+ (id)deserializer;$/;"	v
destroy	external/Chipmunk/Demo/Bounce.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Joints.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/LogoSmash.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/MagnetsElectric.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/OneWay.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Planet.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Player.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Plink.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Pump.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/PyramidStack.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/PyramidTopple.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Query.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Sensors.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Simple.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Springies.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/TheoJansen.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/Tumble.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/Demo/UnsafeOps.c	/^destroy(void)$/;"	f	file:
destroy	external/Chipmunk/include/chipmunk/cpShape.h	/^	void (*destroy)(struct cpShape *shape);$/;"	m	struct:cpShapeClass
destroyFcn	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2ContactDestroyFcn* destroyFcn;$/;"	m	struct:b2ContactRegister
destroyFunc	external/Chipmunk/Demo/ChipmunkDemo.h	/^	demoDestroyFunc destroyFunc;$/;"	m	struct:chipmunkDemo
destroyFunc	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^	demoDestroyFunc destroyFunc;$/;"	m	struct:chipmunkDemo
deviceOrientation	cocos2d/CCDirector.h	/^@property (nonatomic,readwrite) ccDeviceOrientation deviceOrientation;$/;"	v
dim	external/Tremor/codebook.h	/^  long   dim;            \/* codebook dimensions (elements per vector) *\/$/;"	m	struct:static_codebook
dim	external/Tremor/codebook.h	/^  long dim;           \/* codebook dimensions (elements per vector) *\/$/;"	m	struct:codebook
dir	cocos2d/CCParticleSystem.h	/^			CGPoint		dir;$/;"	m	struct:sCCParticle::__anon26::__anon27
dirty	cocos2d/CCCamera.h	/^@property (nonatomic,readwrite) BOOL dirty;$/;"	v
dirty	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) BOOL dirty;$/;"	v
disabledColor	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite) ccColor3B disabledColor;$/;"	v
disabledImage	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite,retain) CCNode<CCRGBAProtocol> *disabledImage;$/;"	v
dispatchEvents	cocos2d/CCTouchDispatcher.h	/^@property (nonatomic,readwrite, assign) BOOL dispatchEvents;$/;"	v
displayFPS	cocos2d/CCDirector.h	/^@property (nonatomic,readwrite, assign) BOOL displayFPS;$/;"	v
dist	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpFloat dist;$/;"	m	struct:cpPinJoint
dist	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat dist;$/;"	m	struct:cpContact
distance	external/Box2d/Box2D/Collision/b2Distance.h	/^	float32 distance;$/;"	m	struct:b2DistanceOutput
dom	tools/tmx-embeded-2-png.py	/^import xml.dom.minidom$/;"	i
drawAABBs	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawAABBs;$/;"	m	struct:Settings
drawAABBs	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawAABBs;$/;"	m	struct:Settings
drawBB	external/Chipmunk/Demo/drawSpace.c	/^drawBB(void *ptr, void *unused)$/;"	f	file:
drawBBs	external/Chipmunk/Demo/drawSpace.h	/^	int drawBBs;$/;"	m	struct:drawSpaceOptions
drawCOMs	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawCOMs;$/;"	m	struct:Settings
drawCOMs	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawCOMs;$/;"	m	struct:Settings
drawCircleShape	external/Chipmunk/Demo/drawSpace.c	/^drawCircleShape(cpBody *body, cpCircleShape *circle)$/;"	f	file:
drawCollisions	external/Chipmunk/Demo/drawSpace.c	/^drawCollisions(void *ptr, void *data)$/;"	f	file:
drawConstraint	external/Chipmunk/Demo/drawSpace.c	/^drawConstraint(cpConstraint *constraint)$/;"	f	file:
drawContactForces	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawContactForces;$/;"	m	struct:Settings
drawContactForces	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawContactForces;$/;"	m	struct:Settings
drawContactNormals	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawContactNormals;$/;"	m	struct:Settings
drawContactNormals	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawContactNormals;$/;"	m	struct:Settings
drawContactPoints	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawContactPoints;$/;"	m	struct:Settings
drawContactPoints	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawContactPoints;$/;"	m	struct:Settings
drawFrictionForces	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawFrictionForces;$/;"	m	struct:Settings
drawFrictionForces	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawFrictionForces;$/;"	m	struct:Settings
drawHash	external/Chipmunk/Demo/drawSpace.h	/^	int drawHash;$/;"	m	struct:drawSpaceOptions
drawJoints	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawJoints;$/;"	m	struct:Settings
drawJoints	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawJoints;$/;"	m	struct:Settings
drawObject	external/Chipmunk/Demo/drawSpace.c	/^drawObject(void *ptr, void *unused)$/;"	f	file:
drawOptions	external/Chipmunk/Demo/ChipmunkDemo.h	/^	drawSpaceOptions *drawOptions;$/;"	m	struct:chipmunkDemo
drawOptions	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^	drawSpaceOptions *drawOptions;$/;"	m	struct:chipmunkDemo
drawPairs	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawPairs;$/;"	m	struct:Settings
drawPairs	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawPairs;$/;"	m	struct:Settings
drawPolyShape	external/Chipmunk/Demo/drawSpace.c	/^drawPolyShape(cpBody *body, cpPolyShape *poly)$/;"	f	file:
drawSegmentShape	external/Chipmunk/Demo/drawSpace.c	/^drawSegmentShape(cpBody *body, cpSegmentShape *seg)$/;"	f	file:
drawShapes	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawShapes;$/;"	m	struct:Settings
drawShapes	external/Chipmunk/Demo/drawSpace.h	/^	int drawShapes;$/;"	m	struct:drawSpaceOptions
drawShapes	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawShapes;$/;"	m	struct:Settings
drawSpace	external/Chipmunk/Demo/drawSpace.c	/^drawSpace(cpSpace *space, drawSpaceOptions *options)$/;"	f
drawSpaceOptions	external/Chipmunk/Demo/drawSpace.h	/^typedef struct drawSpaceOptions {$/;"	s
drawSpaceOptions	external/Chipmunk/Demo/drawSpace.h	/^} drawSpaceOptions;$/;"	t	typeref:struct:drawSpaceOptions
drawSpatialHash	external/Chipmunk/Demo/drawSpace.c	/^drawSpatialHash(cpSpaceHash *hash)$/;"	f	file:
drawSpring	external/Chipmunk/Demo/drawSpace.c	/^drawSpring(cpDampedSpring *spring, cpBody *body_a, cpBody *body_b)$/;"	f	file:
drawStats	external/Box2d/Testbed/Framework/Test.h	/^	int32 drawStats;$/;"	m	struct:Settings
drawStats	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 drawStats;$/;"	m	struct:Settings
draw_options	external/Chipmunk/Demo/LogoSmash.c	/^drawSpaceOptions draw_options = {$/;"	v
dst	cocos2d/ccTypes.h	/^	GLenum dst;$/;"	m	struct:_ccBlendFunc
dt	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^	float32 dt;			\/\/ time step$/;"	m	struct:b2TimeStep
dt	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpFloat dt;$/;"	m	struct:cpDampedRotarySpring
dt	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpFloat dt;$/;"	m	struct:cpDampedSpring
dtRatio	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^	float32 dtRatio;	\/\/ dt * inv_dt0$/;"	m	struct:b2TimeStep
duration	cocos2d/CCAction.h	/^@property (nonatomic,readwrite) ccTime duration;$/;"	v
duration	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float duration;$/;"	v
e	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat e;$/;"	m	struct:cpArbiter
e	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpFloat e;$/;"	m	struct:cpShape
e_aabbBit	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^		e_aabbBit				= 0x0004, \/\/\/< draw axis aligned bounding boxes$/;"	e	enum:b2DebugDraw::__anon54
e_above	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^		e_above,$/;"	e	enum:OneSidedPlatform::State
e_activeFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_activeFlag		= 0x0020,$/;"	e	enum:b2Body::__anon51
e_actorCount	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^		e_actorCount = 128,$/;"	e	enum:DynamicTreeTest::__anon61
e_any	external/Box2d/Testbed/Tests/RayCast.h	/^		e_any,$/;"	e	enum:RayCast::Mode
e_atLowerLimit	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_atLowerLimit,$/;"	e	enum:b2LimitState
e_atUpperLimit	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_atUpperLimit,$/;"	e	enum:b2LimitState
e_autoSleepFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_autoSleepFlag		= 0x0004,$/;"	e	enum:b2Body::__anon51
e_awakeFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_awakeFlag			= 0x0002,$/;"	e	enum:b2Body::__anon51
e_below	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^		e_below,$/;"	e	enum:OneSidedPlatform::State
e_bulletFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_bulletFlag		= 0x0008,$/;"	e	enum:b2Body::__anon51
e_bulletHitFlag	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^		e_bulletHitFlag		= 0x0010,$/;"	e	enum:b2Contact::__anon52
e_centerOfMassBit	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^		e_centerOfMassBit		= 0x0010, \/\/\/< draw center of mass frame$/;"	e	enum:b2DebugDraw::__anon54
e_circle	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^		e_circle = 0,$/;"	e	enum:b2Shape::Type
e_circles	external/Box2d/Box2D/Collision/b2Collision.h	/^		e_circles,$/;"	e	enum:b2Manifold::Type
e_clearForces	external/Box2d/Box2D/Dynamics/b2World.h	/^		e_clearForces	= 0x0004,$/;"	e	enum:b2World::__anon53
e_closest	external/Box2d/Testbed/Tests/RayCast.h	/^		e_closest,$/;"	e	enum:RayCast::Mode
e_columnCount	external/Box2d/Testbed/Tests/Confined.h	/^		e_columnCount = 0,$/;"	e	enum:Confined::__anon59
e_columnCount	external/Box2d/Testbed/Tests/VerticalStack.h	/^		e_columnCount = 5,$/;"	e	enum:VerticalStack::__anon63
e_count	external/Box2d/Testbed/Tests/Breakable.h	/^		e_count = 7$/;"	e	enum:Breakable::__anon65
e_count	external/Box2d/Testbed/Tests/Bridge.h	/^		e_count = 30,$/;"	e	enum:Bridge::__anon66
e_count	external/Box2d/Testbed/Tests/Cantilever.h	/^		e_count = 8,$/;"	e	enum:Cantilever::__anon57
e_count	external/Box2d/Testbed/Tests/Pyramid.h	/^		e_count = 20,$/;"	e	enum:Pyramid::__anon62
e_count	external/Box2d/Testbed/Tests/SensorTest.h	/^		e_count = 7$/;"	e	enum:SensorTest::__anon67
e_count	external/Box2d/Testbed/Tests/SphereStack.h	/^		e_count = 10$/;"	e	enum:SphereStack::__anon58
e_distanceJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_distanceJoint,$/;"	e	enum:b2JointType
e_enabledFlag	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^		e_enabledFlag		= 0x0004,$/;"	e	enum:b2Contact::__anon52
e_equalLimits	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_equalLimits$/;"	e	enum:b2LimitState
e_faceA	external/Box2d/Box2D/Collision/b2Collision.h	/^		e_faceA,$/;"	e	enum:b2Manifold::Type
e_faceA	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^		e_faceA,$/;"	e	enum:b2SeparationFunction::Type	file:
e_faceB	external/Box2d/Box2D/Collision/b2Collision.h	/^		e_faceB$/;"	e	enum:b2Manifold::Type
e_faceB	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^		e_faceB$/;"	e	enum:b2SeparationFunction::Type	file:
e_failed	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^		e_failed,$/;"	e	enum:b2TOIOutput::State
e_filterFlag	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^		e_filterFlag		= 0x0008,$/;"	e	enum:b2Contact::__anon52
e_fixedRotationFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_fixedRotationFlag	= 0x0010,$/;"	e	enum:b2Body::__anon51
e_frictionJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_frictionJoint,$/;"	e	enum:b2JointType
e_gearJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_gearJoint,$/;"	e	enum:b2JointType
e_inactiveLimit	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_inactiveLimit,$/;"	e	enum:b2LimitState
e_islandFlag	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^		e_islandFlag		= 0x0001,$/;"	e	enum:b2Contact::__anon52
e_islandFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_islandFlag		= 0x0001,$/;"	e	enum:b2Body::__anon51
e_jointBit	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^		e_jointBit				= 0x0002, \/\/\/< draw joint connections$/;"	e	enum:b2DebugDraw::__anon54
e_lineJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_lineJoint,$/;"	e	enum:b2JointType
e_locked	external/Box2d/Box2D/Dynamics/b2World.h	/^		e_locked		= 0x0002,$/;"	e	enum:b2World::__anon53
e_maxBodies	external/Box2d/Testbed/Tests/EdgeShapes.h	/^		e_maxBodies = 256,$/;"	e	enum:EdgeShapes::__anon60
e_maxBodies	external/Box2d/Testbed/Tests/RayCast.h	/^		e_maxBodies = 256,$/;"	e	enum:RayCast::__anon69
e_maxCount	external/Box2d/Testbed/Tests/PolyShapes.h	/^		e_maxCount = 4$/;"	e	enum:PolyShapesCallback::__anon64
e_maxCount	external/Box2d/Testbed/Tests/RayCast.h	/^		e_maxCount = 3$/;"	e	enum:RayCastMultipleCallback::__anon68
e_mouseJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_mouseJoint,$/;"	e	enum:b2JointType
e_multiple	external/Box2d/Testbed/Tests/RayCast.h	/^		e_multiple$/;"	e	enum:RayCast::Mode
e_newFixture	external/Box2d/Box2D/Dynamics/b2World.h	/^		e_newFixture	= 0x0001,$/;"	e	enum:b2World::__anon53
e_nullProxy	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^		e_nullProxy = -1,$/;"	e	enum:b2BroadPhase::__anon56
e_o_s	external/Tremor/ogg.h	/^  int            e_o_s;    \/* set when we have buffered the last$/;"	m	struct:ogg_stream_state
e_o_s	external/Tremor/ogg.h	/^  long           e_o_s;$/;"	m	struct:__anon84
e_overlapped	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^		e_overlapped,$/;"	e	enum:b2TOIOutput::State
e_pairBit	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^		e_pairBit				= 0x0008, \/\/\/< draw broad-phase pairs$/;"	e	enum:b2DebugDraw::__anon54
e_points	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^		e_points,$/;"	e	enum:b2SeparationFunction::Type	file:
e_polygon	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^		e_polygon = 1,$/;"	e	enum:b2Shape::Type
e_prismaticJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_prismaticJoint,$/;"	e	enum:b2JointType
e_pulleyJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_pulleyJoint,$/;"	e	enum:b2JointType
e_revoluteJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_revoluteJoint,$/;"	e	enum:b2JointType
e_rowCount	external/Box2d/Testbed/Tests/Confined.h	/^		e_rowCount = 0$/;"	e	enum:Confined::__anon59
e_rowCount	external/Box2d/Testbed/Tests/VerticalStack.h	/^		e_rowCount = 16$/;"	e	enum:VerticalStack::__anon63
e_separated	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^		e_separated$/;"	e	enum:b2TOIOutput::State
e_shapeBit	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^		e_shapeBit				= 0x0001, \/\/\/< draw shapes$/;"	e	enum:b2DebugDraw::__anon54
e_toiFlag	external/Box2d/Box2D/Dynamics/b2Body.h	/^		e_toiFlag			= 0x0040,$/;"	e	enum:b2Body::__anon51
e_touching	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^		e_touching,$/;"	e	enum:b2TOIOutput::State
e_touchingFlag	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^		e_touchingFlag		= 0x0002,$/;"	e	enum:b2Contact::__anon52
e_typeCount	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^		e_typeCount = 2,$/;"	e	enum:b2Shape::Type
e_unknown	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^		e_unknown= -1,$/;"	e	enum:b2Shape::Type
e_unknown	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^		e_unknown,$/;"	e	enum:b2TOIOutput::State
e_unknown	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^		e_unknown,$/;"	e	enum:OneSidedPlatform::State
e_unknownJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	e_unknownJoint,$/;"	e	enum:b2JointType
e_weldJoint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^    e_weldJoint,$/;"	e	enum:b2JointType
eachBody	external/Chipmunk/Demo/Plink.c	/^eachBody(cpBody *body, void *unused)$/;"	f	file:
eachHelper	external/Chipmunk/src/cpSpaceHash.c	/^eachHelper(void *elt, void *data)$/;"	f	file:
eachPair	external/Chipmunk/src/cpSpaceHash.c	/^typedef struct eachPair {$/;"	s	file:
eachPair	external/Chipmunk/src/cpSpaceHash.c	/^} eachPair;$/;"	t	typeref:struct:eachPair	file:
effectsVolume	CocosDenshion/CocosDenshion/SimpleAudioEngine.h	/^@property (readwrite) float effectsVolume;$/;"	v
elapsed	cocos2d/CCIntervalAction.h	/^@property (nonatomic,readonly) ccTime elapsed;$/;"	v
elasticIterations	external/Chipmunk/include/chipmunk/cpSpace.h	/^	int elasticIterations;$/;"	m	struct:cpSpace
elt	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	void *elt;$/;"	m	struct:cpHashSetBin
emissionRate	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float emissionRate;$/;"	v
emitter	tests/ParticleTest.h	/^@property (readwrite,retain) CCParticleSystem *emitter;$/;"	v
emitterInstance	external/Chipmunk/Demo/Sensors.c	/^static Emitter emitterInstance;$/;"	v	file:
emitterMode	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite) int emitterMode;$/;"	v
enableContinuous	external/Box2d/Testbed/Framework/Test.h	/^	int32 enableContinuous;$/;"	m	struct:Settings
enableContinuous	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 enableContinuous;$/;"	m	struct:Settings
enableLimit	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	bool enableLimit;$/;"	m	struct:b2LineJointDef
enableLimit	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	bool enableLimit;$/;"	m	struct:b2PrismaticJointDef
enableLimit	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	bool enableLimit;$/;"	m	struct:b2RevoluteJointDef
enableMotor	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	bool enableMotor;$/;"	m	struct:b2LineJointDef
enableMotor	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	bool enableMotor;$/;"	m	struct:b2PrismaticJointDef
enableMotor	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	bool enableMotor;$/;"	m	struct:b2RevoluteJointDef
enableWarmStarting	external/Box2d/Testbed/Framework/Test.h	/^	int32 enableWarmStarting;$/;"	m	struct:Settings
enableWarmStarting	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 enableWarmStarting;$/;"	m	struct:Settings
enabled	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	bool enabled;$/;"	m	struct:_sourceGroup
enabledSelectors	cocos2d/CCTouchHandler.h	/^@property(nonatomic,readwrite) ccTouchSelectorFlag enabledSelectors;$/;"	v
end	CocosDenshion/CocosDenshion/CDAudioManager.h	/^+(void) end;$/;"	v
end	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float end;$/;"	v
end	CocosDenshion/CocosDenshion/SimpleAudioEngine.h	/^+(void) end;$/;"	v
end	external/Chipmunk/src/cpSpace.c	/^	cpVect start, end;$/;"	m	struct:segQueryContext	file:
end	external/Chipmunk/src/cpSpace.c	/^	cpVect start, end;$/;"	m	struct:segQueryFirstContext	file:
end	external/Tremor/backends.h	/^  long  end;$/;"	m	struct:vorbis_info_residue0
end	external/Tremor/ivorbisfile.h	/^  ogg_int64_t      end;$/;"	m	struct:OggVorbis_File
end	external/Tremor/ogg.h	/^  long           end;$/;"	m	struct:oggbyte_buffer
endColor	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) ccColor4F endColor;$/;"	v
endColorVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) ccColor4F endColorVar;$/;"	v
endPosition	cocos2d/CCIntervalAction.h	/^	CGPoint endPosition;$/;"	m	struct:_ccBezierConfig
endRadius	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float endRadius;$/;"	v
endRadiusVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float endRadiusVar;			$/;"	v
endSize	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float endSize;$/;"	v
endSizeVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float endSizeVar;$/;"	v
endSpin	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float endSpin;$/;"	v
endSpinVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float endSpinVar;$/;"	v
endValue	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float endValue;$/;"	v
entries	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	int entries;$/;"	m	struct:cpHashSet
entries	external/Tremor/codebook.h	/^  long   entries;        \/* codebook entries *\/$/;"	m	struct:static_codebook
entries	external/Tremor/codebook.h	/^  long entries;       \/* codebook entries *\/$/;"	m	struct:codebook
entries	external/libpng/png.h	/^   png_sPLT_entryp entries;  \/* palette entries *\/$/;"	m	struct:png_sPLT_struct
entry	external/Box2d/Testbed/Framework/Main.cpp	/^	TestEntry* entry;$/;"	m	namespace:__anon70	file:
eofflag	external/Tremor/ivorbiscodec.h	/^  int         eofflag;$/;"	m	struct:vorbis_block
eofflag	external/Tremor/ivorbiscodec.h	/^  int  eofflag;$/;"	m	struct:vorbis_dsp_state
eql	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	cpHashSetEqlFunc eql;$/;"	m	struct:cpHashSet
expand_mult	cocos2d/Support/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket
extension	experimental/sound-engine/PASoundSource.h	/^@property (readwrite, copy) NSString *extension;$/;"	v
f	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpVect p, v, f;$/;"	m	struct:cpBody
familyName	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) NSString *familyName;$/;"	v
features	external/Box2d/Box2D/Collision/b2Collision.h	/^	} features;$/;"	m	union:b2ContactID	typeref:struct:b2ContactID::Features
fifo_fill	external/Tremor/ogg.h	/^  long              fifo_fill;$/;"	m	struct:ogg_sync_state
fifo_head	external/Tremor/ogg.h	/^  ogg_reference    *fifo_head;$/;"	m	struct:ogg_sync_state
fifo_tail	external/Tremor/ogg.h	/^  ogg_reference    *fifo_tail;$/;"	m	struct:ogg_sync_state
file	experimental/sound-engine/PASoundSource.h	/^@property (readwrite, copy) NSString *file;$/;"	v
filePath	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly) NSString *filePath;$/;"	v
filename	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSString *filename;$/;"	v
filter	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2Filter filter;$/;"	m	struct:b2FixtureDef
filterSmooth	CocosDenshion/TestsAndDemos/FancyRatMeteringDemo/Classes/AudioVisualization.h	/^@property double filterSmooth;$/;"	v
filters_used	external/libpng/pngtest.c	/^static png_uint_32 filters_used[256];$/;"	v	file:
findMSA	external/Chipmunk/src/cpCollision.c	/^findMSA(cpPolyShape *poly, cpPolyShapeAxis *axes, int num, cpFloat *min_out)$/;"	f	file:
findPointsBehindSeg	external/Chipmunk/src/cpCollision.c	/^findPointsBehindSeg(cpContact *arr, int *num, cpSegmentShape *seg, cpPolyShape *poly, cpFloat pDist, cpFloat coef) $/;"	f	file:
findVerts	external/Chipmunk/src/cpCollision.c	/^findVerts(cpContact *arr, cpPolyShape *poly1, cpPolyShape *poly2, cpVect n, cpFloat dist)$/;"	f	file:
firstGid	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) unsigned int firstGid;$/;"	v
fix_image	tools/spritesheet-artifact-fixer.py	/^    def fix_image(self ):$/;"	m	class:SpriteSheetMarginFix
fixedRotation	external/Box2d/Box2D/Dynamics/b2Body.h	/^	bool fixedRotation;$/;"	m	struct:b2BodyDef
fixtureA	external/Box2d/Testbed/Framework/Test.h	/^	b2Fixture* fixtureA;$/;"	m	struct:ContactPoint
fixtureA	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	b2Fixture* fixtureA;$/;"	m	struct:ContactPoint
fixtureB	external/Box2d/Testbed/Framework/Test.h	/^	b2Fixture* fixtureB;$/;"	m	struct:ContactPoint
fixtureB	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	b2Fixture* fixtureB;$/;"	m	struct:ContactPoint
flip	external/Box2d/Box2D/Collision/b2Collision.h	/^		uint8 flip;				\/\/\/< A value of 1 indicates that the reference edge is on shape2.$/;"	m	struct:b2ContactID::Features
flipX	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) BOOL flipX;$/;"	v
flipY	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) BOOL flipY;$/;"	v
flipped	cocos2d/Support/TGAlib.h	/^	int flipped;$/;"	m	struct:sImageTGA
float32	external/Box2d/Box2D/Common/b2Settings.h	/^typedef float float32;$/;"	t
floor0_exportbundle	external/Tremor/floor0.c	/^vorbis_func_floor floor0_exportbundle={$/;"	v
floor0_free_info	external/Tremor/floor0.c	/^static void floor0_free_info(vorbis_info_floor *i){$/;"	f	file:
floor0_free_look	external/Tremor/floor0.c	/^static void floor0_free_look(vorbis_look_floor *i){$/;"	f	file:
floor0_inverse1	external/Tremor/floor0.c	/^static void *floor0_inverse1(vorbis_block *vb,vorbis_look_floor *i){$/;"	f	file:
floor0_inverse2	external/Tremor/floor0.c	/^static int floor0_inverse2(vorbis_block *vb,vorbis_look_floor *i,$/;"	f	file:
floor0_look	external/Tremor/floor0.c	/^static vorbis_look_floor *floor0_look (vorbis_dsp_state *vd,vorbis_info_mode *mi,$/;"	f	file:
floor0_unpack	external/Tremor/floor0.c	/^static vorbis_info_floor *floor0_unpack (vorbis_info *vi,oggpack_buffer *opb){$/;"	f	file:
floor1_exportbundle	external/Tremor/floor1.c	/^vorbis_func_floor floor1_exportbundle={$/;"	v
floor1_free_info	external/Tremor/floor1.c	/^static void floor1_free_info(vorbis_info_floor *i){$/;"	f	file:
floor1_free_look	external/Tremor/floor1.c	/^static void floor1_free_look(vorbis_look_floor *i){$/;"	f	file:
floor1_inverse1	external/Tremor/floor1.c	/^static void *floor1_inverse1(vorbis_block *vb,vorbis_look_floor *in){$/;"	f	file:
floor1_inverse2	external/Tremor/floor1.c	/^static int floor1_inverse2(vorbis_block *vb,vorbis_look_floor *in,void *memo,$/;"	f	file:
floor1_look	external/Tremor/floor1.c	/^static vorbis_look_floor *floor1_look(vorbis_dsp_state *vd,vorbis_info_mode *mi,$/;"	f	file:
floor1_rangedB	external/Tremor/floor1.c	29;"	d	file:
floor1_unpack	external/Tremor/floor1.c	/^static vorbis_info_floor *floor1_unpack (vorbis_info *vi,oggpack_buffer *opb){$/;"	f	file:
floor_func	external/Tremor/mapping0.c	/^  vorbis_func_floor **floor_func;$/;"	m	struct:__anon82	file:
floor_int	external/Chipmunk/src/cpSpaceHash.c	/^floor_int(cpFloat f)$/;"	f	file:
floor_look	external/Tremor/mapping0.c	/^  vorbis_look_floor **floor_look;$/;"	m	struct:__anon82	file:
floor_param	external/Tremor/codec_internal.h	/^  vorbis_info_floor      *floor_param[64];$/;"	m	struct:codec_setup_info
floor_type	external/Tremor/codec_internal.h	/^  int                     floor_type[64];$/;"	m	struct:codec_setup_info
floors	external/Tremor/codec_internal.h	/^  int        floors;$/;"	m	struct:codec_setup_info
floorsubmap	external/Tremor/backends.h	/^  int   floorsubmap[16];   \/* [mux] submap to floors *\/$/;"	m	struct:vorbis_info_mapping0
fontName	cocos2d/CCMenuItem.h	/^+(NSString*) fontName;$/;"	v
fontName	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) NSString *fontName;$/;"	v
fontSize	cocos2d/CCMenuItem.h	/^+(int) fontSize;$/;"	v
force_func	external/Chipmunk/Demo/MagnetsElectric.c	/^	SingForceFunc force_func[SINGMAX];$/;"	m	struct:ActorSingularity	file:
forward_index	external/Tremor/floor1.c	/^  int forward_index[VIF_POSIT+2];$/;"	m	struct:__anon71	file:
fourbppswaptable	external/libpng/pngtrans.c	/^static PNG_CONST png_byte fourbppswaptable[256] = {$/;"	v	file:
fraction	external/Box2d/Box2D/Collision/b2Collision.h	/^	float32 fraction;$/;"	m	struct:b2RayCastOutput
fraction	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^		float32 fraction;$/;"	m	struct:DynamicTreeTest::Actor
framePeriod	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 framePeriod = 16;$/;"	m	namespace:__anon70	file:
frames	cocos2d/CCSpriteFrame.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *frames;$/;"	v
frand	external/Chipmunk/Demo/ChipmunkDemo.h	/^frand(void)$/;"	f
frand	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^frand(void)$/;"	f
frand_unit	external/Chipmunk/Demo/Sensors.c	/^static cpFloat frand_unit(){return 2.0f*((cpFloat)rand()\/(cpFloat)RAND_MAX) - 1.0f;}$/;"	f	file:
freeWrap	external/Chipmunk/src/cpHashSet.c	/^static void freeWrap(void *ptr, void *unused){cpfree(ptr);}$/;"	f	file:
freeWrap	external/Chipmunk/src/cpSpace.c	/^static void             freeWrap(void         *ptr, void *unused){            cpfree(ptr);}$/;"	f	file:
freeWrap	external/Chipmunk/src/cpSpaceHash.c	/^static void freeWrap(void *ptr, void *unused){cpfree(ptr);}$/;"	f	file:
free_info	external/Tremor/backends.h	/^  void (*free_info)    (vorbis_info_mapping *);$/;"	m	struct:__anon77
free_info	external/Tremor/backends.h	/^  void (*free_info)    (vorbis_info_residue *);$/;"	m	struct:__anon76
free_info	external/Tremor/backends.h	/^  void (*free_info) (vorbis_info_floor *);$/;"	m	struct:__anon73
free_look	external/Tremor/backends.h	/^  void (*free_look)    (vorbis_look_mapping *);$/;"	m	struct:__anon77
free_look	external/Tremor/backends.h	/^  void (*free_look)    (vorbis_look_residue *);$/;"	m	struct:__anon76
free_look	external/Tremor/backends.h	/^  void (*free_look) (vorbis_look_floor *);$/;"	m	struct:__anon73
frequency	external/libpng/png.h	/^   png_uint_16 frequency;$/;"	m	struct:png_sPLT_entry_struct
frequencyHz	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 frequencyHz;$/;"	m	struct:b2DistanceJointDef
frequencyHz	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 frequencyHz;$/;"	m	struct:b2MouseJointDef
friction	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 friction;$/;"	m	struct:b2ContactConstraint
friction	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	float32 friction;$/;"	m	struct:b2FixtureDef
fullbooks	external/Tremor/codec_internal.h	/^  codebook               *fullbooks;$/;"	m	struct:codec_setup_info
fullbooks	external/Tremor/res012.c	/^  codebook   *fullbooks;$/;"	m	struct:__anon72	file:
func	external/Chipmunk/src/cpSpace.c	/^	cpPostStepFunc func;$/;"	m	struct:postStepCallback	file:
func	external/Chipmunk/src/cpSpace.c	/^	cpSpaceBBQueryFunc func;$/;"	m	struct:bbQueryContext	file:
func	external/Chipmunk/src/cpSpace.c	/^	cpSpacePointQueryFunc func;$/;"	m	struct:pointQueryContext	file:
func	external/Chipmunk/src/cpSpace.c	/^	cpSpaceSegmentQueryFunc func;$/;"	m	struct:segQueryContext	file:
func	external/Chipmunk/src/cpSpaceHash.c	/^	cpSpaceHashIterator func;$/;"	m	struct:eachPair	file:
func	external/Chipmunk/src/cpSpaceHash.c	/^	cpSpaceHashQueryFunc func;$/;"	m	struct:queryRehashPair	file:
functioning	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly)  BOOL functioning;\/\/Is the sound engine functioning$/;"	v
g	cocos2d/ccTypes.h	/^	GLubyte	g;$/;"	m	struct:_ccColor3B
g	cocos2d/ccTypes.h	/^	float g;$/;"	m	struct:_ccColor4F
g	cocos2d/ccTypes.h	/^	unsigned char g;$/;"	m	struct:_ccColor4B
g	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	float32 r, g, b;$/;"	m	struct:b2Color
g_testEntries	external/Box2d/Testbed/Tests/TestEntries.cpp	/^TestEntry g_testEntries[] =$/;"	v
gain	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float gain;$/;"	v
generateAtlas	tools/mkatlas.pl	/^sub generateAtlas$/;"	s
get16bits	cocos2d/Support/uthash.h	424;"	d
get16bits	cocos2d/Support/uthash.h	427;"	d
get16bits	cocos2d/Support/uthash.h	431;"	d
getEmptyBin	external/Chipmunk/src/cpSpaceHash.c	/^getEmptyBin(cpSpaceHash *hash)$/;"	f	file:
getGainWorks	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly)  BOOL getGainWorks;\/\/Does getting the gain for a source work$/;"	v
getImpulse	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpConstraintGetImpulseFunction getImpulse;$/;"	m	struct:cpConstraintClass
getImpulse	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^getImpulse(cpConstraint *constraint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpDampedSpring.c	/^getImpulse(cpConstraint *constraint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpGearJoint.c	/^getImpulse(cpGearJoint *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^getImpulse(cpGrooveJoint *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpPinJoint.c	/^getImpulse(cpPinJoint *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpPivotJoint.c	/^getImpulse(cpConstraint *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^getImpulse(cpRatchetJoint *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^getImpulse(cpRotaryLimitJoint *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^getImpulse(cpSimpleMotor *joint)$/;"	f	file:
getImpulse	external/Chipmunk/src/constraints/cpSlideJoint.c	/^getImpulse(cpConstraint *joint)$/;"	f	file:
getUnusedBin	external/Chipmunk/src/cpHashSet.c	/^getUnusedBin(cpHashSet *set)$/;"	f	file:
getZEye	cocos2d/CCCamera.h	/^+(float) getZEye;$/;"	v
get_pixel	external/Chipmunk/Demo/LogoSmash.c	/^get_pixel(int x, int y)$/;"	f	file:
get_text_contents	tools/tmx-embeded-2-png.py	/^def get_text_contents(node, preserve_whitespace=False):$/;"	f
getopt	tools/spritesheet-artifact-fixer.py	/^import getopt$/;"	i
getopt	tools/tmx-embeded-2-png.py	/^import getopt$/;"	i
glColor_from_pointer	external/Chipmunk/Demo/drawSpace.c	/^glColor_from_pointer(void *ptr)$/;"	f	file:
glView	tests/EAGLViewTest/EAGLViewTest.h	/^@property (nonatomic, retain) EAGLView *glView;$/;"	v
globalScores	tests/cocosLive/cocosLiveDemo.h	/^@property (nonatomic, retain) NSMutableArray *globalScores;$/;"	v
gluLookAt	cocos2d/Support/glu.c	/^void gluLookAt(GLfloat eyex, GLfloat eyey, GLfloat eyez,$/;"	f
gluPerspective	cocos2d/Support/glu.c	/^void gluPerspective(GLfloat fovy, GLfloat aspect, GLfloat zNear, GLfloat zFar)$/;"	f
glui	external/Box2d/Testbed/Framework/Main.cpp	/^	GLUI *glui;$/;"	m	namespace:__anon70	file:
grabber	cocos2d/CCGrid.h	/^@property (nonatomic, retain) CCGrabber *grabber;$/;"	v
granulepos	external/Tremor/ivorbiscodec.h	/^  ogg_int64_t granulepos;$/;"	m	struct:vorbis_block
granulepos	external/Tremor/ivorbiscodec.h	/^  ogg_int64_t granulepos;$/;"	m	struct:vorbis_dsp_state
granulepos	external/Tremor/ogg.h	/^  ogg_int64_t    granulepos;$/;"	m	struct:__anon84
granulepos	external/Tremor/ogg.h	/^  ogg_int64_t    granulepos;$/;"	m	struct:ogg_stream_state
gravity	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) CGPoint gravity;$/;"	v
gravity	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpVect gravity;$/;"	m	struct:cpSpace
gray	external/libpng/png.h	/^   png_byte gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_8_struct
gray	external/libpng/png.h	/^   png_uint_16 gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_16_struct
green	external/libpng/png.h	/^   png_byte green;$/;"	m	struct:png_color_8_struct
green	external/libpng/png.h	/^   png_byte green;$/;"	m	struct:png_color_struct
green	external/libpng/png.h	/^   png_uint_16 green;$/;"	m	struct:png_color_16_struct
green	external/libpng/png.h	/^   png_uint_16 green;$/;"	m	struct:png_sPLT_entry_struct
grid	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,retain) CCGridBase* grid;$/;"	v
gridSize	cocos2d/CCGrid.h	/^@property (nonatomic,readonly) ccGridSize gridSize;$/;"	v
gridSize	cocos2d/CCGridAction.h	/^@property (nonatomic,readwrite) ccGridSize gridSize;$/;"	v
grooveConstrain	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^grooveConstrain(cpGrooveJoint *joint, cpVect j){$/;"	f	file:
groundAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 groundAnchorA;$/;"	m	struct:b2PulleyJointDef
groundAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 groundAnchorB;$/;"	m	struct:b2PulleyJointDef
groundNormal	external/Chipmunk/Demo/Player.c	/^	cpVect groundNormal;$/;"	m	struct:PlayerStruct	file:
groundShapes	external/Chipmunk/Demo/Player.c	/^	cpArray *groundShapes;$/;"	m	struct:PlayerStruct	file:
group	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpGroup group;$/;"	m	struct:cpShape
group	external/Chipmunk/src/cpSpace.c	/^	cpGroup group;$/;"	m	struct:bbQueryContext	file:
group	external/Chipmunk/src/cpSpace.c	/^	cpGroup group;$/;"	m	struct:pointQueryContext	file:
group	external/Chipmunk/src/cpSpace.c	/^	cpGroup group;$/;"	m	struct:segQueryContext	file:
group	external/Chipmunk/src/cpSpace.c	/^	cpGroup group;$/;"	m	struct:segQueryFirstContext	file:
groupIndex	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	int16 groupIndex;$/;"	m	struct:b2Filter
groupName	cocos2d/CCTMXObjectGroup.h	/^@property (nonatomic,readwrite,retain) NSString *groupName;$/;"	v
groupbook	external/Tremor/backends.h	/^  int    groupbook;        \/* huffbook for partitioning *\/$/;"	m	struct:vorbis_info_residue0
grouping	external/Tremor/backends.h	/^  int    grouping;         \/* group n vectors per partition *\/$/;"	m	struct:vorbis_info_residue0
grv_a	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect grv_n, grv_a, grv_b;$/;"	m	struct:cpGrooveJoint
grv_b	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect grv_n, grv_a, grv_b;$/;"	m	struct:cpGrooveJoint
grv_n	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect grv_n, grv_a, grv_b;$/;"	m	struct:cpGrooveJoint
grv_tn	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect grv_tn;$/;"	m	struct:cpGrooveJoint
gzip	tools/tmx-embeded-2-png.py	/^import gzip$/;"	i
halves	external/Tremor/misc.h	/^  } halves;$/;"	m	union:magic	typeref:struct:magic::__anon78
halves	external/Tremor/misc.h	/^  } halves;$/;"	m	union:magic	typeref:struct:magic::__anon79
handle	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpHandle *handle;$/;"	m	struct:cpSpaceHashBin
handleQueryRehashHelper	external/Chipmunk/src/cpSpaceHash.c	/^handleQueryRehashHelper(void *elt, void *data)$/;"	f	file:
handleRehashHelper	external/Chipmunk/src/cpSpaceHash.c	/^handleRehashHelper(void *elt, void *data)$/;"	f	file:
handleSet	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpHashSet *handleSet;$/;"	m	struct:cpSpaceHash
handleSetEql	external/Chipmunk/src/cpSpaceHash.c	/^handleSetEql(void *obj, void *elt)$/;"	f	file:
handleSetTrans	external/Chipmunk/src/cpSpaceHash.c	/^handleSetTrans(void *obj, cpSpaceHash *hash)$/;"	f	file:
handler	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	struct cpCollisionHandler *handler;$/;"	m	struct:cpArbiter	typeref:struct:cpArbiter::cpCollisionHandler
hasAlpha	cocos2d/CCPVRTexture.h	/^@property (nonatomic,readonly) BOOL hasAlpha;$/;"	v
hasPremultipliedAlpha	cocos2d/CCTexture2D.h	/^@property(nonatomic,readonly) BOOL hasPremultipliedAlpha;$/;"	v
hash	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpHashValue hash;$/;"	m	struct:cpContact
hash	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	cpHashValue hash;$/;"	m	struct:cpHashSetBin
hash	external/Chipmunk/src/cpSpaceHash.c	/^	cpSpaceHash *hash;$/;"	m	struct:queryRehashPair	file:
hashHandle	external/Chipmunk/src/cpSpaceHash.c	/^hashHandle(cpSpaceHash *hash, cpHandle *hand, cpBB bb)$/;"	f	file:
hash_func	external/Chipmunk/Demo/drawSpace.c	/^hash_func(cpHashValue x, cpHashValue y, cpHashValue n)$/;"	f	file:
hash_func	external/Chipmunk/src/cpSpaceHash.c	/^hash_func(cpHashValue x, cpHashValue y, cpHashValue n)$/;"	f	file:
hashid	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpHashValue hashid;$/;"	m	struct:cpShape
hashv	cocos2d/Support/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle
head	external/Tremor/ogg.h	/^  ogg_reference *head;$/;"	m	struct:oggpack_buffer
headbit	external/Tremor/ogg.h	/^  int            headbit;$/;"	m	struct:oggpack_buffer
headend	external/Tremor/ogg.h	/^  long           headend;$/;"	m	struct:oggpack_buffer
header	external/Chipmunk/src/cpSpace.c	/^	cpContactBufferHeader header;$/;"	m	struct:cpContactBuffer	file:
header	external/Tremor/ogg.h	/^  ogg_reference *header;$/;"	m	struct:__anon85
header_head	external/Tremor/ogg.h	/^  ogg_reference *header_head;$/;"	m	struct:ogg_stream_state
header_len	external/Tremor/ogg.h	/^  int            header_len;$/;"	m	struct:__anon85
header_tail	external/Tremor/ogg.h	/^  ogg_reference *header_tail;$/;"	m	struct:ogg_stream_state
headerbytes	external/Tremor/ogg.h	/^  int               headerbytes;$/;"	m	struct:ogg_sync_state
headptr	external/Tremor/ogg.h	/^  unsigned char *headptr;$/;"	m	struct:oggpack_buffer
height	cocos2d/CCPVRTexture.h	/^@property (nonatomic,readonly) uint32_t height;$/;"	v
height	cocos2d/Support/TGAlib.h	/^	short int height;$/;"	m	struct:sImageTGA
height	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 height = 480;$/;"	m	namespace:__anon70	file:
help	tools/spritesheet-artifact-fixer.py	/^def help():$/;"	f
help	tools/tmx-embeded-2-png.py	/^def help():$/;"	f
hh	cocos2d/CCActionManager.h	/^	UT_hash_handle	hh;$/;"	m	struct:_hashElement
hh_head	cocos2d/Support/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle
hh_next	cocos2d/Support/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_prev	cocos2d/Support/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hho	cocos2d/Support/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table
hi	external/Tremor/misc.h	/^    ogg_int32_t hi;$/;"	m	struct:magic::__anon78
hi	external/Tremor/misc.h	/^    ogg_int32_t hi;$/;"	m	struct:magic::__anon79
hineighbor	external/Tremor/floor1.c	/^  int hineighbor[VIF_POSIT];$/;"	m	struct:__anon71	file:
hitEffectGain	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) float hitEffectGain;$/;"	v
hitEffectSoundId	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) int hitEffectSoundId;$/;"	v
holeflag	external/Tremor/ogg.h	/^  int            holeflag;$/;"	m	struct:ogg_stream_state
honorParentTransform	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) ccHonorParentTransform honorParentTransform;$/;"	v
hour	external/libpng/png.h	/^   png_byte hour;    \/* hour of day, 0 - 23 *\/$/;"	m	struct:png_time_struct
hp	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) int hp;$/;"	v
hz	external/Box2d/Testbed/Framework/Test.h	/^	float32 hz;$/;"	m	struct:Settings
hz	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	float32 hz;$/;"	m	struct:Settings
i	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat i, i_inv;$/;"	m	struct:cpBody
iSum	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpFloat iSum;$/;"	m	struct:cpDampedRotarySpring
iSum	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat iSum;$/;"	m	struct:cpGearJoint
iSum	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat iSum;$/;"	m	struct:cpRatchetJoint
iSum	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpFloat iSum;$/;"	m	struct:cpRotaryLimitJoint
iSum	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^	cpFloat iSum;$/;"	m	struct:cpSimpleMotor
i_inv	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat i, i_inv;$/;"	m	struct:cpBody
icomp	external/Tremor/floor1.c	/^static int icomp(const void *a,const void *b){$/;"	f	file:
icount	external/Tremor/res012.c	/^static int icount(unsigned int v){$/;"	f	file:
id	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2ContactID id;			\/\/\/< uniquely identifies a contact point between two shapes$/;"	m	struct:b2ManifoldPoint
id	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2ContactID id;$/;"	m	struct:b2ClipVertex
ideal_chain_maxlen	cocos2d/Support/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table
ilog	external/Tremor/block.c	/^static int ilog(unsigned int v){$/;"	f	file:
ilog	external/Tremor/floor1.c	/^static int ilog(unsigned int v){$/;"	f	file:
ilog	external/Tremor/mapping0.c	/^static int ilog(unsigned int v){$/;"	f	file:
ilog	external/Tremor/res012.c	/^static int ilog(unsigned int v){$/;"	f	file:
imageData	cocos2d/Support/TGAlib.h	/^	unsigned char *imageData;$/;"	m	struct:sImageTGA
imageSize	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) CGSize imageSize;$/;"	v
image_bitmap	external/Chipmunk/Demo/LogoSmash.c	/^static const unsigned char image_bitmap[] = {$/;"	v	file:
image_height	external/Chipmunk/Demo/LogoSmash.c	/^static const int image_height = 35;$/;"	v	file:
image_row_length	external/Chipmunk/Demo/LogoSmash.c	/^static const int image_row_length = 24;$/;"	v	file:
image_width	external/Chipmunk/Demo/LogoSmash.c	/^static const int image_width = 188;$/;"	v	file:
imagesLoaded	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) BOOL imagesLoaded;$/;"	v
inLevel	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) BOOL inLevel;$/;"	v
incidentEdge	external/Box2d/Box2D/Collision/b2Collision.h	/^		uint8 incidentEdge;		\/\/\/< The edge most anti-parallel to the reference edge.$/;"	m	struct:b2ContactID::Features
incidentVertex	external/Box2d/Box2D/Collision/b2Collision.h	/^		uint8 incidentVertex;	\/\/\/< The vertex (0 or 1) on the incident edge that was clipped.$/;"	m	struct:b2ContactID::Features
index	external/FontLabel/ZAttributedStringPrivate.h	/^@property (nonatomic, readonly) NSUInteger index;$/;"	v
index	external/libpng/png.h	/^   png_byte index;    \/* used for palette files *\/$/;"	m	struct:png_color_16_struct
indexA	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	int32 indexA;	\/\/ wA index$/;"	m	struct:b2SimplexVertex	file:
indexA	external/Box2d/Box2D/Collision/b2Distance.h	/^	uint8 indexA[3];	\/\/\/< vertices on shape A$/;"	m	struct:b2SimplexCache
indexB	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	int32 indexB;	\/\/ wB index$/;"	m	struct:b2SimplexVertex	file:
indexB	external/Box2d/Box2D/Collision/b2Distance.h	/^	uint8 indexB[3];	\/\/\/< vertices on shape B$/;"	m	struct:b2SimplexCache
ineff_expands	cocos2d/Support/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
inertiaScale	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 inertiaScale;$/;"	m	struct:b2BodyDef
info	external/Tremor/res012.c	/^  vorbis_info_residue0 *info;$/;"	m	struct:__anon72	file:
init	external/Chipmunk/Demo/Bounce.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Joints.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/LogoSmash.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/MagnetsElectric.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/OneWay.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Planet.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Player.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Plink.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Pump.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/PyramidStack.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/PyramidTopple.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Query.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Sensors.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Simple.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Springies.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/TheoJansen.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/Tumble.c	/^init(void)$/;"	f	file:
init	external/Chipmunk/Demo/UnsafeOps.c	/^init(void)$/;"	f	file:
init	tools/mkatlas.pl	/^sub init()$/;"	s
initFunc	external/Chipmunk/Demo/ChipmunkDemo.h	/^	demoInitFunc initFunc;$/;"	m	struct:chipmunkDemo
initFunc	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^	demoInitFunc initFunc;$/;"	m	struct:chipmunkDemo
inname	external/libpng/pngtest.c	/^static PNG_CONST char *inname = "pngtest.png";$/;"	v	file:
inname	external/libpng/pngtest.c	/^static PNG_CONST char *inname = "pngtest\/png";$/;"	v	file:
input	external/libpng/pngwutil.c	/^   char *input;   \/* The uncompressed input data *\/$/;"	m	struct:__anon50	file:
input_len	external/libpng/pngwutil.c	/^   int input_len;   \/* Its length *\/$/;"	m	struct:__anon50	file:
insertImg	tools/mkatlas.pl	/^sub insertImg()$/;"	s
int16	external/Box2d/Box2D/Common/b2Settings.h	/^typedef signed short int16;$/;"	t
int32	external/Box2d/Box2D/Common/b2Settings.h	/^typedef signed int int32;$/;"	t
int8	external/Box2d/Box2D/Common/b2Settings.h	/^typedef signed char	int8;$/;"	t
int_p_NULL	external/libpng/png.h	556;"	d
int_p_NULL	external/libpng/png.h	572;"	d
internalFormat	cocos2d/CCPVRTexture.h	/^@property (nonatomic,readonly) GLenum internalFormat;$/;"	v
interpolationType	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) tCDInterpolationType interpolationType;$/;"	v
interval	cocos2d/CCScheduler.h	/^@property (nonatomic,readwrite,assign) ccTime interval;$/;"	v
inv_dt	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^	float32 inv_dt;		\/\/ inverse time step (0 if dt == 0).$/;"	m	struct:b2TimeStep
inverse	external/Tremor/backends.h	/^  int  (*inverse)      (struct vorbis_block *,vorbis_look_residue *,$/;"	m	struct:__anon76
inverse	external/Tremor/backends.h	/^  int  (*inverse)      (struct vorbis_block *vb,vorbis_look_mapping *);$/;"	m	struct:__anon77
inverse1	external/Tremor/backends.h	/^  void *(*inverse1)  (struct vorbis_block *,vorbis_look_floor *);$/;"	m	struct:__anon73
inverse2	external/Tremor/backends.h	/^  int   (*inverse2)  (struct vorbis_block *,vorbis_look_floor *,$/;"	m	struct:__anon73
isAccelerometerEnabled	cocos2d/CCLayer.h	/^@property(nonatomic,assign) BOOL isAccelerometerEnabled;$/;"	v
isAtEnd	external/TouchJSON/CDataScanner.h	/^@property (readonly, nonatomic, assign) BOOL isAtEnd;$/;"	v
isFinalLevel	CocosDenshion/TestsAndDemos/TomTheTurret/Level.h	/^@property (nonatomic, assign) BOOL isFinalLevel;$/;"	v
isGameOver	CocosDenshion/TestsAndDemos/TomTheTurret/Level.h	/^@property (nonatomic, assign) BOOL isGameOver;$/;"	v
isLoading	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) BOOL isLoading;$/;"	v
isPaused	cocos2d/CCDirector.h	/^@property (nonatomic,readonly) BOOL isPaused;$/;"	v
isPlaying	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly)  BOOL isPlaying;$/;"	v
isPlaying	experimental/sound-engine/PASoundSource.h	/^@property (readwrite, assign) BOOL isPlaying;$/;"	v
isRelativeAnchorPoint	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) BOOL isRelativeAnchorPoint;$/;"	v
isRunning	cocos2d/CCNode.h	/^@property(nonatomic,readonly) BOOL isRunning;$/;"	v
isSelected	cocos2d/CCMenuItem.h	/^@property (nonatomic,readonly) BOOL isSelected;$/;"	v
isSensor	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	bool isSensor;$/;"	m	struct:b2FixtureDef
isTextureFlipped	cocos2d/CCGrid.h	/^@property (nonatomic, readwrite) BOOL isTextureFlipped;$/;"	v
isTouchEnabled	cocos2d/CCLayer.h	/^@property(nonatomic,assign) BOOL isTouchEnabled;$/;"	v
isnonalpha	external/libpng/pngerror.c	148;"	d	file:
isnonalpha	external/libpng/pngrutil.c	2449;"	d	file:
iterations	external/Box2d/Box2D/Collision/b2Distance.h	/^	int32 iterations;	\/\/\/< number of GJK iterations used$/;"	m	struct:b2DistanceOutput
iterations	external/Chipmunk/include/chipmunk/cpSpace.h	/^	int iterations;$/;"	m	struct:cpSpace
itxt_length	external/libpng/png.h	/^   png_size_t itxt_length; \/* length of the itxt string *\/$/;"	m	struct:png_text_struct
jAcc	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpGearJoint
jAcc	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect jAcc;$/;"	m	struct:cpGrooveJoint
jAcc	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect jAcc;$/;"	m	struct:cpPivotJoint
jAcc	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpRatchetJoint
jAcc	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpRotaryLimitJoint
jAcc	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpSimpleMotor
jBias	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat jnAcc, jtAcc, jBias;$/;"	m	struct:cpContact
jMax	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpGearJoint
jMax	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpRatchetJoint
jMax	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpRotaryLimitJoint
jMax	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^	cpFloat jAcc, jMax;$/;"	m	struct:cpSimpleMotor
jMaxLen	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpFloat jMaxLen;$/;"	m	struct:cpGrooveJoint
jMaxLen	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpFloat jMaxLen;$/;"	m	struct:cpPivotJoint
jmpbuf	external/libpng/png.h	/^   jmp_buf jmpbuf;            \/* used in png_error *\/$/;"	m	struct:png_struct_def
jmpbuf	external/libpng/pngtest.c	108;"	d	file:
jnAcc	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpFloat jnAcc, jnMax;$/;"	m	struct:cpPinJoint
jnAcc	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpFloat jnAcc, jnMax;$/;"	m	struct:cpSlideJoint
jnAcc	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat jnAcc, jtAcc, jBias;$/;"	m	struct:cpContact
jnMax	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpFloat jnAcc, jnMax;$/;"	m	struct:cpPinJoint
jnMax	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpFloat jnAcc, jnMax;$/;"	m	struct:cpSlideJoint
joint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Joint* joint;			\/\/\/< the joint$/;"	m	struct:b2JointEdge
joint1	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Joint* joint1;$/;"	m	struct:b2GearJointDef
joint2	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Joint* joint2;$/;"	m	struct:b2GearJointDef
jtAcc	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat jnAcc, jtAcc, jBias;$/;"	m	struct:cpContact
k1	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect k1, k2;$/;"	m	struct:cpGrooveJoint
k1	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect k1, k2;$/;"	m	struct:cpPivotJoint
k2	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect k1, k2;$/;"	m	struct:cpGrooveJoint
k2	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect k1, k2;$/;"	m	struct:cpPivotJoint
kAMM_FxOnly	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMM_FxOnly,					\/\/!Other apps will be able to play audio$/;"	e	enum:__anon1
kAMM_FxPlusMusic	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMM_FxPlusMusic,				\/\/!Only this app will play audio$/;"	e	enum:__anon1
kAMM_FxPlusMusicIfNoOtherAudio	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMM_FxPlusMusicIfNoOtherAudio,	\/\/!If another app is playing audio at start up then allow it to continue and don't play music$/;"	e	enum:__anon1
kAMM_MediaPlayback	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMM_MediaPlayback,				\/\/!This app takes over audio e.g music player app$/;"	e	enum:__anon1
kAMM_PlayAndRecord	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMM_PlayAndRecord				\/\/!App takes over audio and has input and output$/;"	e	enum:__anon1
kAMRBDoNothing	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMRBDoNothing,			    \/\/Audio manager will not do anything on resign or becoming active$/;"	e	enum:__anon3
kAMRBStop	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMRBStop					\/\/Background music is stopped on resign but not resumed - maybe because you want to do this from within your game$/;"	e	enum:__anon3
kAMRBStopPlay	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMRBStopPlay,    			\/\/Background music is stopped on resign and resumed on become active$/;"	e	enum:__anon3
kAMStateInitialised	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMStateInitialised	   \/\/!Audio manager is initialised - safe to use$/;"	e	enum:__anon2
kAMStateInitialising	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMStateInitialising,  \/\/!Audio manager is in the process of initialising - do not use$/;"	e	enum:__anon2
kAMStateUninitialised	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kAMStateUninitialised, \/\/!Audio manager has not been initialised - do not use$/;"	e	enum:__anon2
kASC_Left	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kASC_Left = 0,$/;"	e	enum:__anon4
kASC_Right	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kASC_Right = 1$/;"	e	enum:__anon4
kAll	tests/cocosLive/cocosLiveDemo.h	/^	kAll = 0,$/;"	e	enum:__anon13
kAppStateAudioManagerInitialising	CocosDenshion/TestsAndDemos/DrumPad/DenshionDemo.h	/^	kAppStateAudioManagerInitialising,	\/\/Audio manager is being initialised$/;"	e	enum:__anon7
kAppStateReady	CocosDenshion/TestsAndDemos/DrumPad/DenshionDemo.h	/^	kAppStateReady						\/\/Everything is loaded$/;"	e	enum:__anon7
kAppStateSoundBuffersLoading	CocosDenshion/TestsAndDemos/DrumPad/DenshionDemo.h	/^	kAppStateSoundBuffersLoading,		\/\/Sound buffers are loading$/;"	e	enum:__anon7
kCCActionTagInvalid	cocos2d/CCAction.h	/^	kCCActionTagInvalid = -1,$/;"	e	enum:__anon44
kCCBitmapFontAtlasMaxChars	cocos2d/CCBitmapFontAtlas.h	/^	kCCBitmapFontAtlasMaxChars = 2048, \/\/256,$/;"	e	enum:__anon18
kCCDepthBuffer16	cocos2d/CCDirector.h	/^	kCCDepthBuffer16,$/;"	e	enum:__anon36
kCCDepthBuffer24	cocos2d/CCDirector.h	/^	kCCDepthBuffer24,$/;"	e	enum:__anon36
kCCDepthBufferNone	cocos2d/CCDirector.h	/^	kCCDepthBufferNone,$/;"	e	enum:__anon36
kCCDeviceOrientationLandscapeLeft	cocos2d/CCDirector.h	/^    kCCDeviceOrientationLandscapeLeft = UIDeviceOrientationLandscapeLeft,$/;"	e	enum:__anon39
kCCDeviceOrientationLandscapeRight	cocos2d/CCDirector.h	/^    kCCDeviceOrientationLandscapeRight = UIDeviceOrientationLandscapeRight,$/;"	e	enum:__anon39
kCCDeviceOrientationPortrait	cocos2d/CCDirector.h	/^	kCCDeviceOrientationPortrait = UIDeviceOrientationPortrait,	$/;"	e	enum:__anon39
kCCDeviceOrientationPortraitUpsideDown	cocos2d/CCDirector.h	/^    kCCDeviceOrientationPortraitUpsideDown = UIDeviceOrientationPortraitUpsideDown,$/;"	e	enum:__anon39
kCCDirectorProjection2D	cocos2d/CCDirector.h	/^	kCCDirectorProjection2D,$/;"	e	enum:__anon37
kCCDirectorProjection3D	cocos2d/CCDirector.h	/^	kCCDirectorProjection3D,$/;"	e	enum:__anon37
kCCDirectorProjectionCustom	cocos2d/CCDirector.h	/^	kCCDirectorProjectionCustom,$/;"	e	enum:__anon37
kCCDirectorProjectionDefault	cocos2d/CCDirector.h	/^	kCCDirectorProjectionDefault = kCCDirectorProjection3D,$/;"	e	enum:__anon37
kCCDirectorTypeDefault	cocos2d/CCDirector.h	/^	kCCDirectorTypeDefault = kCCDirectorTypeNSTimer,$/;"	e	enum:__anon38
kCCDirectorTypeDisplayLink	cocos2d/CCDirector.h	/^	kCCDirectorTypeDisplayLink,$/;"	e	enum:__anon38
kCCDirectorTypeMainLoop	cocos2d/CCDirector.h	/^	kCCDirectorTypeMainLoop,$/;"	e	enum:__anon38
kCCDirectorTypeNSTimer	cocos2d/CCDirector.h	/^	kCCDirectorTypeNSTimer,$/;"	e	enum:__anon38
kCCDirectorTypeThreadMainLoop	cocos2d/CCDirector.h	/^	kCCDirectorTypeThreadMainLoop,$/;"	e	enum:__anon38
kCCNodeTagInvalid	cocos2d/CCNode.h	/^	kCCNodeTagInvalid = -1,$/;"	e	enum:__anon29
kCCParticleDurationInfinity	cocos2d/CCParticleSystem.h	/^	kCCParticleDurationInfinity = -1,$/;"	e	enum:__anon22
kCCParticleModeGravity	cocos2d/CCParticleSystem.h	/^	kCCParticleModeGravity,$/;"	e	enum:__anon23
kCCParticleModeRadius	cocos2d/CCParticleSystem.h	/^	kCCParticleModeRadius,	$/;"	e	enum:__anon23
kCCParticleStartRadiusEqualToEndRadius	cocos2d/CCParticleSystem.h	/^	kCCParticleStartRadiusEqualToEndRadius = -1,$/;"	e	enum:__anon22
kCCParticleStartSizeEqualToEndSize	cocos2d/CCParticleSystem.h	/^	kCCParticleStartSizeEqualToEndSize = -1,$/;"	e	enum:__anon22
kCCPixelFormatDefault	cocos2d/CCDirector.h	/^	kCCPixelFormatDefault = kCCPixelFormatRGB565,$/;"	e	enum:__anon35
kCCPixelFormatRGB565	cocos2d/CCDirector.h	/^	kCCPixelFormatRGB565,$/;"	e	enum:__anon35
kCCPixelFormatRGBA8888	cocos2d/CCDirector.h	/^	kCCPixelFormatRGBA8888,$/;"	e	enum:__anon35
kCCPositionTypeFree	cocos2d/CCParticleSystem.h	/^	kCCPositionTypeFree,$/;"	e	enum:__anon24
kCCPositionTypeGrouped	cocos2d/CCParticleSystem.h	/^	kCCPositionTypeGrouped,$/;"	e	enum:__anon24
kCCProgressTimerTypeHorizontalBarLR	cocos2d/CCProgressTimer.h	/^	kCCProgressTimerTypeHorizontalBarLR,$/;"	e	enum:__anon41
kCCProgressTimerTypeHorizontalBarRL	cocos2d/CCProgressTimer.h	/^	kCCProgressTimerTypeHorizontalBarRL,$/;"	e	enum:__anon41
kCCProgressTimerTypeRadialCCW	cocos2d/CCProgressTimer.h	/^	kCCProgressTimerTypeRadialCCW,$/;"	e	enum:__anon41
kCCProgressTimerTypeRadialCW	cocos2d/CCProgressTimer.h	/^	kCCProgressTimerTypeRadialCW,$/;"	e	enum:__anon41
kCCProgressTimerTypeVerticalBarBT	cocos2d/CCProgressTimer.h	/^	kCCProgressTimerTypeVerticalBarBT,$/;"	e	enum:__anon41
kCCProgressTimerTypeVerticalBarTB	cocos2d/CCProgressTimer.h	/^	kCCProgressTimerTypeVerticalBarTB,$/;"	e	enum:__anon41
kCCTexture2DPixelFormat_A8	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_A8,$/;"	e	enum:__anon45
kCCTexture2DPixelFormat_Automatic	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_Automatic = 0,$/;"	e	enum:__anon45
kCCTexture2DPixelFormat_Default	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_Default = kCCTexture2DPixelFormat_RGBA8888,$/;"	e	enum:__anon45
kCCTexture2DPixelFormat_RGB565	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_RGB565,$/;"	e	enum:__anon45
kCCTexture2DPixelFormat_RGB5A1	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_RGB5A1,	$/;"	e	enum:__anon45
kCCTexture2DPixelFormat_RGBA4444	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_RGBA4444,$/;"	e	enum:__anon45
kCCTexture2DPixelFormat_RGBA8888	cocos2d/CCTexture2D.h	/^	kCCTexture2DPixelFormat_RGBA8888,$/;"	e	enum:__anon45
kCDNoBuffer	CocosDenshion/CocosDenshion/CDAudioManager.h	/^static const int kCDNoBuffer = -1;$/;"	v
kCategoryEasy	tests/cocosLive/cocosLiveDemo.h	/^	kCategoryEasy = 0,$/;"	e	enum:__anon12
kCategoryHard	tests/cocosLive/cocosLiveDemo.h	/^	kCategoryHard = 2,$/;"	e	enum:__anon12
kCategoryMedium	tests/cocosLive/cocosLiveDemo.h	/^	kCategoryMedium = 1,$/;"	e	enum:__anon12
kCountry	tests/cocosLive/cocosLiveDemo.h	/^	kCountry = 1,$/;"	e	enum:__anon13
kDepthBuffer16	cocos2d/CCDirector.h	/^	kDepthBuffer16 = kCCDepthBuffer16,$/;"	e	enum:__anon36
kDepthBuffer24	cocos2d/CCDirector.h	/^	kDepthBuffer24 = kCCDepthBuffer24,$/;"	e	enum:__anon36
kDevice	tests/cocosLive/cocosLiveDemo.h	/^	kDevice = 2,$/;"	e	enum:__anon13
kGSAudioManagerInitialised	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^	kGSAudioManagerInitialised,$/;"	e	enum:__anon8
kGSAudioManagerInitialising	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^	kGSAudioManagerInitialising,  $/;"	e	enum:__anon8
kGSFailed	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^	kGSFailed$/;"	e	enum:__anon8
kGSLoadingSounds	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^	kGSLoadingSounds,$/;"	e	enum:__anon8
kGSOkay	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^	kGSOkay,\/\/only use when in this state$/;"	e	enum:__anon8
kGSUninitialised	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^	kGSUninitialised, $/;"	e	enum:__anon8
kIT_Exponential	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	kIT_Exponential 	\/\/!Exponential interpolation$/;"	e	enum:__anon6
kIT_Linear	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	kIT_Linear,			\/\/!Straight linear interpolation fade$/;"	e	enum:__anon6
kIT_SCurve	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	kIT_SCurve,			\/\/!S curved interpolation$/;"	e	enum:__anon6
kImageFormatJPG	cocos2d/CCRenderTexture.h	/^	kImageFormatJPG = 0,$/;"	e	enum:__anon32
kImageFormatPNG	cocos2d/CCRenderTexture.h	/^	kImageFormatPNG = 1$/;"	e	enum:__anon32
kItemSize	cocos2d/CCMenuItem.h	35;"	d
kLAS_Init	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kLAS_Init,$/;"	e	enum:__anon5
kLAS_Loaded	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kLAS_Loaded,$/;"	e	enum:__anon5
kLAS_Paused	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kLAS_Paused,$/;"	e	enum:__anon5
kLAS_Playing	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kLAS_Playing,$/;"	e	enum:__anon5
kLAS_Stopped	CocosDenshion/CocosDenshion/CDAudioManager.h	/^	kLAS_Stopped,$/;"	e	enum:__anon5
kMaxNodes	tests/PerformanceTests/PerformanceNodeChildrenTest/PerformanceNodeChildrenTest.h	/^	kMaxNodes = 15000,$/;"	e	enum:__anon11
kMaxParticles	tests/PerformanceTests/PerformanceParticleTest/MainScene.h	/^	kMaxParticles = 9000,$/;"	e	enum:__anon10
kMenuStateTrackingTouch	cocos2d/CCMenu.h	/^	kMenuStateTrackingTouch$/;"	e	enum:__anon19
kMenuStateWaiting	cocos2d/CCMenu.h	/^	kMenuStateWaiting,$/;"	e	enum:__anon19
kNodesIncrease	tests/PerformanceTests/PerformanceNodeChildrenTest/PerformanceNodeChildrenTest.h	/^	kNodesIncrease = 500,$/;"	e	enum:__anon11
kNodesIncrease	tests/PerformanceTests/PerformanceParticleTest/MainScene.h	/^	kNodesIncrease = 100,$/;"	e	enum:__anon10
kOrientationDownOver	cocos2d/CCTransition.h	/^	kOrientationDownOver = 1,$/;"	e	enum:__anon34
kOrientationLeftOver	cocos2d/CCTransition.h	/^	kOrientationLeftOver = 0,$/;"	e	enum:__anon34
kOrientationRightOver	cocos2d/CCTransition.h	/^	kOrientationRightOver = 1,$/;"	e	enum:__anon34
kOrientationUpOver	cocos2d/CCTransition.h	/^	kOrientationUpOver = 0,$/;"	e	enum:__anon34
kPaddleStateGrabbed	tests/TouchesTest/Paddle.h	/^	kPaddleStateGrabbed,$/;"	e	enum:tagPaddleState
kPaddleStateUngrabbed	tests/TouchesTest/Paddle.h	/^	kPaddleStateUngrabbed$/;"	e	enum:tagPaddleState
kParticleDurationInfinity	cocos2d/CCParticleSystem.h	/^	kParticleDurationInfinity = kCCParticleDurationInfinity,$/;"	e	enum:__anon22
kParticleStartSizeEqualToEndSize	cocos2d/CCParticleSystem.h	/^	kParticleStartSizeEqualToEndSize = kCCParticleStartSizeEqualToEndSize,$/;"	e	enum:__anon22
kPixelFormatRGB565	cocos2d/CCDirector.h	/^	kPixelFormatRGB565 = kCCPixelFormatRGB565,$/;"	e	enum:__anon35
kPixelFormatRGBA8888	cocos2d/CCDirector.h	/^	kPixelFormatRGBA8888 = kCCPixelFormatRGBA8888,$/;"	e	enum:__anon35
kPositionTypeFree	cocos2d/CCParticleSystem.h	/^	kPositionTypeFree = kCCPositionTypeFree,$/;"	e	enum:__anon25
kPositionTypeGrouped	cocos2d/CCParticleSystem.h	/^	kPositionTypeGrouped = kCCPositionTypeGrouped,$/;"	e	enum:__anon25
kPostStatusConnectionFailed	cocoslive/CLScoreServerPost.h	/^	kPostStatusConnectionFailed = 1,$/;"	e	enum:__anon14
kPostStatusOK	cocoslive/CLScoreServerPost.h	/^	kPostStatusOK = 0,$/;"	e	enum:__anon14
kPostStatusPostFailed	cocoslive/CLScoreServerPost.h	/^	kPostStatusPostFailed = 2,$/;"	e	enum:__anon14
kQueryAllTime	cocoslive/CLScoreServerRequest.h	/^	kQueryAllTime = 4,$/;"	e	enum:__anon16
kQueryDay	cocoslive/CLScoreServerRequest.h	/^	kQueryDay = 1,$/;"	e	enum:__anon16
kQueryFlagByCountry	cocoslive/CLScoreServerRequest.h	/^	kQueryFlagByCountry = 1 << 0,$/;"	e	enum:__anon17
kQueryFlagByDevice	cocoslive/CLScoreServerRequest.h	/^	kQueryFlagByDevice = 1 << 1,$/;"	e	enum:__anon17
kQueryFlagIgnore	cocoslive/CLScoreServerRequest.h	/^	kQueryFlagIgnore = 0,$/;"	e	enum:__anon17
kQueryIgnore	cocoslive/CLScoreServerRequest.h	/^	kQueryIgnore = 0,$/;"	e	enum:__anon16
kQueryMonth	cocoslive/CLScoreServerRequest.h	/^	kQueryMonth = 3,$/;"	e	enum:__anon16
kQueryWeek	cocoslive/CLScoreServerRequest.h	/^	kQueryWeek = 2,$/;"	e	enum:__anon16
kRGB565	cocos2d/CCDirector.h	/^	kRGB565 = kCCPixelFormatRGB565,$/;"	e	enum:__anon35
kRGBA8	cocos2d/CCDirector.h	/^	kRGBA8 = kCCPixelFormatRGBA8888,$/;"	e	enum:__anon35
kServerPostInvalidRanking	cocoslive/CLScoreServerPost.h	/^	kServerPostInvalidRanking = 0,$/;"	e	enum:__anon15
kTexture2DPixelFormat_A8	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_A8 = kCCTexture2DPixelFormat_A8,$/;"	e	enum:__anon45
kTexture2DPixelFormat_Automatic	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_Automatic = kCCTexture2DPixelFormat_Automatic,$/;"	e	enum:__anon45
kTexture2DPixelFormat_Default	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_Default = kCCTexture2DPixelFormat_Default$/;"	e	enum:__anon45
kTexture2DPixelFormat_RGB565	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_RGB565 = kCCTexture2DPixelFormat_RGB565,$/;"	e	enum:__anon45
kTexture2DPixelFormat_RGB5A1	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_RGB5A1 = kCCTexture2DPixelFormat_RGB5A1,$/;"	e	enum:__anon45
kTexture2DPixelFormat_RGBA4444	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_RGBA4444 = kCCTexture2DPixelFormat_RGBA4444,$/;"	e	enum:__anon45
kTexture2DPixelFormat_RGBA8888	cocos2d/CCTexture2D.h	/^	kTexture2DPixelFormat_RGBA8888 = kCCTexture2DPixelFormat_RGBA8888,$/;"	e	enum:__anon45
k_boxCategory	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_boxCategory = 0x0004;$/;"	v
k_boxMask	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_boxMask = 0xFFFF ^ k_triangleCategory;$/;"	v
k_circleCategory	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_circleCategory = 0x0008;$/;"	v
k_circleMask	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_circleMask = 0xFFFF;$/;"	v
k_defaultCategory	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_defaultCategory = 0x0001;$/;"	v
k_largeGroup	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const int16 k_largeGroup = -1;$/;"	v
k_maxBodies	external/Box2d/Testbed/Tests/PolyShapes.h	/^const int32 k_maxBodies = 256;$/;"	v
k_maxContactPoints	external/Box2d/Testbed/Framework/Test.h	/^const int32 k_maxContactPoints = 2048;$/;"	v
k_maxContactPoints	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^const int32 k_maxContactPoints = 2048;$/;"	v
k_scalar	external/Chipmunk/include/chipmunk/constraints/util.h	/^k_scalar(cpBody *a, cpBody *b, cpVect r1, cpVect r2, cpVect n)$/;"	f
k_smallGroup	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const int16	k_smallGroup = 1;$/;"	v
k_tensor	external/Chipmunk/include/chipmunk/constraints/util.h	/^k_tensor(cpBody *a, cpBody *b, cpVect r1, cpVect r2, cpVect *k1, cpVect *k2)$/;"	f
k_triangleCategory	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_triangleCategory = 0x0002;$/;"	v
k_triangleMask	external/Box2d/Testbed/Tests/CollisionFiltering.h	/^const uint16 k_triangleMask = 0xFFFF;$/;"	v
key	cocos2d/Support/uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle
key	external/Box2d/Box2D/Collision/b2Collision.h	/^	uint32 key;					\/\/\/< Used to quickly compare contact ids.$/;"	m	union:b2ContactID
key	external/libpng/png.h	/^   png_charp key;          \/* keyword, 1-79 character description of "text" *\/$/;"	m	struct:png_text_struct
keylen	cocos2d/Support/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle
killEnding	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^@property (nonatomic, retain) Level *killEnding;$/;"	v
klass	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	const cpConstraintClass *klass;$/;"	m	struct:cpConstraint
klass	external/Chipmunk/include/chipmunk/cpShape.h	/^	const cpShapeClass *klass;$/;"	m	struct:cpShape
klass	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpDampedSpring.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpGearJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpPinJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpPivotJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^static const cpConstraintClass klass = {$/;"	v	file:
klass	external/Chipmunk/src/constraints/cpSlideJoint.c	/^static const cpConstraintClass klass = {$/;"	v	file:
l	external/Chipmunk/include/chipmunk/cpBB.h	/^	cpFloat l, b, r ,t;$/;"	m	struct:cpBB
lW	external/Tremor/ivorbiscodec.h	/^  long  lW;$/;"	m	struct:vorbis_block
lW	external/Tremor/ivorbiscodec.h	/^  long lW;$/;"	m	struct:vorbis_dsp_state
label	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) CCLabel *label;$/;"	v
label	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite,retain) CCNode<CCLabelProtocol, CCRGBAProtocol>* label;$/;"	v
laceptr	external/Tremor/ogg.h	/^  int            laceptr;$/;"	m	struct:ogg_stream_state
lacing_fill	external/Tremor/ogg.h	/^  int            lacing_fill;$/;"	m	struct:ogg_stream_state
lang	external/libpng/png.h	/^   png_charp lang;         \/* language code, 0-79 characters$/;"	m	struct:png_text_struct
lang_key	external/libpng/png.h	/^   png_charp lang_key;     \/* keyword translated UTF-8 string, 0 or more$/;"	m	struct:png_text_struct
lastError	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly) ALenum lastError;$/;"	v
lastErrorCode	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly)  ALenum lastErrorCode;\/\/Last OpenAL error code that was generated$/;"	v
lastTimeMonsterAdded	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) double lastTimeMonsterAdded;$/;"	v
lastframe	external/Tremor/mapping0.c	/^  long lastframe; \/* if a different mode is called, we need to $/;"	m	struct:__anon82	file:
lastp	external/Box2d/Testbed/Framework/Main.cpp	/^	b2Vec2 lastp;$/;"	m	namespace:__anon70	file:
layer	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) ActionLayer *layer;$/;"	v
layer	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/MainMenuScene.h	/^@property (nonatomic, assign) MainMenuLayer *layer;$/;"	v
layer	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) StoryLayer *layer;$/;"	v
layerName	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite,retain) NSString *layerName;$/;"	v
layerOrientation	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite) int layerOrientation;$/;"	v
layerSize	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite) CGSize layerSize;$/;"	v
layerSize	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			CGSize layerSize;$/;"	v
layers	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *layers;$/;"	v
layers	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpLayers layers;$/;"	m	struct:cpShape
layers	external/Chipmunk/src/cpSpace.c	/^	cpLayers layers;$/;"	m	struct:bbQueryContext	file:
layers	external/Chipmunk/src/cpSpace.c	/^	cpLayers layers;$/;"	m	struct:pointQueryContext	file:
layers	external/Chipmunk/src/cpSpace.c	/^	cpLayers layers;$/;"	m	struct:segQueryContext	file:
layers	external/Chipmunk/src/cpSpace.c	/^	cpLayers layers;$/;"	m	struct:segQueryFirstContext	file:
leading	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFloat leading;$/;"	v
left	cocos2d/CCBitmapFontAtlas.h	/^	int	left;$/;"	m	struct:_bitmapFontPadding
left	external/libpng/pngrtran.c	/^   png_byte left;$/;"	m	struct:png_dsort_struct	file:
length	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 length;$/;"	m	struct:b2DistanceJointDef
length	external/FontLabel/ZAttributedString.h	/^@property (nonatomic, readonly) NSUInteger length;$/;"	v
length	external/Tremor/ogg.h	/^  long           length;$/;"	m	struct:ogg_reference
lengthA	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 lengthA;$/;"	m	struct:b2PulleyJointDef
lengthB	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 lengthB;$/;"	m	struct:b2PulleyJointDef
lengthlist	external/Tremor/codebook.h	/^  long  *lengthlist;     \/* codeword lengths in bits *\/$/;"	m	struct:static_codebook
lensEffect	cocos2d/CCGrid3DAction.h	/^@property (nonatomic,readwrite) float lensEffect;$/;"	v
levelBegin	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) double levelBegin;$/;"	v
level_bkgrnd	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) CCSprite *level_bkgrnd;$/;"	v
levels	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^@property (nonatomic, retain) NSMutableArray *levels;$/;"	v
life	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float life;$/;"	v
lifeVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float lifeVar;$/;"	v
lineThickness	external/Chipmunk/Demo/drawSpace.h	/^	float lineThickness;$/;"	m	struct:drawSpaceOptions
linearA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Vec2 linearA;$/;"	m	struct:b2Jacobian
linearB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Vec2 linearB;$/;"	m	struct:b2Jacobian
linearDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 linearDamping;$/;"	m	struct:b2BodyDef
linearVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Vec2 linearVelocity;$/;"	m	struct:b2BodyDef
linearmap	external/Tremor/floor0.c	/^  int *linearmap;$/;"	m	struct:__anon86	file:
links	external/Tremor/ivorbisfile.h	/^  int              links;$/;"	m	struct:OggVorbis_File
listener	experimental/sound-engine/PASoundMgr.h	/^@property (readwrite, retain) PASoundListener *listener;$/;"	v
ln	external/Tremor/floor0.c	/^  int ln;$/;"	m	struct:__anon86	file:
lo	external/Tremor/misc.h	/^    ogg_int32_t lo;$/;"	m	struct:magic::__anon78
lo	external/Tremor/misc.h	/^    ogg_int32_t lo;$/;"	m	struct:magic::__anon79
load_map	tools/tmx-embeded-2-png.py	/^def load_map(filename):$/;"	f
load_tile	tools/tmx-embeded-2-png.py	/^def load_tile( node, name ):$/;"	f
load_tilesets	tools/tmx-embeded-2-png.py	/^def load_tilesets(map_node):$/;"	f
loading	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSprite *loading;$/;"	v
loadingBundle	cocos2d/CCConfiguration.h	/^@property (nonatomic, readwrite, assign) NSBundle* loadingBundle;$/;"	v
loadingScene	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	/^@property (nonatomic, retain) LoadingScene *loadingScene;$/;"	v
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2DistanceJointDef
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2FrictionJointDef
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2LineJointDef
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2PrismaticJointDef
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2PulleyJointDef
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2RevoluteJointDef
localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2Vec2 localAnchorA;$/;"	m	struct:b2WeldJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2DistanceJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2FrictionJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2LineJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2PrismaticJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2PulleyJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2RevoluteJointDef
localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2Vec2 localAnchorB;$/;"	m	struct:b2WeldJointDef
localAxis1	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 localAxis1;$/;"	m	struct:b2PrismaticJointDef
localAxisA	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 localAxisA;$/;"	m	struct:b2LineJointDef
localCenter	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 localCenter;	\/\/\/< local center of mass position$/;"	m	struct:b2Sweep
localNormal	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 localNormal;								\/\/\/< not use for Type::e_points$/;"	m	struct:b2Manifold
localNormal	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Vec2 localNormal;$/;"	m	struct:b2ContactConstraint
localNormal	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Vec2 localNormal;$/;"	m	struct:b2TOIConstraint	file:
localPoint	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 localPoint;								\/\/\/< usage depends on manifold type$/;"	m	struct:b2Manifold
localPoint	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 localPoint;		\/\/\/< usage depends on manifold type$/;"	m	struct:b2ManifoldPoint
localPoint	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Vec2 localPoint;$/;"	m	struct:b2ContactConstraint
localPoint	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Vec2 localPoint;$/;"	m	struct:b2ContactConstraintPoint
localPoint	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Vec2 localPoint;$/;"	m	struct:b2TOIConstraint	file:
localPoints	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Vec2 localPoints[b2_maxManifoldPoints];$/;"	m	struct:b2TOIConstraint	file:
localalloc	external/Tremor/ivorbiscodec.h	/^  long                localalloc;$/;"	m	struct:vorbis_block
localstore	external/Tremor/ivorbiscodec.h	/^  void               *localstore;$/;"	m	struct:vorbis_block
localtop	external/Tremor/ivorbiscodec.h	/^  long                localtop;$/;"	m	struct:vorbis_block
location	external/libpng/png.h	/^    png_byte location; \/* mode of operation at read time *\/$/;"	m	struct:png_unknown_chunk_t
locked	external/Chipmunk/include/chipmunk/cpSpace.h	/^	int locked;$/;"	m	struct:cpSpace
log2_num_buckets	cocos2d/Support/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
loneighbor	external/Tremor/floor1.c	/^  int loneighbor[VIF_POSIT];$/;"	m	struct:__anon71	file:
look	external/Tremor/backends.h	/^  vorbis_look_floor     *(*look)  (vorbis_dsp_state *,vorbis_info_mode *,$/;"	m	struct:__anon73
look	external/Tremor/backends.h	/^  vorbis_look_mapping *(*look)  (vorbis_dsp_state *,vorbis_info_mode *,$/;"	m	struct:__anon77
look	external/Tremor/backends.h	/^  vorbis_look_residue *(*look)  (vorbis_dsp_state *,vorbis_info_mode *,$/;"	m	struct:__anon76
looped	experimental/sound-engine/PASoundSource.h	/^@property (readwrite, assign) BOOL looped;$/;"	v
looping	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) BOOL looping;$/;"	v
loseEnding	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^@property (nonatomic, retain) Level *loseEnding;$/;"	v
lowerAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 lowerAngle;$/;"	m	struct:b2RevoluteJointDef
lowerBound	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 lowerBound;	\/\/\/< the lower vertex$/;"	m	struct:b2AABB
lowerTranslation	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 lowerTranslation;$/;"	m	struct:b2LineJointDef
lowerTranslation	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 lowerTranslation;$/;"	m	struct:b2PrismaticJointDef
lsp_look	external/Tremor/floor0.c	/^  ogg_int32_t *lsp_look;$/;"	m	struct:__anon86	file:
lsp_loop_asm	external/Tremor/asm_arm.h	/^static inline void lsp_loop_asm(ogg_uint32_t *qip,ogg_uint32_t *pip,$/;"	f
lsp_norm_asm	external/Tremor/asm_arm.h	/^static inline void lsp_norm_asm(ogg_uint32_t *qip,ogg_int32_t *qexpp){$/;"	f
m	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat m, m_inv;$/;"	m	struct:cpBody
m	external/Tremor/floor0.c	/^  int  m;$/;"	m	struct:__anon86	file:
mRatio	templates/cocos2d_box2d_app/Classes/GLES-Render.h	/^	float32 mRatio;$/;"	m	class:GLESDebugDraw
mRatio	tests/Box2DTestBed-Cocos2dIntegration/GLES-Render.h	/^	float32 mRatio;$/;"	m	class:GLESDebugDraw
m_C	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2Vec2 m_C;				\/\/ position error$/;"	m	class:b2MouseJoint
m_I	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_I, m_invI;$/;"	m	class:b2Body
m_J	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Jacobian m_J;$/;"	m	class:b2GearJoint
m_K	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Mat22 m_K;$/;"	m	class:b2LineJoint
m_K	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Mat33 m_K;$/;"	m	class:b2PrismaticJoint
m_a1	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_a1, m_a2;$/;"	m	class:b2LineJoint
m_a1	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_a1, m_a2;$/;"	m	class:b2PrismaticJoint
m_a2	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_a1, m_a2;$/;"	m	class:b2LineJoint
m_a2	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_a1, m_a2;$/;"	m	class:b2PrismaticJoint
m_aabb	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2AABB m_aabb;$/;"	m	class:b2Fixture
m_actors	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	Actor m_actors[e_actorCount];$/;"	m	class:DynamicTreeTest
m_allocation	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	int32 m_allocation;$/;"	m	class:b2StackAllocator
m_allocator	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2StackAllocator* m_allocator;$/;"	m	class:b2ContactSolver
m_allocator	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.h	/^	b2StackAllocator* m_allocator;$/;"	m	class:b2TOISolver
m_allocator	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^	b2BlockAllocator* m_allocator;$/;"	m	class:b2ContactManager
m_allocator	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2StackAllocator* m_allocator;$/;"	m	class:b2Island
m_allowSleep	external/Box2d/Box2D/Dynamics/b2World.h	/^	bool m_allowSleep;$/;"	m	class:b2World
m_angle	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	float32 m_angle;$/;"	m	class:EdgeShapes
m_angle	external/Box2d/Testbed/Tests/RayCast.h	/^	float32 m_angle;$/;"	m	class:RayCast
m_angleB	external/Box2d/Testbed/Tests/DistanceTest.h	/^	float32 m_angleB;$/;"	m	class:DistanceTest
m_angleB	external/Box2d/Testbed/Tests/PolyCollision.h	/^	float32 m_angleB;$/;"	m	class:PolyCollision
m_angularDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_angularDamping;$/;"	m	class:b2Body
m_angularImpulse	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	float32 m_angularImpulse;$/;"	m	class:b2FrictionJoint
m_angularMass	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	float32 m_angularMass;$/;"	m	class:b2FrictionJoint
m_angularVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_angularVelocity;$/;"	m	class:b2Body
m_angularVelocity	external/Box2d/Testbed/Tests/Breakable.h	/^	float32 m_angularVelocity;$/;"	m	class:Breakable
m_angularVelocity	external/Box2d/Testbed/Tests/ContinuousTest.h	/^	float32 m_angularVelocity;$/;"	m	class:ContinuousTest
m_attachment	external/Box2d/Testbed/Tests/BodyTypes.h	/^	b2Body* m_attachment;$/;"	m	class:BodyTypes
m_automated	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	bool m_automated;$/;"	m	class:DynamicTreeTest
m_axis	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	b2Vec2 m_axis;$/;"	m	struct:b2SeparationFunction	file:
m_axis	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_axis, m_perp;$/;"	m	class:b2LineJoint
m_axis	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 m_axis, m_perp;$/;"	m	class:b2PrismaticJoint
m_beta	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 m_beta;$/;"	m	class:b2MouseJoint
m_bias	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_bias;$/;"	m	class:b2DistanceJoint
m_blockAllocator	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2BlockAllocator m_blockAllocator;$/;"	m	class:b2World
m_bodies	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Body** m_bodies;$/;"	m	class:b2Island
m_bodies	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	b2Body* m_bodies[e_maxBodies];$/;"	m	class:EdgeShapes
m_bodies	external/Box2d/Testbed/Tests/PolyShapes.h	/^	b2Body* m_bodies[k_maxBodies];$/;"	m	class:PolyShapes
m_bodies	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Body* m_bodies[e_maxBodies];$/;"	m	class:RayCast
m_bodies	external/Box2d/Testbed/Tests/SensorTest.h	/^	b2Body* m_bodies[e_count];$/;"	m	class:SensorTest
m_bodies	external/Box2d/Testbed/Tests/SphereStack.h	/^	b2Body* m_bodies[e_count];$/;"	m	class:SphereStack
m_bodies	external/Box2d/Testbed/Tests/VerticalStack.h	/^	b2Body* m_bodies[e_rowCount * e_columnCount];$/;"	m	class:VerticalStack
m_bodies	external/Box2d/Testbed/Tests/Web.h	/^	b2Body* m_bodies[4];$/;"	m	class:Web
m_body	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2Body* m_body;$/;"	m	class:b2Fixture
m_body	external/Box2d/Testbed/Tests/ApplyForce.h	/^	b2Body* m_body;$/;"	m	class:ApplyForce
m_body	external/Box2d/Testbed/Tests/ContinuousTest.h	/^	b2Body* m_body;$/;"	m	class:ContinuousTest
m_body	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	b2Body* m_body;$/;"	m	class:ShapeEditing
m_body1	external/Box2d/Testbed/Tests/Breakable.h	/^	b2Body* m_body1;$/;"	m	class:Breakable
m_bodyA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Body* m_bodyA;$/;"	m	class:b2Joint
m_bodyB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Body* m_bodyB;$/;"	m	class:b2Joint
m_bodyCapacity	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_bodyCapacity;$/;"	m	class:b2Island
m_bodyCount	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_bodyCount;$/;"	m	class:b2Island
m_bodyCount	external/Box2d/Box2D/Dynamics/b2World.h	/^	int32 m_bodyCount;$/;"	m	class:b2World
m_bodyIndex	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	int32 m_bodyIndex;$/;"	m	class:EdgeShapes
m_bodyIndex	external/Box2d/Testbed/Tests/PolyShapes.h	/^	int32 m_bodyIndex;$/;"	m	class:PolyShapes
m_bodyIndex	external/Box2d/Testbed/Tests/RayCast.h	/^	int32 m_bodyIndex;$/;"	m	class:RayCast
m_bodyList	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2Body* m_bodyList;$/;"	m	class:b2World
m_bomb	external/Box2d/Testbed/Framework/Test.h	/^	b2Body* m_bomb;$/;"	m	class:Test
m_bomb	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2Body* m_bomb;$/;"	m	class:Test
m_bombSpawnPoint	external/Box2d/Testbed/Framework/Test.h	/^	b2Vec2 m_bombSpawnPoint;$/;"	m	class:Test
m_bombSpawnPoint	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2Vec2 m_bombSpawnPoint;$/;"	m	class:Test
m_bombSpawning	external/Box2d/Testbed/Framework/Test.h	/^	bool m_bombSpawning;$/;"	m	class:Test
m_bombSpawning	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		bool m_bombSpawning;$/;"	m	class:Test
m_bottom	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	float32 m_radius, m_top, m_bottom;$/;"	m	class:OneSidedPlatform
m_break	external/Box2d/Testbed/Tests/Breakable.h	/^	bool m_break;$/;"	m	class:Breakable
m_broadPhase	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^	b2BroadPhase m_broadPhase;$/;"	m	class:b2ContactManager
m_broke	external/Box2d/Testbed/Tests/Breakable.h	/^	bool m_broke;$/;"	m	class:Breakable
m_bullet	external/Box2d/Testbed/Tests/VerticalStack.h	/^	b2Body* m_bullet;$/;"	m	class:VerticalStack
m_centroid	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^	b2Vec2 m_centroid;$/;"	m	class:b2PolygonShape
m_character	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	b2Fixture* m_character;$/;"	m	class:OneSidedPlatform
m_chassis	external/Box2d/Testbed/Tests/TheoJansen.h	/^	b2Body* m_chassis;$/;"	m	class:TheoJansen
m_chunkCount	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	int32 m_chunkCount;$/;"	m	class:b2BlockAllocator
m_chunkSpace	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	int32 m_chunkSpace;$/;"	m	class:b2BlockAllocator
m_chunks	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	b2Chunk* m_chunks;$/;"	m	class:b2BlockAllocator
m_circle	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	b2CircleShape m_circle;$/;"	m	class:EdgeShapes
m_circle	external/Box2d/Testbed/Tests/PolyShapes.h	/^	b2CircleShape m_circle;$/;"	m	class:PolyShapes
m_circle	external/Box2d/Testbed/Tests/PolyShapes.h	/^	b2CircleShape m_circle;$/;"	m	class:PolyShapesCallback
m_circle	external/Box2d/Testbed/Tests/RayCast.h	/^	b2CircleShape m_circle;$/;"	m	class:RayCast
m_collideConnected	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	bool m_collideConnected;$/;"	m	class:b2Joint
m_constant	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	float32 m_constant;$/;"	m	class:b2GearJoint
m_constant	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_constant;$/;"	m	class:b2PulleyJoint
m_constraintCount	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	int m_constraintCount;$/;"	m	class:b2ContactSolver
m_constraints	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2ContactConstraint* m_constraints;$/;"	m	class:b2ContactSolver
m_constraints	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.h	/^	b2TOIConstraint* m_constraints;$/;"	m	class:b2TOISolver
m_contactCapacity	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_contactCapacity;$/;"	m	class:b2Island
m_contactCount	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^	int32 m_contactCount;$/;"	m	class:b2ContactManager
m_contactCount	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_contactCount;$/;"	m	class:b2Island
m_contactFilter	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^	b2ContactFilter* m_contactFilter;$/;"	m	class:b2ContactManager
m_contactList	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2ContactEdge* m_contactList;$/;"	m	class:b2Body
m_contactList	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^	b2Contact* m_contactList;$/;"	m	class:b2ContactManager
m_contactListener	external/Box2d/Box2D/Dynamics/b2ContactManager.h	/^	b2ContactListener* m_contactListener;$/;"	m	class:b2ContactManager
m_contactManager	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2ContactManager m_contactManager;$/;"	m	class:b2World
m_contacts	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Contact** m_contacts;$/;"	m	class:b2Island
m_continuousPhysics	external/Box2d/Box2D/Dynamics/b2World.h	/^	bool m_continuousPhysics;$/;"	m	class:b2World
m_count	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	int32 m_count;$/;"	m	struct:b2Simplex	file:
m_count	external/Box2d/Box2D/Collision/b2Distance.h	/^	int32 m_count;$/;"	m	struct:b2DistanceProxy
m_count	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.h	/^	int32 m_count;$/;"	m	class:b2TOISolver
m_count	external/Box2d/Testbed/Tests/PolyShapes.h	/^	int32 m_count;$/;"	m	class:PolyShapesCallback
m_count	external/Box2d/Testbed/Tests/RayCast.h	/^	int32 m_count;$/;"	m	class:RayCastMultipleCallback
m_dampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_dampingRatio;$/;"	m	class:b2DistanceJoint
m_dampingRatio	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 m_dampingRatio;$/;"	m	class:b2MouseJoint
m_data	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	char m_data[b2_stackSize];$/;"	m	class:b2StackAllocator
m_debugDraw	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2DebugDraw* m_debugDraw;$/;"	m	class:b2World
m_debugDraw	external/Box2d/Testbed/Framework/Test.h	/^	DebugDraw m_debugDraw;$/;"	m	class:Test
m_debugDraw	external/Box2d/Testbed/Tests/PolyShapes.h	/^	b2DebugDraw* m_debugDraw;$/;"	m	class:PolyShapesCallback
m_debugDraw	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		GLESDebugDraw m_debugDraw;$/;"	m	class:Test
m_density	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	float32 m_density;$/;"	m	class:b2Fixture
m_destructionListener	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2DestructionListener* m_destructionListener;$/;"	m	class:b2World
m_destructionListener	external/Box2d/Testbed/Framework/Test.h	/^	DestructionListener m_destructionListener;$/;"	m	class:Test
m_destructionListener	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		DestructionListener m_destructionListener;$/;"	m	class:Test
m_drawFlags	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	uint32 m_drawFlags;$/;"	m	class:b2DebugDraw
m_edgeA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointEdge m_edgeA;$/;"	m	class:b2Joint
m_edgeB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointEdge m_edgeB;$/;"	m	class:b2Joint
m_elev	external/Box2d/Testbed/Tests/ElasticBody.h	/^	b2Body*  m_elev;$/;"	m	class:ElasticBody
m_enableLimit	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	bool m_enableLimit;$/;"	m	class:b2LineJoint
m_enableLimit	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	bool m_enableLimit;$/;"	m	class:b2PrismaticJoint
m_enableLimit	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	bool m_enableLimit;$/;"	m	class:b2RevoluteJoint
m_enableMotor	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	bool m_enableMotor;$/;"	m	class:b2LineJoint
m_enableMotor	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	bool m_enableMotor;$/;"	m	class:b2PrismaticJoint
m_enableMotor	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	bool m_enableMotor;$/;"	m	class:b2RevoluteJoint
m_entries	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	b2StackEntry m_entries[b2_maxStackEntries];$/;"	m	class:b2StackAllocator
m_entryCount	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	int32 m_entryCount;$/;"	m	class:b2StackAllocator
m_filter	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2Filter m_filter;$/;"	m	class:b2Fixture
m_fixture	external/Box2d/Testbed/Framework/Test.cpp	/^	b2Fixture* m_fixture;$/;"	m	class:QueryCallback	file:
m_fixture	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	b2Fixture* m_fixture;$/;"	m	class:EdgeShapesCallback
m_fixture1	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	b2Fixture* m_fixture1;$/;"	m	class:ShapeEditing
m_fixture2	external/Box2d/Testbed/Tests/ShapeEditing.h	/^	b2Fixture* m_fixture2;$/;"	m	class:ShapeEditing
m_fixtureA	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Fixture* m_fixtureA;$/;"	m	class:b2Contact
m_fixtureB	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Fixture* m_fixtureB;$/;"	m	class:b2Contact
m_fixtureCount	external/Box2d/Box2D/Dynamics/b2Body.h	/^	int32 m_fixtureCount;$/;"	m	class:b2Body
m_fixtureList	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Fixture* m_fixtureList;$/;"	m	class:b2Body
m_flags	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	uint32 m_flags;$/;"	m	class:b2Contact
m_flags	external/Box2d/Box2D/Dynamics/b2Body.h	/^	uint16 m_flags;$/;"	m	class:b2Body
m_flags	external/Box2d/Box2D/Dynamics/b2World.h	/^	int32 m_flags;$/;"	m	class:b2World
m_force	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Vec2 m_force;$/;"	m	class:b2Body
m_freeList	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 m_freeList;$/;"	m	class:b2DynamicTree
m_freeLists	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	b2Block* m_freeLists[b2_blockSizes];$/;"	m	class:b2BlockAllocator
m_frequencyHz	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_frequencyHz;$/;"	m	class:b2DistanceJoint
m_frequencyHz	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 m_frequencyHz;$/;"	m	class:b2MouseJoint
m_friction	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	float32 m_friction;$/;"	m	class:b2Fixture
m_gamma	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_gamma;$/;"	m	class:b2DistanceJoint
m_gamma	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 m_gamma;$/;"	m	class:b2MouseJoint
m_gravity	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2Vec2 m_gravity;$/;"	m	class:b2World
m_ground	external/Box2d/Testbed/Tests/ElasticBody.h	/^    b2Body*  m_ground;$/;"	m	class:ElasticBody
m_ground1	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Body* m_ground1;$/;"	m	class:b2GearJoint
m_ground2	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Body* m_ground2;$/;"	m	class:b2GearJoint
m_groundAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Vec2 m_groundAnchor1;$/;"	m	class:b2GearJoint
m_groundAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 m_groundAnchor1;$/;"	m	class:b2PulleyJoint
m_groundAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Vec2 m_groundAnchor2;$/;"	m	class:b2GearJoint
m_groundAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 m_groundAnchor2;$/;"	m	class:b2PulleyJoint
m_groundBody	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2Body* m_groundBody;$/;"	m	class:b2World
m_groundBody	external/Box2d/Testbed/Framework/Test.h	/^	b2Body* m_groundBody;$/;"	m	class:Test
m_groundBody	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2Body* m_groundBody;$/;"	m	class:Test
m_hit	external/Box2d/Testbed/Tests/RayCast.h	/^	bool m_hit;$/;"	m	class:RayCastAnyCallback
m_hit	external/Box2d/Testbed/Tests/RayCast.h	/^	bool m_hit;$/;"	m	class:RayCastClosestCallback
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_impulse;$/;"	m	class:b2DistanceJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	float32 m_impulse;$/;"	m	class:b2GearJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_impulse;$/;"	m	class:b2LineJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2Vec2 m_impulse;$/;"	m	class:b2MouseJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec3 m_impulse;$/;"	m	class:b2PrismaticJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_impulse;$/;"	m	class:b2PulleyJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2Vec3 m_impulse;$/;"	m	class:b2RevoluteJoint
m_impulse	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2Vec3 m_impulse;$/;"	m	class:b2WeldJoint
m_index	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	int32 m_index;$/;"	m	class:b2StackAllocator
m_indices	external/Box2d/Testbed/Tests/VerticalStack.h	/^	int32 m_indices[e_rowCount * e_columnCount];$/;"	m	class:VerticalStack
m_insertionCount	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 m_insertionCount;$/;"	m	class:b2DynamicTree
m_inv	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat m, m_inv;$/;"	m	struct:cpBody
m_invI	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_I, m_invI;$/;"	m	class:b2Body
m_invIA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	float32 m_invMassA, m_invIA;$/;"	m	class:b2Joint
m_invIB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	float32 m_invMassB, m_invIB;$/;"	m	class:b2Joint
m_invMass	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_mass, m_invMass;$/;"	m	class:b2Body
m_invMassA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	float32 m_invMassA, m_invIA;$/;"	m	class:b2Joint
m_invMassB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	float32 m_invMassB, m_invIB;$/;"	m	class:b2Joint
m_inv_dt0	external/Box2d/Box2D/Dynamics/b2World.h	/^	float32 m_inv_dt0;$/;"	m	class:b2World
m_isSensor	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	bool m_isSensor;$/;"	m	class:b2Fixture
m_islandFlag	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	bool m_islandFlag;$/;"	m	class:b2Joint
m_islandIndex	external/Box2d/Box2D/Dynamics/b2Body.h	/^	int32 m_islandIndex;$/;"	m	class:b2Body
m_joint	external/Box2d/Testbed/Tests/Prismatic.h	/^	b2PrismaticJoint* m_joint;$/;"	m	class:Prismatic
m_joint	external/Box2d/Testbed/Tests/Revolute.h	/^	b2RevoluteJoint* m_joint;$/;"	m	class:Revolute
m_joint1	external/Box2d/Testbed/Tests/Gears.h	/^	b2RevoluteJoint* m_joint1;$/;"	m	class:Gears
m_joint1	external/Box2d/Testbed/Tests/Pulleys.h	/^	b2PulleyJoint* m_joint1;$/;"	m	class:Pulleys
m_joint1	external/Box2d/Testbed/Tests/SliderCrank.h	/^	b2RevoluteJoint* m_joint1;$/;"	m	class:SliderCrank
m_joint2	external/Box2d/Testbed/Tests/Gears.h	/^	b2RevoluteJoint* m_joint2;$/;"	m	class:Gears
m_joint2	external/Box2d/Testbed/Tests/SliderCrank.h	/^	b2PrismaticJoint* m_joint2;$/;"	m	class:SliderCrank
m_joint3	external/Box2d/Testbed/Tests/Gears.h	/^	b2PrismaticJoint* m_joint3;$/;"	m	class:Gears
m_joint4	external/Box2d/Testbed/Tests/Gears.h	/^	b2GearJoint* m_joint4;$/;"	m	class:Gears
m_joint5	external/Box2d/Testbed/Tests/Gears.h	/^	b2GearJoint* m_joint5;$/;"	m	class:Gears
m_jointCapacity	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_jointCapacity;$/;"	m	class:b2Island
m_jointCount	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_jointCount;$/;"	m	class:b2Island
m_jointCount	external/Box2d/Box2D/Dynamics/b2World.h	/^	int32 m_jointCount;$/;"	m	class:b2World
m_jointList	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2JointEdge* m_jointList;$/;"	m	class:b2Body
m_jointList	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2Joint* m_jointList;$/;"	m	class:b2World
m_joint_elev	external/Box2d/Testbed/Tests/ElasticBody.h	/^	b2PrismaticJoint* m_joint_elev;$/;"	m	class:ElasticBody
m_joints	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Joint** m_joints;$/;"	m	class:b2Island
m_joints	external/Box2d/Testbed/Tests/Web.h	/^	b2Joint* m_joints[8];$/;"	m	class:Web
m_length	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_length;$/;"	m	class:b2DistanceJoint
m_limitImpulse1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_limitImpulse1;$/;"	m	class:b2PulleyJoint
m_limitImpulse2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_limitImpulse2;$/;"	m	class:b2PulleyJoint
m_limitMass1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_limitMass1;$/;"	m	class:b2PulleyJoint
m_limitMass2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_limitMass2;$/;"	m	class:b2PulleyJoint
m_limitState	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2LimitState m_limitState;$/;"	m	class:b2LineJoint
m_limitState	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2LimitState m_limitState;$/;"	m	class:b2PrismaticJoint
m_limitState	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2LimitState m_limitState;$/;"	m	class:b2RevoluteJoint
m_limitState1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2LimitState m_limitState1;$/;"	m	class:b2PulleyJoint
m_limitState2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2LimitState m_limitState2;$/;"	m	class:b2PulleyJoint
m_linearDamping	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_linearDamping;$/;"	m	class:b2Body
m_linearImpulse	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2Vec2 m_linearImpulse;$/;"	m	class:b2FrictionJoint
m_linearMass	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2Mat22 m_linearMass;$/;"	m	class:b2FrictionJoint
m_linearVelocity	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Vec2 m_linearVelocity;$/;"	m	class:b2Body
m_listener	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2ContactListener* m_listener;$/;"	m	class:b2Island
m_localAnchor	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2Vec2 m_localAnchor;$/;"	m	class:b2MouseJoint
m_localAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	b2Vec2 m_localAnchor1;$/;"	m	class:b2DistanceJoint
m_localAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Vec2 m_localAnchor1;$/;"	m	class:b2GearJoint
m_localAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_localAnchor1;$/;"	m	class:b2LineJoint
m_localAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 m_localAnchor1;$/;"	m	class:b2PrismaticJoint
m_localAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 m_localAnchor1;$/;"	m	class:b2PulleyJoint
m_localAnchor1	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2Vec2 m_localAnchor1;	\/\/ relative$/;"	m	class:b2RevoluteJoint
m_localAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	b2Vec2 m_localAnchor2;$/;"	m	class:b2DistanceJoint
m_localAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2Vec2 m_localAnchor2;$/;"	m	class:b2GearJoint
m_localAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_localAnchor2;$/;"	m	class:b2LineJoint
m_localAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 m_localAnchor2;$/;"	m	class:b2PrismaticJoint
m_localAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 m_localAnchor2;$/;"	m	class:b2PulleyJoint
m_localAnchor2	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2Vec2 m_localAnchor2;$/;"	m	class:b2RevoluteJoint
m_localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2Vec2 m_localAnchorA;$/;"	m	class:b2FrictionJoint
m_localAnchorA	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2Vec2 m_localAnchorA;$/;"	m	class:b2WeldJoint
m_localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	b2Vec2 m_localAnchorB;$/;"	m	class:b2FrictionJoint
m_localAnchorB	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2Vec2 m_localAnchorB;$/;"	m	class:b2WeldJoint
m_localCenterA	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Vec2 m_localCenterA, m_localCenterB;$/;"	m	class:b2Joint
m_localCenterB	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Vec2 m_localCenterA, m_localCenterB;$/;"	m	class:b2Joint
m_localPoint	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	b2Vec2 m_localPoint;$/;"	m	struct:b2SeparationFunction	file:
m_localXAxis1	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_localXAxis1;$/;"	m	class:b2LineJoint
m_localXAxis1	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 m_localXAxis1;$/;"	m	class:b2PrismaticJoint
m_localYAxis1	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_localYAxis1;$/;"	m	class:b2LineJoint
m_localYAxis1	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 m_localYAxis1;$/;"	m	class:b2PrismaticJoint
m_lowerAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_lowerAngle;$/;"	m	class:b2RevoluteJoint
m_lowerTranslation	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_lowerTranslation;$/;"	m	class:b2LineJoint
m_lowerTranslation	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_lowerTranslation;$/;"	m	class:b2PrismaticJoint
m_manifold	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Manifold m_manifold;$/;"	m	class:b2Contact
m_mass	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	float32 m_mass;$/;"	m	class:b2DistanceJoint
m_mass	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	float32 m_mass;$/;"	m	class:b2GearJoint
m_mass	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2Mat22 m_mass;		\/\/ effective mass for point-to-point constraint.$/;"	m	class:b2MouseJoint
m_mass	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	b2Mat33 m_mass;			\/\/ effective mass for point-to-point constraint.$/;"	m	class:b2RevoluteJoint
m_mass	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	b2Mat33 m_mass;$/;"	m	class:b2WeldJoint
m_mass	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_mass, m_invMass;$/;"	m	class:b2Body
m_maxAllocation	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	int32 m_maxAllocation;$/;"	m	class:b2StackAllocator
m_maxForce	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	float32 m_maxForce;$/;"	m	class:b2FrictionJoint
m_maxForce	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 m_maxForce;$/;"	m	class:b2MouseJoint
m_maxLength1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_maxLength1;$/;"	m	class:b2PulleyJoint
m_maxLength2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_maxLength2;$/;"	m	class:b2PulleyJoint
m_maxMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_maxMotorForce;$/;"	m	class:b2LineJoint
m_maxMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_maxMotorForce;$/;"	m	class:b2PrismaticJoint
m_maxMotorTorque	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_maxMotorTorque;$/;"	m	class:b2RevoluteJoint
m_maxTorque	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	float32 m_maxTorque;$/;"	m	class:b2FrictionJoint
m_middle	external/Box2d/Testbed/Tests/Bridge.h	/^	b2Body* m_middle;$/;"	m	class:Bridge
m_middle	external/Box2d/Testbed/Tests/Cantilever.h	/^	b2Body* m_middle;$/;"	m	class:Cantilever
m_mode	external/Box2d/Testbed/Tests/RayCast.h	/^	Mode m_mode;$/;"	m	class:RayCast
m_motorImpulse	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_motorImpulse;$/;"	m	class:b2LineJoint
m_motorImpulse	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_motorImpulse;$/;"	m	class:b2PrismaticJoint
m_motorImpulse	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_motorImpulse;$/;"	m	class:b2RevoluteJoint
m_motorJoint	external/Box2d/Testbed/Tests/TheoJansen.h	/^	b2RevoluteJoint* m_motorJoint;$/;"	m	class:TheoJansen
m_motorMass	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_motorMass;			\/\/ effective mass for motor\/limit translational constraint.$/;"	m	class:b2LineJoint
m_motorMass	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_motorMass;			\/\/ effective mass for motor\/limit translational constraint.$/;"	m	class:b2PrismaticJoint
m_motorMass	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_motorMass;	\/\/ effective mass for motor\/limit angular constraint.$/;"	m	class:b2RevoluteJoint
m_motorOn	external/Box2d/Testbed/Tests/TheoJansen.h	/^	bool m_motorOn;$/;"	m	class:TheoJansen
m_motorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_motorSpeed;$/;"	m	class:b2LineJoint
m_motorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_motorSpeed;$/;"	m	class:b2PrismaticJoint
m_motorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_motorSpeed;$/;"	m	class:b2RevoluteJoint
m_motorSpeed	external/Box2d/Testbed/Tests/TheoJansen.h	/^	float32 m_motorSpeed;$/;"	m	class:TheoJansen
m_mouseJoint	external/Box2d/Testbed/Framework/Test.h	/^	b2MouseJoint* m_mouseJoint;$/;"	m	class:Test
m_mouseJoint	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2MouseJoint* m_mouseJoint;$/;"	m	class:Test
m_mouseWorld	external/Box2d/Testbed/Framework/Test.h	/^	b2Vec2 m_mouseWorld;$/;"	m	class:Test
m_mouseWorld	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2Vec2 m_mouseWorld;$/;"	m	class:Test
m_moveBuffer	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32* m_moveBuffer;$/;"	m	class:b2BroadPhase
m_moveCapacity	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 m_moveCapacity;$/;"	m	class:b2BroadPhase
m_moveCount	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 m_moveCount;$/;"	m	class:b2BroadPhase
m_next	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Contact* m_next;$/;"	m	class:b2Contact
m_next	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Joint* m_next;$/;"	m	class:b2Joint
m_next	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Body* m_next;$/;"	m	class:b2Body
m_next	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2Fixture* m_next;$/;"	m	class:b2Fixture
m_nodeA	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2ContactEdge m_nodeA;$/;"	m	class:b2Contact
m_nodeB	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2ContactEdge m_nodeB;$/;"	m	class:b2Contact
m_nodeCapacity	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 m_nodeCapacity;$/;"	m	class:b2DynamicTree
m_nodeCount	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 m_nodeCount;$/;"	m	class:b2DynamicTree
m_nodes	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	b2DynamicTreeNode* m_nodes;$/;"	m	class:b2DynamicTree
m_normal	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	b2Vec2 m_normal;$/;"	m	class:EdgeShapesCallback
m_normal	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Vec2 m_normal;$/;"	m	class:RayCastAnyCallback
m_normal	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Vec2 m_normal;$/;"	m	class:RayCastClosestCallback
m_normals	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^	b2Vec2 m_normals[b2_maxPolygonVertices];$/;"	m	class:b2PolygonShape
m_normals	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Vec2 m_normals[e_maxCount];$/;"	m	class:RayCastMultipleCallback
m_offset	external/Box2d/Testbed/Tests/TheoJansen.h	/^	b2Vec2 m_offset;$/;"	m	class:TheoJansen
m_p	external/Box2d/Box2D/Collision/Shapes/b2CircleShape.h	/^	b2Vec2 m_p;$/;"	m	class:b2CircleShape
m_pairBuffer	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	b2Pair* m_pairBuffer;$/;"	m	class:b2BroadPhase
m_pairCapacity	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 m_pairCapacity;$/;"	m	class:b2BroadPhase
m_pairCount	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 m_pairCount;$/;"	m	class:b2BroadPhase
m_path	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	uint32 m_path;$/;"	m	class:b2DynamicTree
m_perp	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	b2Vec2 m_axis, m_perp;$/;"	m	class:b2LineJoint
m_perp	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	b2Vec2 m_axis, m_perp;$/;"	m	class:b2PrismaticJoint
m_piece1	external/Box2d/Testbed/Tests/Breakable.h	/^	b2Fixture* m_piece1;$/;"	m	class:Breakable
m_piece2	external/Box2d/Testbed/Tests/Breakable.h	/^	b2Fixture* m_piece2;$/;"	m	class:Breakable
m_platform	external/Box2d/Testbed/Tests/BodyTypes.h	/^	b2Body* m_platform;$/;"	m	class:BodyTypes
m_platform	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	b2Fixture* m_platform;$/;"	m	class:OneSidedPlatform
m_point	external/Box2d/Testbed/Framework/Test.cpp	/^	b2Vec2 m_point;$/;"	m	class:QueryCallback	file:
m_point	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	b2Vec2 m_point;$/;"	m	class:EdgeShapesCallback
m_point	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Vec2 m_point;$/;"	m	class:RayCastAnyCallback
m_point	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Vec2 m_point;$/;"	m	class:RayCastClosestCallback
m_pointCount	external/Box2d/Testbed/Framework/Test.h	/^	int32 m_pointCount;$/;"	m	class:Test
m_pointCount	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		int32 m_pointCount;$/;"	m	class:Test
m_points	external/Box2d/Testbed/Framework/Test.h	/^	ContactPoint m_points[k_maxContactPoints];$/;"	m	class:Test
m_points	external/Box2d/Testbed/Tests/RayCast.h	/^	b2Vec2 m_points[e_maxCount];$/;"	m	class:RayCastMultipleCallback
m_points	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		ContactPoint m_points[k_maxContactPoints];$/;"	m	class:Test
m_polygonA	external/Box2d/Testbed/Tests/DistanceTest.h	/^	b2PolygonShape m_polygonA;$/;"	m	class:DistanceTest
m_polygonA	external/Box2d/Testbed/Tests/PolyCollision.h	/^	b2PolygonShape m_polygonA;$/;"	m	class:PolyCollision
m_polygonB	external/Box2d/Testbed/Tests/DistanceTest.h	/^	b2PolygonShape m_polygonB;$/;"	m	class:DistanceTest
m_polygonB	external/Box2d/Testbed/Tests/PolyCollision.h	/^	b2PolygonShape m_polygonB;$/;"	m	class:PolyCollision
m_polygons	external/Box2d/Testbed/Tests/EdgeShapes.h	/^	b2PolygonShape m_polygons[4];$/;"	m	class:EdgeShapes
m_polygons	external/Box2d/Testbed/Tests/PolyShapes.h	/^	b2PolygonShape m_polygons[4];$/;"	m	class:PolyShapes
m_polygons	external/Box2d/Testbed/Tests/RayCast.h	/^	b2PolygonShape m_polygons[4];$/;"	m	class:RayCast
m_positionB	external/Box2d/Testbed/Tests/DistanceTest.h	/^	b2Vec2 m_positionB;$/;"	m	class:DistanceTest
m_positionB	external/Box2d/Testbed/Tests/PolyCollision.h	/^	b2Vec2 m_positionB;$/;"	m	class:PolyCollision
m_positionIterationCount	external/Box2d/Box2D/Dynamics/b2Island.h	/^	int32 m_positionIterationCount;$/;"	m	class:b2Island
m_positions	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Position* m_positions;$/;"	m	class:b2Island
m_prev	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Contact* m_prev;$/;"	m	class:b2Contact
m_prev	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Joint* m_prev;$/;"	m	class:b2Joint
m_prev	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Body* m_prev;$/;"	m	class:b2Body
m_prismatic1	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2PrismaticJoint* m_prismatic1;$/;"	m	class:b2GearJoint
m_prismatic2	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2PrismaticJoint* m_prismatic2;$/;"	m	class:b2GearJoint
m_proxyA	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	const b2DistanceProxy* m_proxyA;$/;"	m	struct:b2SeparationFunction	file:
m_proxyB	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	const b2DistanceProxy* m_proxyB;$/;"	m	struct:b2SeparationFunction	file:
m_proxyCount	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 m_proxyCount;$/;"	m	class:b2BroadPhase
m_proxyExtent	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	float32 m_proxyExtent;$/;"	m	class:DynamicTreeTest
m_proxyId	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	int32 m_proxyId;$/;"	m	class:b2Fixture
m_pulleyMass	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_pulleyMass;$/;"	m	class:b2PulleyJoint
m_queryAABB	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	b2AABB m_queryAABB;$/;"	m	class:DynamicTreeTest
m_queryProxyId	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 m_queryProxyId;$/;"	m	class:b2BroadPhase
m_radius	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	float32 m_radius;$/;"	m	class:b2Shape
m_radius	external/Box2d/Box2D/Collision/b2Distance.h	/^	float32 m_radius;$/;"	m	struct:b2DistanceProxy
m_radius	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	float32 m_radius, m_top, m_bottom;$/;"	m	class:OneSidedPlatform
m_ratio	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	float32 m_ratio;$/;"	m	class:b2GearJoint
m_ratio	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 m_ratio;$/;"	m	class:b2PulleyJoint
m_rayActor	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	Actor* m_rayActor;$/;"	m	class:DynamicTreeTest
m_rayCastInput	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	b2RayCastInput m_rayCastInput;$/;"	m	class:DynamicTreeTest
m_rayCastOutput	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	b2RayCastOutput m_rayCastOutput;$/;"	m	class:DynamicTreeTest
m_refAngle	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_refAngle;$/;"	m	class:b2PrismaticJoint
m_referenceAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_referenceAngle;$/;"	m	class:b2RevoluteJoint
m_referenceAngle	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	float32 m_referenceAngle;$/;"	m	class:b2WeldJoint
m_restitution	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	float32 m_restitution;$/;"	m	class:b2Fixture
m_revolute1	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2RevoluteJoint* m_revolute1;$/;"	m	class:b2GearJoint
m_revolute2	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	b2RevoluteJoint* m_revolute2;$/;"	m	class:b2GearJoint
m_root	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	int32 m_root;$/;"	m	class:b2DynamicTree
m_s1	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_s1, m_s2;$/;"	m	class:b2LineJoint
m_s1	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_s1, m_s2;$/;"	m	class:b2PrismaticJoint
m_s2	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_s1, m_s2;$/;"	m	class:b2LineJoint
m_s2	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_s1, m_s2;$/;"	m	class:b2PrismaticJoint
m_sensor	external/Box2d/Testbed/Tests/SensorTest.h	/^	b2Fixture* m_sensor;$/;"	m	class:SensorTest
m_shape	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	b2Shape* m_shape;$/;"	m	class:b2Fixture
m_shape1	external/Box2d/Testbed/Tests/Breakable.h	/^	b2PolygonShape m_shape1;$/;"	m	class:Breakable
m_shape2	external/Box2d/Testbed/Tests/Breakable.h	/^	b2PolygonShape m_shape2;$/;"	m	class:Breakable
m_shapeA	external/Box2d/Testbed/Tests/TimeOfImpact.h	/^	b2PolygonShape m_shapeA;$/;"	m	class:TimeOfImpact
m_shapeB	external/Box2d/Testbed/Tests/TimeOfImpact.h	/^	b2PolygonShape m_shapeB;$/;"	m	class:TimeOfImpact
m_sleepTime	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_sleepTime;$/;"	m	class:b2Body
m_speed	external/Box2d/Testbed/Tests/BodyTypes.h	/^	float32 m_speed;$/;"	m	class:BodyTypes
m_stackAllocator	external/Box2d/Box2D/Dynamics/b2World.h	/^	b2StackAllocator m_stackAllocator;$/;"	m	class:b2World
m_state	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2LimitState m_state;$/;"	m	class:b2PulleyJoint
m_state	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	State m_state;$/;"	m	class:OneSidedPlatform
m_stepCount	external/Box2d/Testbed/Framework/Test.h	/^	int32 m_stepCount;$/;"	m	class:Test
m_stepCount	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	int32 m_stepCount;$/;"	m	class:DynamicTreeTest
m_stepCount	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		int32 m_stepCount;$/;"	m	class:Test
m_sweep	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Sweep m_sweep;		\/\/ the swept motion for CCD$/;"	m	class:b2Body
m_sweepA	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	b2Sweep m_sweepA, m_sweepB;$/;"	m	struct:b2SeparationFunction	file:
m_sweepB	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	b2Sweep m_sweepA, m_sweepB;$/;"	m	struct:b2SeparationFunction	file:
m_target	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2Vec2 m_target;$/;"	m	class:b2MouseJoint
m_textLine	external/Box2d/Testbed/Framework/Test.h	/^	int32 m_textLine;$/;"	m	class:Test
m_textLine	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		int32 m_textLine;$/;"	m	class:Test
m_toiBody	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.h	/^	b2Body* m_toiBody;$/;"	m	class:b2TOISolver
m_toiCount	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	int32 m_toiCount;$/;"	m	class:b2Contact
m_top	external/Box2d/Testbed/Tests/OneSidedPlatform.h	/^	float32 m_radius, m_top, m_bottom;$/;"	m	class:OneSidedPlatform
m_torque	external/Box2d/Box2D/Dynamics/b2Body.h	/^	float32 m_torque;$/;"	m	class:b2Body
m_touching	external/Box2d/Testbed/Tests/SensorTest.h	/^	bool m_touching[e_count];$/;"	m	class:SensorTest
m_transform	external/Box2d/Testbed/Tests/PolyShapes.h	/^	b2Transform m_transform;$/;"	m	class:PolyShapesCallback
m_transformA	external/Box2d/Testbed/Tests/DistanceTest.h	/^	b2Transform m_transformA;$/;"	m	class:DistanceTest
m_transformA	external/Box2d/Testbed/Tests/PolyCollision.h	/^	b2Transform m_transformA;$/;"	m	class:PolyCollision
m_transformB	external/Box2d/Testbed/Tests/DistanceTest.h	/^	b2Transform m_transformB;$/;"	m	class:DistanceTest
m_transformB	external/Box2d/Testbed/Tests/PolyCollision.h	/^	b2Transform m_transformB;$/;"	m	class:PolyCollision
m_tree	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	b2DynamicTree m_tree;$/;"	m	class:b2BroadPhase
m_tree	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	b2DynamicTree m_tree;$/;"	m	class:DynamicTreeTest
m_type	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	Type m_type;$/;"	m	class:b2Shape
m_type	external/Box2d/Box2D/Collision/b2TimeOfImpact.cpp	/^	Type m_type;$/;"	m	struct:b2SeparationFunction	file:
m_type	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointType m_type;$/;"	m	class:b2Joint
m_type	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2BodyType m_type;$/;"	m	class:b2Body
m_u	external/Box2d/Box2D/Dynamics/Joints/b2DistanceJoint.h	/^	b2Vec2 m_u;$/;"	m	class:b2DistanceJoint
m_u1	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 m_u1;$/;"	m	class:b2PulleyJoint
m_u2	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	b2Vec2 m_u2;$/;"	m	class:b2PulleyJoint
m_upperAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 m_upperAngle;$/;"	m	class:b2RevoluteJoint
m_upperTranslation	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 m_upperTranslation;$/;"	m	class:b2LineJoint
m_upperTranslation	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 m_upperTranslation;$/;"	m	class:b2PrismaticJoint
m_userData	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	void* m_userData;$/;"	m	class:b2Joint
m_userData	external/Box2d/Box2D/Dynamics/b2Body.h	/^	void* m_userData;$/;"	m	class:b2Body
m_userData	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	void* m_userData;$/;"	m	class:b2Fixture
m_userData	external/Box2d/Testbed/Tests/RayCast.h	/^	int32 m_userData[e_maxBodies];$/;"	m	class:RayCast
m_v1	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2SimplexVertex m_v1, m_v2, m_v3;$/;"	m	struct:b2Simplex	file:
m_v2	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2SimplexVertex m_v1, m_v2, m_v3;$/;"	m	struct:b2Simplex	file:
m_v3	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2SimplexVertex m_v1, m_v2, m_v3;$/;"	m	struct:b2Simplex	file:
m_velocities	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Velocity* m_velocities;$/;"	m	class:b2Island
m_velocity	external/Box2d/Testbed/Tests/Breakable.h	/^	b2Vec2 m_velocity;$/;"	m	class:Breakable
m_vertexCount	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^	int32 m_vertexCount;$/;"	m	class:b2PolygonShape
m_vertices	external/Box2d/Box2D/Collision/Shapes/b2PolygonShape.h	/^	b2Vec2 m_vertices[b2_maxPolygonVertices];$/;"	m	class:b2PolygonShape
m_vertices	external/Box2d/Box2D/Collision/b2Distance.h	/^	const b2Vec2* m_vertices;$/;"	m	struct:b2DistanceProxy
m_warmStarting	external/Box2d/Box2D/Dynamics/b2World.h	/^	bool m_warmStarting;$/;"	m	class:b2World
m_wheel	external/Box2d/Testbed/Tests/TheoJansen.h	/^	b2Body* m_wheel;$/;"	m	class:TheoJansen
m_world	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2World* m_world;$/;"	m	class:b2Body
m_world	external/Box2d/Testbed/Framework/Test.h	/^	b2World* m_world;$/;"	m	class:Test
m_world	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2World* m_world;	\/\/ cocos2d specific$/;"	m	class:Test
m_worldAABB	external/Box2d/Testbed/Framework/Test.h	/^	b2AABB m_worldAABB;$/;"	m	class:Test
m_worldAABB	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		b2AABB m_worldAABB;$/;"	m	class:Test
m_worldExtent	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^	float32 m_worldExtent;$/;"	m	class:DynamicTreeTest
m_xf	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Transform m_xf;		\/\/ the body origin transform$/;"	m	class:b2Body
magFilter	cocos2d/CCTexture2D.h	/^	GLuint	magFilter;$/;"	m	struct:_ccTexParams
magic	external/Tremor/misc.h	/^union magic {$/;"	u
main	external/Box2d/Testbed/Framework/Main.cpp	/^int main(int argc, char** argv)$/;"	f
main	external/Tremor/ivorbisfile_example.c	/^int main(){$/;"	f
main	external/libpng/pngtest.c	/^main(int argc, char *argv[])$/;"	f
main	tools/mkatlas.pl	/^sub main$/;"	s
mainMenuScene	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	/^@property (nonatomic, retain) MainMenuScene *mainMenuScene;$/;"	v
mainView	tests/attachDemo/attachDemo.h	/^@property (nonatomic, retain) UIView *mainView;$/;"	v
mainView	tests/cocosLive/cocosLiveDemo.h	/^@property (nonatomic, retain) UIView *mainView;$/;"	v
mainWindow	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 mainWindow;$/;"	m	namespace:__anon70	file:
main_bkgrnd	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSprite *main_bkgrnd;$/;"	v
main_bkgrnd	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/MainMenuScene.h	/^@property (nonatomic, assign) CCSprite *main_bkgrnd;$/;"	v
main_bkgrnd	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) CCSprite *main_bkgrnd;$/;"	v
main_title	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSprite *main_title;$/;"	v
major	external/Box2d/Box2D/Common/b2Settings.h	/^	int32 major;		\/\/\/< significant changes$/;"	m	struct:b2Version
make_ball	external/Chipmunk/Demo/LogoSmash.c	/^make_ball(cpFloat x, cpFloat y)$/;"	f	file:
make_charged	external/Chipmunk/Demo/MagnetsElectric.c	/^make_charged(cpVect p, cpFloat chg)$/;"	f	file:
make_leg	external/Chipmunk/Demo/TheoJansen.c	/^make_leg(cpFloat side, cpFloat offset, cpBody *chassis, cpBody *crank, cpVect anchor)$/;"	f	file:
make_mag	external/Chipmunk/Demo/MagnetsElectric.c	/^make_mag(cpVect p, cpFloat ang, cpFloat mag)$/;"	f	file:
make_mix	external/Chipmunk/Demo/MagnetsElectric.c	/^make_mix(cpVect p, cpFloat ang, cpFloat mag,cpFloat chg)$/;"	f
manifold	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Manifold* manifold;$/;"	m	struct:b2ContactConstraint
map	external/Tremor/mapping0.c	/^  vorbis_info_mapping0 *map;$/;"	m	struct:__anon82	file:
map	external/Tremor/res012.c	/^  int         map;$/;"	m	struct:__anon72	file:
mapOrientation	cocos2d/CCTMXTiledMap.h	/^@property (nonatomic,readonly) int mapOrientation;$/;"	v
mapSize	cocos2d/CCTMXTiledMap.h	/^@property (nonatomic,readonly) CGSize mapSize;$/;"	v
mapSize	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) CGSize mapSize;$/;"	v
mapTileSize	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite) CGSize mapTileSize;$/;"	v
map_param	external/Tremor/codec_internal.h	/^  vorbis_info_mapping    *map_param[64];$/;"	m	struct:codec_setup_info
map_type	external/Tremor/codec_internal.h	/^  int                     map_type[64];$/;"	m	struct:codec_setup_info
mapping	external/Tremor/codec_internal.h	/^  int mapping;$/;"	m	struct:__anon80
mapping0_exportbundle	external/Tremor/mapping0.c	/^vorbis_func_mapping mapping0_exportbundle={$/;"	v
mapping0_free_info	external/Tremor/mapping0.c	/^static void mapping0_free_info(vorbis_info_mapping *i){$/;"	f	file:
mapping0_free_look	external/Tremor/mapping0.c	/^static void mapping0_free_look(vorbis_look_mapping *look){$/;"	f	file:
mapping0_inverse	external/Tremor/mapping0.c	/^static int mapping0_inverse(vorbis_block *vb,vorbis_look_mapping *l){$/;"	f	file:
mapping0_look	external/Tremor/mapping0.c	/^static vorbis_look_mapping *mapping0_look(vorbis_dsp_state *vd,vorbis_info_mode *vm,$/;"	f	file:
mapping0_unpack	external/Tremor/mapping0.c	/^static vorbis_info_mapping *mapping0_unpack(vorbis_info *vi,oggpack_buffer *opb){$/;"	f	file:
maps	external/Tremor/codec_internal.h	/^  int        maps;$/;"	m	struct:codec_setup_info
maptype	external/Tremor/codebook.h	/^  int    maptype;        \/* 0=none$/;"	m	struct:static_codebook
margin	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) unsigned int margin;$/;"	v
mask	external/Tremor/bitwise.c	/^static unsigned long mask[]=$/;"	v	file:
maskBits	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	uint16 maskBits;$/;"	m	struct:b2Filter
mass	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	float32 mass;$/;"	m	struct:b2MassData
masterGain	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) ALfloat masterGain;$/;"	v
max	cocos2d/Support/ccCArray.h	/^	NSUInteger num, max;$/;"	m	struct:ccArray
max	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpFloat min, max;$/;"	m	struct:cpRotaryLimitJoint
max	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpFloat min, max;$/;"	m	struct:cpSlideJoint
max	external/Chipmunk/include/chipmunk/cpArray.h	/^	int num, max;$/;"	m	struct:cpArray
max	external/Tremor/os.h	61;"	d
maxBias	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpFloat maxBias;$/;"	m	struct:cpConstraint
maxForce	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	float32 maxForce;$/;"	m	struct:b2FrictionJointDef
maxForce	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	float32 maxForce;$/;"	m	struct:b2MouseJointDef
maxForce	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpFloat maxForce;$/;"	m	struct:cpConstraint
maxFraction	external/Box2d/Box2D/Collision/b2Collision.h	/^	float32 maxFraction;$/;"	m	struct:b2RayCastInput
maxGID	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			unsigned int maxGID;$/;"	v
maxHp	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) int maxHp;$/;"	v
maxLengthA	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 maxLengthA;$/;"	m	struct:b2PulleyJointDef
maxLengthB	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 maxLengthB;$/;"	m	struct:b2PulleyJointDef
maxModelviewStackDepth	cocos2d/CCConfiguration.h	/^@property (nonatomic, readonly) GLint maxModelviewStackDepth;$/;"	v
maxMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 maxMotorForce;$/;"	m	struct:b2LineJointDef
maxMotorForce	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 maxMotorForce;$/;"	m	struct:b2PrismaticJointDef
maxMotorTorque	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 maxMotorTorque;$/;"	m	struct:b2RevoluteJointDef
maxMoveDuration	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) int maxMoveDuration;$/;"	v
maxS	cocos2d/CCTexture2D.h	/^@property(nonatomic,readwrite) GLfloat maxS;$/;"	v
maxT	cocos2d/CCTexture2D.h	/^@property(nonatomic,readwrite) GLfloat maxT;$/;"	v
maxTextureSize	cocos2d/CCConfiguration.h	/^@property (nonatomic, readonly) GLint maxTextureSize;$/;"	v
maxTorque	external/Box2d/Box2D/Dynamics/Joints/b2FrictionJoint.h	/^	float32 maxTorque;$/;"	m	struct:b2FrictionJointDef
max_output_ptr	external/libpng/pngwutil.c	/^   int max_output_ptr; \/* Size of output_ptr *\/$/;"	m	struct:__anon50	file:
maximum_allocation	external/libpng/pngtest.c	/^static int maximum_allocation = 0;$/;"	v	file:
mdct_backward	external/Tremor/mdct.c	/^void mdct_backward(int n, DATA_TYPE *in, DATA_TYPE *out){$/;"	f
mdct_bitreverse	external/Tremor/mdct.c	/^STIN void mdct_bitreverse(DATA_TYPE *x,int n,int step,int shift){$/;"	f
mdct_butterflies	external/Tremor/mdct.c	/^STIN void mdct_butterflies(DATA_TYPE *x,int points,int shift){$/;"	f
mdct_butterfly_16	external/Tremor/mdct.c	/^STIN void mdct_butterfly_16(DATA_TYPE *x){$/;"	f
mdct_butterfly_32	external/Tremor/mdct.c	/^STIN void mdct_butterfly_32(DATA_TYPE *x){$/;"	f
mdct_butterfly_8	external/Tremor/mdct.c	/^STIN void mdct_butterfly_8(DATA_TYPE *x){$/;"	f
mdct_butterfly_generic	external/Tremor/mdct.c	/^STIN void mdct_butterfly_generic(DATA_TYPE *x,int points,int step){$/;"	f
memory_infop	external/libpng/pngtest.c	/^typedef memory_information FAR *memory_infop;$/;"	t	file:
memory_information	external/libpng/pngtest.c	/^typedef struct memory_information$/;"	s	file:
memory_information	external/libpng/pngtest.c	/^} memory_information;$/;"	t	typeref:struct:memory_information	file:
metric	external/Box2d/Box2D/Collision/b2Distance.h	/^	float32 metric;		\/\/\/< length or area$/;"	m	struct:b2SimplexCache
min	external/Chipmunk/include/chipmunk/constraints/cpRotaryLimitJoint.h	/^	cpFloat min, max;$/;"	m	struct:cpRotaryLimitJoint
min	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpFloat min, max;$/;"	m	struct:cpSlideJoint
min	external/Tremor/os.h	57;"	d
minFilter	cocos2d/CCTexture2D.h	/^	GLuint	minFilter;$/;"	m	struct:_ccTexParams
minGID	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			unsigned int minGID;$/;"	v
minMoveDuration	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) int minMoveDuration;$/;"	v
minidom	tools/tmx-embeded-2-png.py	/^import xml.dom.minidom$/;"	i
minor	external/Box2d/Box2D/Common/b2Settings.h	/^	int32 minor;		\/\/\/< incremental changes$/;"	m	struct:b2Version
minute	external/libpng/png.h	/^   png_byte minute;  \/* minute of hour, 0 - 59 *\/$/;"	m	struct:png_time_struct
mode	cocos2d/CCParticleSystem.h	/^	} mode;$/;"	m	struct:sCCParticle	typeref:union:sCCParticle::__anon26
mode	external/Tremor/codec_internal.h	/^  vorbis_look_mapping   **mode;$/;"	m	struct:private_state
mode	external/Tremor/ivorbiscodec.h	/^  int   mode;$/;"	m	struct:vorbis_block
mode	external/Tremor/mapping0.c	/^  vorbis_info_mode *mode;$/;"	m	struct:__anon82	file:
mode_param	external/Tremor/codec_internal.h	/^  vorbis_info_mode       *mode_param[64];$/;"	m	struct:codec_setup_info
modebits	external/Tremor/codec_internal.h	/^  int                     modebits;$/;"	m	struct:private_state
modes	external/Tremor/codec_internal.h	/^  int        modes;$/;"	m	struct:codec_setup_info
monsterHit	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) BOOL monsterHit;$/;"	v
monsterType	CocosDenshion/TestsAndDemos/TomTheTurret/Monster.h	/^@property (nonatomic, assign) MonsterType monsterType;$/;"	v
monsters	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, retain) NSMutableArray *monsters;$/;"	v
month	external/libpng/png.h	/^   png_byte month;   \/* month of year, 1 - 12 *\/$/;"	m	struct:png_time_struct
motor	external/Chipmunk/Demo/Pump.c	/^cpConstraint *motor;$/;"	v
motor	external/Chipmunk/Demo/TheoJansen.c	/^cpConstraint *motor;$/;"	v
motorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 motorSpeed;$/;"	m	struct:b2LineJointDef
motorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 motorSpeed;$/;"	m	struct:b2PrismaticJointDef
motorSpeed	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 motorSpeed;$/;"	m	struct:b2RevoluteJointDef
mult	external/Tremor/backends.h	/^  int   mult;                      \/* 1 2 3 or 4 *\/ $/;"	m	struct:__anon75
mult_k	external/Chipmunk/include/chipmunk/constraints/util.h	/^mult_k(cpVect vr, cpVect k1, cpVect k2)$/;"	f
n	external/Chipmunk/Demo/OneWay.c	/^	cpVect n; \/\/ direction objects may pass through$/;"	m	struct:OneWayPlatform	file:
n	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpVect n;$/;"	m	struct:cpDampedSpring
n	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpVect n;$/;"	m	struct:cpPinJoint
n	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpVect n;$/;"	m	struct:cpSlideJoint
n	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpVect p, n;$/;"	m	struct:cpContact
n	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpVect n;$/;"	m	struct:cpPolyShapeAxis
n	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect a, b, n;$/;"	m	struct:cpSegmentShape
n	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect n; \/\/ normal of hit surface$/;"	m	struct:cpSegmentQueryInfo
n	external/Tremor/floor0.c	/^  long n;$/;"	m	struct:__anon86	file:
n	external/Tremor/floor1.c	/^  int n;$/;"	m	struct:__anon71	file:
nMass	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpFloat nMass;$/;"	m	struct:cpDampedSpring
nMass	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpFloat nMass;$/;"	m	struct:cpPinJoint
nMass	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpFloat nMass;$/;"	m	struct:cpSlideJoint
nMass	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat nMass, tMass, bounce;$/;"	m	struct:cpContact
nW	external/Tremor/ivorbiscodec.h	/^  long  nW;$/;"	m	struct:vorbis_block
nW	external/Tremor/ivorbiscodec.h	/^  long nW;$/;"	m	struct:vorbis_dsp_state
name	cocos2d/CCPVRTexture.h	/^@property (nonatomic,readonly) GLuint name;$/;"	v
name	cocos2d/CCSpriteFrame.h	/^@property (nonatomic,readwrite,retain) NSString *name;$/;"	v
name	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain)	NSString *name;$/;"	v
name	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSString *name;$/;"	v
name	cocos2d/CCTexture2D.h	/^@property(nonatomic,readonly) GLuint name;$/;"	v
name	external/Box2d/Testbed/Framework/Test.h	/^	const char *name;$/;"	m	struct:TestEntry
name	external/Chipmunk/Demo/ChipmunkDemo.h	/^	char *name;$/;"	m	struct:chipmunkDemo
name	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^	char *name;$/;"	m	struct:chipmunkDemo
name	external/libpng/png.h	/^    png_byte name[PNG_CHUNK_NAME_LENGTH];$/;"	m	struct:png_unknown_chunk_t
name	external/libpng/png.h	/^   png_charp name;           \/* palette name *\/$/;"	m	struct:png_sPLT_struct
name	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	const char *name;$/;"	m	struct:TestEntry
nentries	external/libpng/png.h	/^   png_int_32 nentries;      \/* number of palette entries *\/$/;"	m	struct:png_sPLT_struct
newGame	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) CCSprite *newGame;$/;"	v
new_spring	external/Chipmunk/Demo/Springies.c	/^new_spring(cpBody *a, cpBody *b, cpVect anchr1, cpVect anchr2, cpFloat restLength, cpFloat stiff, cpFloat damp)$/;"	f	file:
next	cocos2d/Support/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle
next	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 next;$/;"	m	struct:b2Pair
next	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^		int32 next;$/;"	m	union:b2DynamicTreeNode::__anon55
next	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^	b2Block* next;$/;"	m	struct:b2Block	file:
next	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2ContactEdge* next;	\/\/\/< the next contact edge in the body's contact list$/;"	m	struct:b2ContactEdge
next	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointEdge* next;		\/\/\/< the next joint edge in the body's joint list$/;"	m	struct:b2JointEdge
next	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	struct cpHashSetBin *next;$/;"	m	struct:cpHashSetBin	typeref:struct:cpHashSetBin::cpHashSetBin
next	external/Chipmunk/include/chipmunk/cpSpace.h	/^	struct cpContactBufferHeader *next;$/;"	m	struct:cpContactBufferHeader	typeref:struct:cpContactBufferHeader::cpContactBufferHeader
next	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	struct cpSpaceHashBin *next;$/;"	m	struct:cpSpaceHashBin	typeref:struct:cpSpaceHashBin::cpSpaceHashBin
next	external/Tremor/ivorbiscodec.h	/^  struct alloc_chain *next;$/;"	m	struct:alloc_chain	typeref:struct:alloc_chain::alloc_chain
next	external/Tremor/ogg.h	/^    struct ogg_buffer *next;$/;"	m	union:ogg_buffer::__anon83	typeref:struct:ogg_buffer::__anon83::ogg_buffer
next	external/Tremor/ogg.h	/^  struct ogg_reference *next;$/;"	m	struct:ogg_reference	typeref:struct:ogg_reference::ogg_reference
next	external/libpng/pngrtran.c	/^   struct png_dsort_struct FAR * next;$/;"	m	struct:png_dsort_struct	typeref:struct:png_dsort_struct::FAR	file:
next	external/libpng/pngtest.c	/^   struct memory_information FAR *next;$/;"	m	struct:memory_information	typeref:struct:memory_information::FAR	file:
nextContactPoint	external/Chipmunk/src/cpCollision.c	/^nextContactPoint(cpContact *arr, int *numPtr)$/;"	f	file:
nextDeltaTimeZero	cocos2d/CCDirector.h	/^@property (nonatomic,readwrite,assign) BOOL nextDeltaTimeZero;$/;"	v
nextProjectile	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, retain) CCSprite *nextProjectile;$/;"	v
next_prime	external/Chipmunk/src/prime.h	/^next_prime(int n)$/;"	f
node	cocos2d/CCNode.h	/^+(id) node;$/;"	v
noexpand	cocos2d/Support/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
nonInterruptible	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	bool nonInterruptible;$/;"	m	struct:_sourceGroup
nonideal_items	cocos2d/Support/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table
normal	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 normal;						\/\/\/< world vector pointing from A to B$/;"	m	struct:b2WorldManifold
normal	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 normal;$/;"	m	struct:b2RayCastOutput
normal	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^	b2Vec2 normal;$/;"	m	struct:b2PositionSolverManifold	file:
normal	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Vec2 normal;$/;"	m	struct:b2ContactConstraint
normal	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Vec2 normal;$/;"	m	struct:b2TOISolverManifold	file:
normal	external/Box2d/Testbed/Framework/Test.h	/^	b2Vec2 normal;$/;"	m	struct:ContactPoint
normal	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	b2Vec2 normal;$/;"	m	struct:ContactPoint
normalImage	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite,retain) CCNode<CCRGBAProtocol> *normalImage;$/;"	v
normalImpulse	external/Box2d/Box2D/Collision/b2Collision.h	/^	float32 normalImpulse;	\/\/\/< the non-penetration impulse$/;"	m	struct:b2ManifoldPoint
normalImpulse	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 normalImpulse;$/;"	m	struct:b2ContactConstraintPoint
normalImpulses	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	float32 normalImpulses[b2_maxManifoldPoints];$/;"	m	struct:b2ContactImpulse
normalMass	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Mat22 normalMass;$/;"	m	struct:b2ContactConstraint
normalMass	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 normalMass;$/;"	m	struct:b2ContactConstraintPoint
normal_relative_velocity	external/Chipmunk/include/chipmunk/constraints/util.h	/^normal_relative_velocity(cpBody *a, cpBody *b, cpVect r1, cpVect r2, cpVect n){$/;"	f
nothing	external/Chipmunk/src/cpSpace.c	/^static void nothing(cpArbiter *arb, cpSpace *space, void *data){}$/;"	f	file:
num	cocos2d/Support/CCArray.h	/^	NSUInteger num;$/;"	m	struct:pccArrayForeach_
num	cocos2d/Support/ccCArray.h	/^	NSUInteger num, max;$/;"	m	struct:ccArray
num	external/Chipmunk/include/chipmunk/cpArray.h	/^	int num, max;$/;"	m	struct:cpArray
numBalls	external/Chipmunk/Demo/Pump.c	34;"	d	file:
numContacts	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	int numContacts;$/;"	m	struct:cpArbiter
numContacts	external/Chipmunk/include/chipmunk/cpSpace.h	/^	unsigned int numContacts;$/;"	m	struct:cpContactBufferHeader
numVerts	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	int numVerts;$/;"	m	struct:cpPolyShape
num_allocations	external/libpng/pngtest.c	/^static int num_allocations = 0;$/;"	v	file:
num_buckets	cocos2d/Support/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
num_items	cocos2d/Support/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table
num_output_ptr	external/libpng/pngwutil.c	/^   int num_output_ptr; \/* Number of output pointers used *\/$/;"	m	struct:__anon50	file:
numberOfLoops	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readwrite, nonatomic) NSInteger numberOfLoops;$/;"	v
numbooks	external/Tremor/backends.h	/^  int   numbooks; \/* <= 16 *\/$/;"	m	struct:__anon74
numcells	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	int numcells;$/;"	m	struct:cpSpaceHash
obj	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	void *obj;$/;"	m	struct:cpHandle
obj	external/Chipmunk/src/cpSpace.c	/^	void *obj;$/;"	m	struct:postStepCallback	file:
objectGroups	cocos2d/CCTMXTiledMap.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *objectGroups;$/;"	v
objectGroups	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *objectGroups;$/;"	v
objects	cocos2d/CCTMXObjectGroup.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *objects;$/;"	v
offset	cocos2d/CCSpriteFrame.h	/^@property (nonatomic,readwrite) CGPoint offset;$/;"	v
offset	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			CGPoint offset;$/;"	v
offset	external/Tremor/ivorbisfile.h	/^  ogg_int64_t      offset;$/;"	m	struct:OggVorbis_File
offsetPosition	cocos2d/CCSprite.h	/^@property (nonatomic,readonly) CGPoint	offsetPosition;$/;"	v
offsets	external/Tremor/ivorbisfile.h	/^  ogg_int64_t     *offsets;$/;"	m	struct:OggVorbis_File
ogg_buffer	external/Tremor/ogg.h	/^typedef struct ogg_buffer {$/;"	s
ogg_buffer	external/Tremor/ogg.h	/^} ogg_buffer;$/;"	t	typeref:struct:ogg_buffer
ogg_buffer_alloc	external/Tremor/framing.c	/^static ogg_reference *ogg_buffer_alloc(ogg_buffer_state *bs,long bytes){$/;"	f	file:
ogg_buffer_cat	external/Tremor/framing.c	/^static ogg_reference *ogg_buffer_cat(ogg_reference *tail, ogg_reference *head){$/;"	f	file:
ogg_buffer_create	external/Tremor/framing.c	/^static ogg_buffer_state *ogg_buffer_create(void){$/;"	f	file:
ogg_buffer_destroy	external/Tremor/framing.c	/^static void ogg_buffer_destroy(ogg_buffer_state *bs){$/;"	f	file:
ogg_buffer_dup	external/Tremor/framing.c	/^ogg_reference *ogg_buffer_dup(ogg_reference *or){$/;"	f
ogg_buffer_mark	external/Tremor/framing.c	/^static void ogg_buffer_mark(ogg_reference *or){$/;"	f	file:
ogg_buffer_pretruncate	external/Tremor/framing.c	/^static ogg_reference *ogg_buffer_pretruncate(ogg_reference *or,long pos){$/;"	f	file:
ogg_buffer_realloc	external/Tremor/framing.c	/^static void ogg_buffer_realloc(ogg_reference *or,long bytes){$/;"	f	file:
ogg_buffer_release	external/Tremor/framing.c	/^static void ogg_buffer_release(ogg_reference *or){$/;"	f	file:
ogg_buffer_release_one	external/Tremor/framing.c	/^static void ogg_buffer_release_one(ogg_reference *or){$/;"	f	file:
ogg_buffer_split	external/Tremor/framing.c	/^static ogg_reference *ogg_buffer_split(ogg_reference **tail,$/;"	f	file:
ogg_buffer_state	external/Tremor/ogg.h	/^typedef struct ogg_buffer_state{$/;"	s
ogg_buffer_state	external/Tremor/ogg.h	/^} ogg_buffer_state;$/;"	t	typeref:struct:ogg_buffer_state
ogg_buffer_sub	external/Tremor/framing.c	/^static ogg_reference *ogg_buffer_sub(ogg_reference *or,long begin,long length){$/;"	f	file:
ogg_buffer_walk	external/Tremor/framing.c	/^static ogg_reference *ogg_buffer_walk(ogg_reference *or){$/;"	f	file:
ogg_int16_t	external/Tremor/config_types.h	/^typedef short ogg_int16_t;$/;"	t
ogg_int16_t	external/Tremor/os_types.h	/^   typedef SInt16 ogg_int16_t;$/;"	t
ogg_int16_t	external/Tremor/os_types.h	/^   typedef _G_int16_t ogg_int16_t;$/;"	t
ogg_int16_t	external/Tremor/os_types.h	/^   typedef __int16 ogg_int16_t;$/;"	t
ogg_int16_t	external/Tremor/os_types.h	/^   typedef int16_t ogg_int16_t;$/;"	t
ogg_int16_t	external/Tremor/os_types.h	/^   typedef short ogg_int16_t;$/;"	t
ogg_int32_t	external/Tremor/config_types.h	/^typedef int ogg_int32_t;$/;"	t
ogg_int32_t	external/Tremor/os_types.h	/^   typedef SInt32 ogg_int32_t;$/;"	t
ogg_int32_t	external/Tremor/os_types.h	/^   typedef _G_int32_t ogg_int32_t;$/;"	t
ogg_int32_t	external/Tremor/os_types.h	/^   typedef __int32 ogg_int32_t;$/;"	t
ogg_int32_t	external/Tremor/os_types.h	/^   typedef int ogg_int32_t;$/;"	t
ogg_int32_t	external/Tremor/os_types.h	/^   typedef int32_t ogg_int32_t;$/;"	t
ogg_int64_t	external/Tremor/config_types.h	/^typedef long long ogg_int64_t;$/;"	t
ogg_int64_t	external/Tremor/os_types.h	/^   typedef SInt64 ogg_int64_t;$/;"	t
ogg_int64_t	external/Tremor/os_types.h	/^   typedef _G_int64_t ogg_int64_t;$/;"	t
ogg_int64_t	external/Tremor/os_types.h	/^   typedef __int64 ogg_int64_t;$/;"	t
ogg_int64_t	external/Tremor/os_types.h	/^   typedef int64_t ogg_int64_t;$/;"	t
ogg_int64_t	external/Tremor/os_types.h	/^   typedef long long ogg_int64_t;$/;"	t
ogg_packet	external/Tremor/ogg.h	/^} ogg_packet;$/;"	t	typeref:struct:__anon84
ogg_packet_release	external/Tremor/framing.c	/^int ogg_packet_release(ogg_packet *op) {$/;"	f
ogg_page	external/Tremor/ogg.h	/^} ogg_page;$/;"	t	typeref:struct:__anon85
ogg_page_bos	external/Tremor/framing.c	/^int ogg_page_bos(ogg_page *og){$/;"	f
ogg_page_continued	external/Tremor/framing.c	/^int ogg_page_continued(ogg_page *og){$/;"	f
ogg_page_dup	external/Tremor/framing.c	/^void ogg_page_dup(ogg_page *dup,ogg_page *orig){$/;"	f
ogg_page_eos	external/Tremor/framing.c	/^int ogg_page_eos(ogg_page *og){$/;"	f
ogg_page_granulepos	external/Tremor/framing.c	/^ogg_int64_t ogg_page_granulepos(ogg_page *og){$/;"	f
ogg_page_packets	external/Tremor/framing.c	/^int ogg_page_packets(ogg_page *og){$/;"	f
ogg_page_pageno	external/Tremor/framing.c	/^ogg_uint32_t ogg_page_pageno(ogg_page *og){$/;"	f
ogg_page_release	external/Tremor/framing.c	/^int ogg_page_release(ogg_page *og) {$/;"	f
ogg_page_serialno	external/Tremor/framing.c	/^ogg_uint32_t ogg_page_serialno(ogg_page *og){$/;"	f
ogg_page_version	external/Tremor/framing.c	/^int ogg_page_version(ogg_page *og){$/;"	f
ogg_reference	external/Tremor/ogg.h	/^typedef struct ogg_reference {$/;"	s
ogg_reference	external/Tremor/ogg.h	/^} ogg_reference;$/;"	t	typeref:struct:ogg_reference
ogg_stream_create	external/Tremor/framing.c	/^ogg_stream_state *ogg_stream_create(int serialno){$/;"	f
ogg_stream_destroy	external/Tremor/framing.c	/^int ogg_stream_destroy(ogg_stream_state *os){$/;"	f
ogg_stream_packetout	external/Tremor/framing.c	/^int ogg_stream_packetout(ogg_stream_state *os,ogg_packet *op){$/;"	f
ogg_stream_packetpeek	external/Tremor/framing.c	/^int ogg_stream_packetpeek(ogg_stream_state *os,ogg_packet *op){$/;"	f
ogg_stream_pagein	external/Tremor/framing.c	/^int ogg_stream_pagein(ogg_stream_state *os, ogg_page *og){$/;"	f
ogg_stream_reset	external/Tremor/framing.c	/^int ogg_stream_reset(ogg_stream_state *os){$/;"	f
ogg_stream_reset_serialno	external/Tremor/framing.c	/^int ogg_stream_reset_serialno(ogg_stream_state *os,int serialno){$/;"	f
ogg_stream_state	external/Tremor/ogg.h	/^typedef struct ogg_stream_state {$/;"	s
ogg_stream_state	external/Tremor/ogg.h	/^} ogg_stream_state;$/;"	t	typeref:struct:ogg_stream_state
ogg_sync_bufferin	external/Tremor/framing.c	/^unsigned char *ogg_sync_bufferin(ogg_sync_state *oy, long bytes){$/;"	f
ogg_sync_create	external/Tremor/framing.c	/^ogg_sync_state *ogg_sync_create(void){$/;"	f
ogg_sync_destroy	external/Tremor/framing.c	/^int ogg_sync_destroy(ogg_sync_state *oy){$/;"	f
ogg_sync_pageout	external/Tremor/framing.c	/^int ogg_sync_pageout(ogg_sync_state *oy, ogg_page *og){$/;"	f
ogg_sync_pageseek	external/Tremor/framing.c	/^long ogg_sync_pageseek(ogg_sync_state *oy,ogg_page *og){$/;"	f
ogg_sync_reset	external/Tremor/framing.c	/^int ogg_sync_reset(ogg_sync_state *oy){$/;"	f
ogg_sync_state	external/Tremor/ogg.h	/^typedef struct ogg_sync_state {$/;"	s
ogg_sync_state	external/Tremor/ogg.h	/^} ogg_sync_state;$/;"	t	typeref:struct:ogg_sync_state
ogg_sync_wrote	external/Tremor/framing.c	/^int ogg_sync_wrote(ogg_sync_state *oy, long bytes){ $/;"	f
ogg_uint32_t	external/Tremor/config_types.h	/^typedef unsigned int ogg_uint32_t;$/;"	t
ogg_uint32_t	external/Tremor/os_types.h	/^   typedef UInt32 ogg_uint32_t;$/;"	t
ogg_uint32_t	external/Tremor/os_types.h	/^   typedef _G_uint32_t ogg_uint32_t;$/;"	t
ogg_uint32_t	external/Tremor/os_types.h	/^   typedef u_int32_t ogg_uint32_t;$/;"	t
ogg_uint32_t	external/Tremor/os_types.h	/^   typedef unsigned __int32 ogg_uint32_t;$/;"	t
ogg_uint32_t	external/Tremor/os_types.h	/^   typedef unsigned int ogg_uint32_t;$/;"	t
oggbyte_buffer	external/Tremor/ogg.h	/^typedef struct oggbyte_buffer {$/;"	s
oggbyte_buffer	external/Tremor/ogg.h	/^} oggbyte_buffer;$/;"	t	typeref:struct:oggbyte_buffer
oggbyte_init	external/Tremor/framing.c	/^static int oggbyte_init(oggbyte_buffer *b,ogg_reference *or){$/;"	f	file:
oggbyte_read1	external/Tremor/framing.c	/^static unsigned char oggbyte_read1(oggbyte_buffer *b,int pos){$/;"	f	file:
oggbyte_read4	external/Tremor/framing.c	/^static ogg_uint32_t oggbyte_read4(oggbyte_buffer *b,int pos){$/;"	f	file:
oggbyte_read8	external/Tremor/framing.c	/^static ogg_int64_t oggbyte_read8(oggbyte_buffer *b,int pos){$/;"	f	file:
oggbyte_set4	external/Tremor/framing.c	/^static void oggbyte_set4(oggbyte_buffer *b,ogg_uint32_t val,int pos){$/;"	f	file:
oggpack_adv	external/Tremor/bitwise.c	/^void oggpack_adv(oggpack_buffer *b,int bits){$/;"	f
oggpack_bits	external/Tremor/bitwise.c	/^long oggpack_bits(oggpack_buffer *b){$/;"	f
oggpack_buffer	external/Tremor/ogg.h	/^typedef struct oggpack_buffer {$/;"	s
oggpack_buffer	external/Tremor/ogg.h	/^} oggpack_buffer;$/;"	t	typeref:struct:oggpack_buffer
oggpack_bytes	external/Tremor/bitwise.c	/^long oggpack_bytes(oggpack_buffer *b){$/;"	f
oggpack_eop	external/Tremor/bitwise.c	/^int oggpack_eop(oggpack_buffer *b){$/;"	f
oggpack_look	external/Tremor/bitwise.c	/^long oggpack_look(oggpack_buffer *b,int bits){$/;"	f
oggpack_read	external/Tremor/bitwise.c	/^long oggpack_read(oggpack_buffer *b,int bits){$/;"	f
oggpack_readinit	external/Tremor/bitwise.c	/^void oggpack_readinit(oggpack_buffer *b,ogg_reference *r){$/;"	f
onebppswaptable	external/libpng/pngtrans.c	/^static PNG_CONST png_byte onebppswaptable[256] = {$/;"	v	file:
opacity	cocos2d/CCAtlasNode.h	/^@property (nonatomic,readwrite) GLubyte opacity;$/;"	v
opacity	cocos2d/CCBitmapFontAtlas.h	/^@property (nonatomic,readwrite) GLubyte opacity;$/;"	v
opacity	cocos2d/CCLayer.h	/^@property (nonatomic,readonly) GLubyte opacity;$/;"	v
opacity	cocos2d/CCMenu.h	/^@property (nonatomic,readonly) GLubyte opacity;$/;"	v
opacity	cocos2d/CCMenuItem.h	/^@property (nonatomic,readonly) GLubyte opacity;$/;"	v
opacity	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) GLubyte opacity;$/;"	v
opacity	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			unsigned char opacity;$/;"	v
opb	external/Tremor/ivorbiscodec.h	/^  oggpack_buffer opb;$/;"	m	struct:vorbis_block
openGLView	cocos2d/CCDirector.h	/^@property (nonatomic,readwrite,retain) EAGLView *openGLView;$/;"	v
operator ()	external/Box2d/Box2D/Common/b2Math.h	/^	float32 operator () (int32 i) const$/;"	f	struct:b2Vec2
operator ()	external/Box2d/Box2D/Common/b2Math.h	/^	float32& operator () (int32 i)$/;"	f	struct:b2Vec2
operator *	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 operator * (float32 s, const b2Vec2& a)$/;"	f
operator *	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec3 operator * (float32 s, const b2Vec3& a)$/;"	f
operator *=	external/Box2d/Box2D/Common/b2Math.h	/^	void operator *= (float32 a)$/;"	f	struct:b2Vec2
operator *=	external/Box2d/Box2D/Common/b2Math.h	/^	void operator *= (float32 s)$/;"	f	struct:b2Vec3
operator +	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Mat22 operator + (const b2Mat22& A, const b2Mat22& B)$/;"	f
operator +	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 operator + (const b2Vec2& a, const b2Vec2& b)$/;"	f
operator +	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec3 operator + (const b2Vec3& a, const b2Vec3& b)$/;"	f
operator +=	external/Box2d/Box2D/Common/b2Math.h	/^	void operator += (const b2Vec2& v)$/;"	f	struct:b2Vec2
operator +=	external/Box2d/Box2D/Common/b2Math.h	/^	void operator += (const b2Vec3& v)$/;"	f	struct:b2Vec3
operator -	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 operator -() const { b2Vec2 v; v.Set(-x, -y); return v; }$/;"	f	struct:b2Vec2
operator -	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec3 operator -() const { b2Vec3 v; v.Set(-x, -y, -z); return v; }$/;"	f	struct:b2Vec3
operator -	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec2 operator - (const b2Vec2& a, const b2Vec2& b)$/;"	f
operator -	external/Box2d/Box2D/Common/b2Math.h	/^inline b2Vec3 operator - (const b2Vec3& a, const b2Vec3& b)$/;"	f
operator -=	external/Box2d/Box2D/Common/b2Math.h	/^	void operator -= (const b2Vec2& v)$/;"	f	struct:b2Vec2
operator -=	external/Box2d/Box2D/Common/b2Math.h	/^	void operator -= (const b2Vec3& v)$/;"	f	struct:b2Vec3
operator ==	external/Box2d/Box2D/Common/b2Math.h	/^inline bool operator == (const b2Vec2& a, const b2Vec2& b)$/;"	f
order	external/Tremor/backends.h	/^  int   order;$/;"	m	struct:__anon74
orientation	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) int orientation;$/;"	v
orientation	experimental/sound-engine/PASoundListener.h	/^@property (readwrite, assign) float orientation;$/;"	v
orientation	experimental/sound-engine/PASoundSource.h	/^@property (readwrite, assign) float orientation;$/;"	v
originalSize	cocos2d/CCSpriteFrame.h	/^@property (nonatomic,readwrite) CGSize originalSize;$/;"	v
originalTarget	cocos2d/CCAction.h	/^@property (nonatomic,readonly,assign) id originalTarget;$/;"	v
os	external/Tremor/ivorbisfile.h	/^  ogg_stream_state *os; \/* take physical pages, weld into a logical$/;"	m	struct:OggVorbis_File
os	tools/compatibility_with_0_8/generate_compat_file.py	/^import os$/;"	i
os	tools/spritesheet-artifact-fixer.py	/^import os$/;"	i
os	tools/tmx-embeded-2-png.py	/^import os$/;"	i
other	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2Body* other;			\/\/\/< provides quick access to the other body attached.$/;"	m	struct:b2ContactEdge
other	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2Body* other;			\/\/\/< provides quick access to the other body attached.$/;"	m	struct:b2JointEdge
outname	external/libpng/pngtest.c	/^static PNG_CONST char *outname = "pngout.png";$/;"	v	file:
outname	external/libpng/pngtest.c	/^static PNG_CONST char *outname = "pngout\/png";$/;"	v	file:
output_ptr	external/libpng/pngwutil.c	/^   png_charpp output_ptr; \/* Array of pointers to output *\/$/;"	m	struct:__anon50	file:
outstanding	external/Tremor/ogg.h	/^  int                   outstanding;$/;"	m	struct:ogg_buffer_state
ov_bitrate	external/Tremor/vorbisfile.c	/^long ov_bitrate(OggVorbis_File *vf,int i){$/;"	f
ov_bitrate_instant	external/Tremor/vorbisfile.c	/^long ov_bitrate_instant(OggVorbis_File *vf){$/;"	f
ov_callbacks	external/Tremor/ivorbisfile.h	/^} ov_callbacks;$/;"	t	typeref:struct:__anon81
ov_clear	external/Tremor/vorbisfile.c	/^int ov_clear(OggVorbis_File *vf){$/;"	f
ov_comment	external/Tremor/vorbisfile.c	/^vorbis_comment *ov_comment(OggVorbis_File *vf,int link){$/;"	f
ov_info	external/Tremor/vorbisfile.c	/^vorbis_info *ov_info(OggVorbis_File *vf,int link){$/;"	f
ov_open	external/Tremor/vorbisfile.c	/^int ov_open(FILE *f,OggVorbis_File *vf,char *initial,long ibytes){$/;"	f
ov_open_callbacks	external/Tremor/vorbisfile.c	/^int ov_open_callbacks(void *f,OggVorbis_File *vf,char *initial,long ibytes,$/;"	f
ov_pcm_seek	external/Tremor/vorbisfile.c	/^int ov_pcm_seek(OggVorbis_File *vf,ogg_int64_t pos){$/;"	f
ov_pcm_seek_page	external/Tremor/vorbisfile.c	/^int ov_pcm_seek_page(OggVorbis_File *vf,ogg_int64_t pos){$/;"	f
ov_pcm_tell	external/Tremor/vorbisfile.c	/^ogg_int64_t ov_pcm_tell(OggVorbis_File *vf){$/;"	f
ov_pcm_total	external/Tremor/vorbisfile.c	/^ogg_int64_t ov_pcm_total(OggVorbis_File *vf,int i){$/;"	f
ov_raw_seek	external/Tremor/vorbisfile.c	/^int ov_raw_seek(OggVorbis_File *vf,ogg_int64_t pos){$/;"	f
ov_raw_tell	external/Tremor/vorbisfile.c	/^ogg_int64_t ov_raw_tell(OggVorbis_File *vf){$/;"	f
ov_raw_total	external/Tremor/vorbisfile.c	/^ogg_int64_t ov_raw_total(OggVorbis_File *vf,int i){$/;"	f
ov_read	external/Tremor/vorbisfile.c	/^long ov_read(OggVorbis_File *vf,char *buffer,int bytes_req,int *bitstream){$/;"	f
ov_seekable	external/Tremor/vorbisfile.c	/^long ov_seekable(OggVorbis_File *vf){$/;"	f
ov_serialnumber	external/Tremor/vorbisfile.c	/^long ov_serialnumber(OggVorbis_File *vf,int i){$/;"	f
ov_streams	external/Tremor/vorbisfile.c	/^long ov_streams(OggVorbis_File *vf){$/;"	f
ov_test	external/Tremor/vorbisfile.c	/^int ov_test(FILE *f,OggVorbis_File *vf,char *initial,long ibytes){$/;"	f
ov_test_callbacks	external/Tremor/vorbisfile.c	/^int ov_test_callbacks(void *f,OggVorbis_File *vf,char *initial,long ibytes,$/;"	f
ov_test_open	external/Tremor/vorbisfile.c	/^int ov_test_open(OggVorbis_File *vf){$/;"	f
ov_time_seek	external/Tremor/vorbisfile.c	/^int ov_time_seek(OggVorbis_File *vf,ogg_int64_t milliseconds){$/;"	f
ov_time_seek_page	external/Tremor/vorbisfile.c	/^int ov_time_seek_page(OggVorbis_File *vf,ogg_int64_t milliseconds){$/;"	f
ov_time_tell	external/Tremor/vorbisfile.c	/^ogg_int64_t ov_time_tell(OggVorbis_File *vf){$/;"	f
ov_time_total	external/Tremor/vorbisfile.c	/^ogg_int64_t ov_time_total(OggVorbis_File *vf,int i){$/;"	f
overlap	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^		bool overlap;$/;"	m	struct:DynamicTreeTest::Actor
ownTiles	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			BOOL ownTiles;$/;"	v
owner	external/Tremor/ogg.h	/^    ogg_buffer_state  *owner;$/;"	m	union:ogg_buffer::__anon83
oy	external/Tremor/ivorbisfile.h	/^  ogg_sync_state   *oy; $/;"	m	struct:OggVorbis_File
p	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpVect p;$/;"	m	struct:DataforForce	file:
p	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpVect p, n;$/;"	m	struct:cpContact
p	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpVect p, v, f;$/;"	m	struct:cpBody
p0	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpVect p0;$/;"	m	struct:DataforForce	file:
p1	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 p1, p2;$/;"	m	struct:b2RayCastInput
p2	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 p1, p2;$/;"	m	struct:b2RayCastInput
packet	external/Tremor/ogg.h	/^  ogg_reference *packet;$/;"	m	struct:__anon84
packetno	external/Tremor/ogg.h	/^  ogg_int64_t    packetno;     \/* sequence number for decode; the framing$/;"	m	struct:__anon84
packetno	external/Tremor/ogg.h	/^  ogg_int64_t    packetno; \/* sequence number for decode; the framing$/;"	m	struct:ogg_stream_state
pageno	external/Tremor/ogg.h	/^  long           pageno;$/;"	m	struct:ogg_stream_state
pan	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float pan;$/;"	v
parallaxArray	cocos2d/CCParallaxNode.h	/^@property (nonatomic,readwrite) ccArray * parallaxArray;$/;"	v
parent	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) CCNode* parent;$/;"	v
parent	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^		int32 parent;$/;"	m	union:b2DynamicTreeNode::__anon55
partbooks	external/Tremor/res012.c	/^  codebook ***partbooks;$/;"	m	struct:__anon72	file:
particleCount	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readonly) int	particleCount;$/;"	v
partitionclass	external/Tremor/backends.h	/^  int   partitionclass[VIF_PARTS]; \/* 0 to 15 *\/$/;"	m	struct:__anon75
partitions	external/Tremor/backends.h	/^  int    partitions;       \/* possible codebooks for a partition *\/$/;"	m	struct:vorbis_info_residue0
partitions	external/Tremor/backends.h	/^  int   partitions;                \/* 0 to 31 *\/$/;"	m	struct:__anon75
parts	external/Tremor/res012.c	/^  int         parts;$/;"	m	struct:__anon72	file:
partvals	external/Tremor/res012.c	/^  int         partvals;$/;"	m	struct:__anon72	file:
passThruList	external/Chipmunk/Demo/OneWay.c	/^	cpArray *passThruList; \/\/ list of objects passing through$/;"	m	struct:OneWayPlatform	file:
passlimit	external/Tremor/codec_internal.h	/^  int    passlimit[32];     \/* iteration limit per couple\/quant pass *\/$/;"	m	struct:codec_setup_info
pause	external/Box2d/Testbed/Framework/Test.h	/^	int32 pause;$/;"	m	struct:Settings
pause	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 pause;$/;"	m	struct:Settings
paused	cocos2d/CCActionManager.h	/^	BOOL			paused;	$/;"	m	struct:_hashElement
pccArrayForeach	cocos2d/Support/CCArray.h	/^} pccArrayForeach;$/;"	t	typeref:struct:pccArrayForeach_
pccArrayForeach_	cocos2d/Support/CCArray.h	/^typedef struct pccArrayForeach_ \/\/p =private$/;"	s
pcm	external/Tremor/ivorbiscodec.h	/^  ogg_int32_t  **pcm;       \/* this is a pointer into local storage *\/ $/;"	m	struct:vorbis_block
pcm	external/Tremor/ivorbiscodec.h	/^  ogg_int32_t **pcm;$/;"	m	struct:vorbis_dsp_state
pcm_current	external/Tremor/ivorbiscodec.h	/^  int      pcm_current;$/;"	m	struct:vorbis_dsp_state
pcm_offset	external/Tremor/ivorbisfile.h	/^  ogg_int64_t      pcm_offset;$/;"	m	struct:OggVorbis_File
pcm_returned	external/Tremor/ivorbiscodec.h	/^  int      pcm_returned;$/;"	m	struct:vorbis_dsp_state
pcm_storage	external/Tremor/ivorbiscodec.h	/^  int      pcm_storage;$/;"	m	struct:vorbis_dsp_state
pcmend	external/Tremor/ivorbiscodec.h	/^  int   pcmend;$/;"	m	struct:vorbis_block
pcmlengths	external/Tremor/ivorbisfile.h	/^  ogg_int64_t     *pcmlengths;$/;"	m	struct:OggVorbis_File
pcmout	external/Tremor/ivorbisfile_example.c	/^char pcmout[4096]; \/* take 4k out of the data segment, not the stack *\/$/;"	v
pcmret	external/Tremor/ivorbiscodec.h	/^  ogg_int32_t **pcmret;$/;"	m	struct:vorbis_dsp_state
percentage	cocos2d/CCProgressTimer.h	/^@property (nonatomic, readwrite) float percentage;$/;"	v
period	cocos2d/CCEaseAction.h	/^@property (nonatomic,readwrite) float period;$/;"	v
phase	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat phase, ratio;$/;"	m	struct:cpGearJoint
phase	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat angle, phase, ratchet;$/;"	m	struct:cpRatchetJoint
phrasebook	external/Tremor/res012.c	/^  codebook   *phrasebook;$/;"	m	struct:__anon72	file:
pillVAR	external/Chipmunk/Demo/drawSpace.c	/^static const GLfloat pillVAR[] = {$/;"	v	file:
pillVAR_count	external/Chipmunk/Demo/drawSpace.c	/^static const int pillVAR_count = sizeof(pillVAR)\/sizeof(GLfloat)\/2;$/;"	v	file:
pinformation	external/libpng/pngtest.c	/^static memory_infop pinformation = NULL;$/;"	v	file:
pitch	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float pitch;$/;"	v
pixelDepth	cocos2d/Support/TGAlib.h	/^	unsigned char type, pixelDepth;$/;"	m	struct:sImageTGA
pixelFormat	cocos2d/CCTexture2D.h	/^@property(nonatomic,readonly) CCTexture2DPixelFormat pixelFormat;$/;"	v
pixelFormat	cocos2d/Support/EAGLView.h	/^@property(nonatomic,readonly) NSString* pixelFormat;$/;"	v
pixel_depth	external/libpng/png.h	/^   png_byte pixel_depth; \/* bits per pixel (depth * channels) *\/$/;"	m	struct:png_row_info_struct
pixelsHigh	cocos2d/CCTexture2D.h	/^@property(nonatomic,readonly) NSUInteger pixelsHigh;$/;"	v
pixelsWide	cocos2d/CCTexture2D.h	/^@property(nonatomic,readonly) NSUInteger pixelsWide;$/;"	v
planetGravityVelocityFunc	external/Chipmunk/Demo/Planet.c	/^planetGravityVelocityFunc(cpBody *body, cpVect gravity, cpFloat damping, cpFloat dt)$/;"	f	file:
platformInstance	external/Chipmunk/Demo/OneWay.c	/^static OneWayPlatform platformInstance;$/;"	v	file:
player	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) CCSprite *player;$/;"	v
playerInstance	external/Chipmunk/Demo/Player.c	/^PlayerStruct playerInstance;$/;"	v
playerUpdateVelocity	external/Chipmunk/Demo/Player.c	/^playerUpdateVelocity(cpBody *body, cpVect gravity, cpFloat damping, cpFloat dt)$/;"	f	file:
png_64bit_product	external/libpng/png.c	/^png_64bit_product (long v1, long v2, unsigned long *hi_product,$/;"	f
png_FILE_p	external/libpng/pngconf.h	/^typedef FILE                * png_FILE_p;$/;"	t
png_FILE_p	external/libpng/pngconf.h	/^typedef HANDLE                png_FILE_p;$/;"	t
png_FILE_p	external/libpng/pngtest.c	/^     typedef FILE                * png_FILE_p;$/;"	t	file:
png_FILE_p	external/libpng/pngtest.c	/^     typedef HANDLE                png_FILE_p;$/;"	t	file:
png_access_version_number	external/libpng/png.c	/^png_access_version_number(void)$/;"	f
png_benign_error	external/libpng/pngconf.h	120;"	d
png_benign_error	external/libpng/pngconf.h	124;"	d
png_benign_error	external/libpng/pngerror.c	/^png_benign_error(png_structp png_ptr, png_const_charp error_message)$/;"	f
png_build_gamma_table	external/libpng/pngrtran.c	/^png_build_gamma_table(png_structp png_ptr)$/;"	f
png_build_grayscale_palette	external/libpng/pngrtran.c	/^png_build_grayscale_palette(int bit_depth, png_colorp palette)$/;"	f
png_byte	external/libpng/pngconf.h	/^typedef unsigned char png_byte;$/;"	t
png_bytep	external/libpng/pngconf.h	/^typedef png_byte        FAR * png_bytep;$/;"	t
png_bytep_NULL	external/libpng/png.h	557;"	d
png_bytep_NULL	external/libpng/png.h	573;"	d
png_bytepp	external/libpng/pngconf.h	/^typedef png_byte        FAR * FAR * png_bytepp;$/;"	t
png_bytepp_NULL	external/libpng/png.h	558;"	d
png_bytepp_NULL	external/libpng/png.h	574;"	d
png_calculate_crc	external/libpng/png.c	/^png_calculate_crc(png_structp png_ptr, png_bytep ptr, png_size_t length)$/;"	f
png_calloc	external/libpng/pngmem.c	/^png_calloc(png_structp png_ptr, png_uint_32 size)$/;"	f
png_charp	external/libpng/pngconf.h	/^typedef char            FAR * png_charp;$/;"	t
png_charpp	external/libpng/pngconf.h	/^typedef char            FAR * FAR * png_charpp;$/;"	t
png_charppp	external/libpng/pngconf.h	/^typedef char            FAR * FAR * FAR * png_charppp;$/;"	t
png_check_IHDR	external/libpng/png.c	/^png_check_IHDR(png_structp png_ptr,$/;"	f
png_check_cHRM_fixed	external/libpng/png.c	/^png_check_cHRM_fixed(png_structp png_ptr,$/;"	f
png_check_chunk_name	external/libpng/pngrutil.c	/^png_check_chunk_name(png_structp png_ptr, png_bytep chunk_name)$/;"	f
png_check_keyword	external/libpng/pngwutil.c	/^png_check_keyword(png_structp png_ptr, png_charp key, png_charpp new_key)$/;"	f
png_check_sig	external/libpng/png.c	/^png_check_sig(png_bytep sig, int num)$/;"	f
png_chunk_benign_error	external/libpng/pngconf.h	121;"	d
png_chunk_benign_error	external/libpng/pngconf.h	125;"	d
png_chunk_benign_error	external/libpng/pngerror.c	/^png_chunk_benign_error(png_structp png_ptr, png_const_charp error_message)$/;"	f
png_chunk_error	external/libpng/pngerror.c	/^png_chunk_error(png_structp png_ptr, png_const_charp error_message)$/;"	f
png_chunk_warning	external/libpng/pngerror.c	/^png_chunk_warning(png_structp png_ptr, png_const_charp warning_message)$/;"	f
png_color	external/libpng/png.h	/^} png_color;$/;"	t	typeref:struct:png_color_struct
png_color_16	external/libpng/png.h	/^} png_color_16;$/;"	t	typeref:struct:png_color_16_struct
png_color_16_struct	external/libpng/png.h	/^typedef struct png_color_16_struct$/;"	s
png_color_16p	external/libpng/png.h	/^typedef png_color_16 FAR * png_color_16p;$/;"	t
png_color_16pp	external/libpng/png.h	/^typedef png_color_16 FAR * FAR * png_color_16pp;$/;"	t
png_color_8	external/libpng/png.h	/^} png_color_8;$/;"	t	typeref:struct:png_color_8_struct
png_color_8_struct	external/libpng/png.h	/^typedef struct png_color_8_struct$/;"	s
png_color_8p	external/libpng/png.h	/^typedef png_color_8 FAR * png_color_8p;$/;"	t
png_color_8pp	external/libpng/png.h	/^typedef png_color_8 FAR * FAR * png_color_8pp;$/;"	t
png_color_struct	external/libpng/png.h	/^typedef struct png_color_struct$/;"	s
png_colorp	external/libpng/png.h	/^typedef png_color FAR * png_colorp;$/;"	t
png_colorpp	external/libpng/png.h	/^typedef png_color FAR * FAR * png_colorpp;$/;"	t
png_combine_row	external/libpng/pngrutil.c	/^png_combine_row(png_structp png_ptr, png_bytep row, int mask)$/;"	f
png_composite	external/libpng/png.h	2824;"	d
png_composite	external/libpng/png.h	2838;"	d
png_composite_16	external/libpng/png.h	2830;"	d
png_composite_16	external/libpng/png.h	2843;"	d
png_const_charp	external/libpng/pngconf.h	/^typedef PNG_CONST char  FAR * png_const_charp;$/;"	t
png_const_charpp	external/libpng/pngconf.h	/^typedef PNG_CONST char  FAR * FAR * png_const_charpp;$/;"	t
png_convert_from_struct_tm	external/libpng/pngwrite.c	/^png_convert_from_struct_tm(png_timep ptime, struct tm FAR * ttime)$/;"	f
png_convert_from_time_t	external/libpng/pngwrite.c	/^png_convert_from_time_t(png_timep ptime, time_t ttime)$/;"	f
png_convert_size	external/libpng/png.c	/^png_convert_size(size_t size)$/;"	f
png_convert_to_rfc1123	external/libpng/png.c	/^png_convert_to_rfc1123(png_structp png_ptr, png_timep ptime)$/;"	f
png_correct_palette	external/libpng/pngrtran.c	/^png_correct_palette(png_structp png_ptr, png_colorp palette,$/;"	f
png_crc_error	external/libpng/pngrutil.c	/^png_crc_error(png_structp png_ptr)$/;"	f
png_crc_finish	external/libpng/pngrutil.c	/^png_crc_finish(png_structp png_ptr, png_uint_32 skip)$/;"	f
png_crc_read	external/libpng/pngrutil.c	/^png_crc_read(png_structp png_ptr, png_bytep buf, png_size_t length)$/;"	f
png_create_info_struct	external/libpng/png.c	/^png_create_info_struct(png_structp png_ptr)$/;"	f
png_create_read_struct	external/libpng/pngread.c	/^png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr,$/;"	f
png_create_read_struct_2	external/libpng/pngread.c	/^png_create_read_struct_2(png_const_charp user_png_ver, png_voidp error_ptr,$/;"	f
png_create_struct	external/libpng/pngmem.c	/^png_create_struct(int type)$/;"	f
png_create_struct_2	external/libpng/pngmem.c	/^png_create_struct_2(int type, png_malloc_ptr malloc_fn, png_voidp mem_ptr)$/;"	f
png_create_write_struct	external/libpng/pngwrite.c	/^png_create_write_struct(png_const_charp user_png_ver, png_voidp error_ptr,$/;"	f
png_create_write_struct_2	external/libpng/pngwrite.c	/^png_create_write_struct_2(png_const_charp user_png_ver, png_voidp error_ptr,$/;"	f
png_data_freer	external/libpng/png.c	/^png_data_freer(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_debug	external/libpng/png.h	2611;"	d
png_debug	external/libpng/png.h	2631;"	d
png_debug	external/libpng/png.h	2656;"	d
png_debug	external/libpng/png.h	2695;"	d
png_debug1	external/libpng/png.h	2614;"	d
png_debug1	external/libpng/png.h	2639;"	d
png_debug1	external/libpng/png.h	2667;"	d
png_debug1	external/libpng/png.h	2698;"	d
png_debug2	external/libpng/png.h	2617;"	d
png_debug2	external/libpng/png.h	2647;"	d
png_debug2	external/libpng/png.h	2678;"	d
png_debug2	external/libpng/png.h	2701;"	d
png_debug_free	external/libpng/pngtest.c	/^png_debug_free(png_structp png_ptr, png_voidp ptr)$/;"	f
png_debug_malloc	external/libpng/pngtest.c	/^png_debug_malloc(png_structp png_ptr, png_uint_32 size)$/;"	f
png_decompress_chunk	external/libpng/pngrutil.c	/^png_decompress_chunk(png_structp png_ptr, int comp_type,$/;"	f
png_default_error	external/libpng/pngerror.c	/^png_default_error(png_structp png_ptr, png_const_charp error_message)$/;"	f	file:
png_default_flush	external/libpng/pngwio.c	/^png_default_flush(png_structp png_ptr)$/;"	f
png_default_read_data	external/libpng/pngrio.c	/^png_default_read_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f
png_default_read_data	external/libpng/pngrio.c	/^png_default_read_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f	file:
png_default_warning	external/libpng/pngerror.c	/^png_default_warning(png_structp png_ptr, png_const_charp warning_message)$/;"	f	file:
png_default_write_data	external/libpng/pngwio.c	/^png_default_write_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f
png_destroy_info_struct	external/libpng/png.c	/^png_destroy_info_struct(png_structp png_ptr, png_infopp info_ptr_ptr)$/;"	f
png_destroy_read_struct	external/libpng/pngread.c	/^png_destroy_read_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr,$/;"	f
png_destroy_struct	external/libpng/pngmem.c	/^png_destroy_struct(png_voidp struct_ptr)$/;"	f
png_destroy_struct_2	external/libpng/pngmem.c	/^png_destroy_struct_2(png_voidp struct_ptr, png_free_ptr free_fn,$/;"	f
png_destroy_write_struct	external/libpng/pngwrite.c	/^png_destroy_write_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr)$/;"	f
png_digit	external/libpng/pngerror.c	/^static PNG_CONST char png_digit[16] = {$/;"	v	file:
png_do_background	external/libpng/pngrtran.c	/^png_do_background(png_row_infop row_info, png_bytep row,$/;"	f
png_do_bgr	external/libpng/pngtrans.c	/^png_do_bgr(png_row_infop row_info, png_bytep row)$/;"	f
png_do_chop	external/libpng/pngrtran.c	/^png_do_chop(png_row_infop row_info, png_bytep row)$/;"	f
png_do_dither	external/libpng/pngrtran.c	/^png_do_dither(png_row_infop row_info, png_bytep row,$/;"	f
png_do_expand	external/libpng/pngrtran.c	/^png_do_expand(png_row_infop row_info, png_bytep row,$/;"	f
png_do_expand_palette	external/libpng/pngrtran.c	/^png_do_expand_palette(png_row_infop row_info, png_bytep row,$/;"	f
png_do_gamma	external/libpng/pngrtran.c	/^png_do_gamma(png_row_infop row_info, png_bytep row,$/;"	f
png_do_gray_to_rgb	external/libpng/pngrtran.c	/^png_do_gray_to_rgb(png_row_infop row_info, png_bytep row)$/;"	f
png_do_invert	external/libpng/pngtrans.c	/^png_do_invert(png_row_infop row_info, png_bytep row)$/;"	f
png_do_pack	external/libpng/pngwtran.c	/^png_do_pack(png_row_infop row_info, png_bytep row, png_uint_32 bit_depth)$/;"	f
png_do_packswap	external/libpng/pngtrans.c	/^png_do_packswap(png_row_infop row_info, png_bytep row)$/;"	f
png_do_read_filler	external/libpng/pngrtran.c	/^png_do_read_filler(png_row_infop row_info, png_bytep row,$/;"	f
png_do_read_interlace	external/libpng/pngrutil.c	/^png_do_read_interlace(png_structp png_ptr)$/;"	f
png_do_read_intrapixel	external/libpng/pngrtran.c	/^png_do_read_intrapixel(png_row_infop row_info, png_bytep row)$/;"	f
png_do_read_invert_alpha	external/libpng/pngrtran.c	/^png_do_read_invert_alpha(png_row_infop row_info, png_bytep row)$/;"	f
png_do_read_swap_alpha	external/libpng/pngrtran.c	/^png_do_read_swap_alpha(png_row_infop row_info, png_bytep row)$/;"	f
png_do_read_transformations	external/libpng/pngrtran.c	/^png_do_read_transformations(png_structp png_ptr)$/;"	f
png_do_rgb_to_gray	external/libpng/pngrtran.c	/^png_do_rgb_to_gray(png_structp png_ptr, png_row_infop row_info, png_bytep row)$/;"	f
png_do_shift	external/libpng/pngwtran.c	/^png_do_shift(png_row_infop row_info, png_bytep row, png_color_8p bit_depth)$/;"	f
png_do_strip_filler	external/libpng/pngtrans.c	/^png_do_strip_filler(png_row_infop row_info, png_bytep row, png_uint_32 flags)$/;"	f
png_do_swap	external/libpng/pngtrans.c	/^png_do_swap(png_row_infop row_info, png_bytep row)$/;"	f
png_do_unpack	external/libpng/pngrtran.c	/^png_do_unpack(png_row_infop row_info, png_bytep row)$/;"	f
png_do_unshift	external/libpng/pngrtran.c	/^png_do_unshift(png_row_infop row_info, png_bytep row, png_color_8p sig_bits)$/;"	f
png_do_write_interlace	external/libpng/pngwutil.c	/^png_do_write_interlace(png_row_infop row_info, png_bytep row, int pass)$/;"	f
png_do_write_intrapixel	external/libpng/pngwtran.c	/^png_do_write_intrapixel(png_row_infop row_info, png_bytep row)$/;"	f
png_do_write_invert_alpha	external/libpng/pngwtran.c	/^png_do_write_invert_alpha(png_row_infop row_info, png_bytep row)$/;"	f
png_do_write_swap_alpha	external/libpng/pngwtran.c	/^png_do_write_swap_alpha(png_row_infop row_info, png_bytep row)$/;"	f
png_do_write_transformations	external/libpng/pngwtran.c	/^png_do_write_transformations(png_structp png_ptr)$/;"	f
png_doublep	external/libpng/pngconf.h	/^typedef double          FAR * png_doublep;$/;"	t
png_doublep_NULL	external/libpng/png.h	559;"	d
png_doublep_NULL	external/libpng/png.h	575;"	d
png_doublepp	external/libpng/pngconf.h	/^typedef double          FAR * FAR * png_doublepp;$/;"	t
png_dsort	external/libpng/pngrtran.c	/^} png_dsort;$/;"	t	typeref:struct:png_dsort_struct	file:
png_dsort_struct	external/libpng/pngrtran.c	/^typedef struct png_dsort_struct$/;"	s	file:
png_dsortp	external/libpng/pngrtran.c	/^typedef png_dsort FAR *       png_dsortp;$/;"	t	file:
png_dsortpp	external/libpng/pngrtran.c	/^typedef png_dsort FAR * FAR * png_dsortpp;$/;"	t	file:
png_dummy_mmx_support	external/libpng/pnggccrd.c	/^png_dummy_mmx_support(void)$/;"	f
png_err	external/libpng/pngerror.c	/^png_err(png_structp png_ptr)$/;"	f
png_error	external/libpng/pngerror.c	/^png_error(png_structp png_ptr, png_const_charp error_message)$/;"	f
png_error_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_error_ptr) PNGARG((png_structp, png_const_charp));$/;"	t
png_error_ptr_NULL	external/libpng/png.h	560;"	d
png_error_ptr_NULL	external/libpng/png.h	576;"	d
png_far_to_near	external/libpng/pngwio.c	/^void *png_far_to_near(png_structp png_ptr, png_voidp ptr, int check)$/;"	f
png_fixed_point	external/libpng/pngconf.h	/^typedef png_int_32 png_fixed_point;$/;"	t
png_fixed_point_p	external/libpng/pngconf.h	/^typedef png_fixed_point FAR * png_fixed_point_p;$/;"	t
png_fixed_point_pp	external/libpng/pngconf.h	/^typedef png_fixed_point FAR * FAR * png_fixed_point_pp;$/;"	t
png_flush	external/libpng/pngwio.c	/^png_flush(png_structp png_ptr)$/;"	f
png_flush_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_flush_ptr) PNGARG((png_structp));$/;"	t
png_flush_ptr_NULL	external/libpng/png.h	561;"	d
png_flush_ptr_NULL	external/libpng/png.h	577;"	d
png_format_buffer	external/libpng/pngerror.c	/^png_format_buffer(png_structp png_ptr, png_charp buffer, png_const_charp$/;"	f	file:
png_free	external/libpng/pngmem.c	/^png_free(png_structp png_ptr, png_voidp ptr)$/;"	f
png_free_data	external/libpng/png.c	/^png_free_data(png_structp png_ptr, png_infop info_ptr, png_uint_32 mask,$/;"	f
png_free_default	external/libpng/pngmem.c	/^png_free_default(png_structp png_ptr, png_voidp ptr)$/;"	f
png_free_ptr	external/libpng/png.h	/^typedef void (*png_free_ptr) PNGARG((png_structp, png_voidp));$/;"	t
png_free_ptr_NULL	external/libpng/png.h	562;"	d
png_free_ptr_NULL	external/libpng/png.h	578;"	d
png_gamma_shift	external/libpng/pngrtran.c	/^static PNG_CONST int png_gamma_shift[] =$/;"	v	file:
png_get_IHDR	external/libpng/pngget.c	/^png_get_IHDR(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_PLTE	external/libpng/pngget.c	/^png_get_PLTE(png_structp png_ptr, png_infop info_ptr, png_colorp *palette,$/;"	f
png_get_asm_flagmask	external/libpng/pngget.c	/^png_get_asm_flagmask (int flag_select)$/;"	f
png_get_asm_flags	external/libpng/pngget.c	/^png_get_asm_flags (png_structp png_ptr)$/;"	f
png_get_bKGD	external/libpng/pngget.c	/^png_get_bKGD(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_bit_depth	external/libpng/pngget.c	/^png_get_bit_depth(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_cHRM	external/libpng/pngget.c	/^png_get_cHRM(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_cHRM_fixed	external/libpng/pngget.c	/^png_get_cHRM_fixed(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_channels	external/libpng/pngget.c	/^png_get_channels(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_color_type	external/libpng/pngget.c	/^png_get_color_type(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_compression_buffer_size	external/libpng/pngget.c	/^png_get_compression_buffer_size(png_structp png_ptr)$/;"	f
png_get_compression_type	external/libpng/pngget.c	/^png_get_compression_type(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_copyright	external/libpng/png.c	/^png_get_copyright(png_structp png_ptr)$/;"	f
png_get_error_ptr	external/libpng/pngerror.c	/^png_get_error_ptr(png_structp png_ptr)$/;"	f
png_get_filter_type	external/libpng/pngget.c	/^png_get_filter_type(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_gAMA	external/libpng/pngget.c	/^png_get_gAMA(png_structp png_ptr, png_infop info_ptr, double *file_gamma)$/;"	f
png_get_gAMA_fixed	external/libpng/pngget.c	/^png_get_gAMA_fixed(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_hIST	external/libpng/pngget.c	/^png_get_hIST(png_structp png_ptr, png_infop info_ptr, png_uint_16p *hist)$/;"	f
png_get_header_ver	external/libpng/png.c	/^png_get_header_ver(png_structp png_ptr)$/;"	f
png_get_header_version	external/libpng/png.c	/^png_get_header_version(png_structp png_ptr)$/;"	f
png_get_iCCP	external/libpng/pngget.c	/^png_get_iCCP(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_image_height	external/libpng/pngget.c	/^png_get_image_height(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_image_width	external/libpng/pngget.c	/^png_get_image_width(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_int_32	external/libpng/png.h	2861;"	d
png_get_int_32	external/libpng/pngrutil.c	/^png_get_int_32(png_bytep buf)$/;"	f
png_get_interlace_type	external/libpng/pngget.c	/^png_get_interlace_type(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_io_ptr	external/libpng/png.c	/^png_get_io_ptr(png_structp png_ptr)$/;"	f
png_get_libpng_ver	external/libpng/png.c	/^png_get_libpng_ver(png_structp png_ptr)$/;"	f
png_get_mem_ptr	external/libpng/pngmem.c	/^png_get_mem_ptr(png_structp png_ptr)$/;"	f
png_get_mmx_bitdepth_threshold	external/libpng/pngget.c	/^png_get_mmx_bitdepth_threshold (png_structp png_ptr)$/;"	f
png_get_mmx_flagmask	external/libpng/pngget.c	/^png_get_mmx_flagmask (int flag_select, int *compilerID)$/;"	f
png_get_mmx_rowbytes_threshold	external/libpng/pngget.c	/^png_get_mmx_rowbytes_threshold (png_structp png_ptr)$/;"	f
png_get_oFFs	external/libpng/pngget.c	/^png_get_oFFs(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_pCAL	external/libpng/pngget.c	/^png_get_pCAL(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_pHYs	external/libpng/pngget.c	/^png_get_pHYs(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_pHYs_dpi	external/libpng/pngget.c	/^png_get_pHYs_dpi(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_pixel_aspect_ratio	external/libpng/pngget.c	/^png_get_pixel_aspect_ratio(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_pixels_per_inch	external/libpng/pngget.c	/^png_get_pixels_per_inch(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_pixels_per_meter	external/libpng/pngget.c	/^png_get_pixels_per_meter(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_progressive_ptr	external/libpng/pngpread.c	/^png_get_progressive_ptr(png_structp png_ptr)$/;"	f
png_get_rgb_to_gray_status	external/libpng/pngget.c	/^png_get_rgb_to_gray_status (png_structp png_ptr)$/;"	f
png_get_rowbytes	external/libpng/pngget.c	/^png_get_rowbytes(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_rows	external/libpng/pngget.c	/^png_get_rows(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_sBIT	external/libpng/pngget.c	/^png_get_sBIT(png_structp png_ptr, png_infop info_ptr, png_color_8p *sig_bit)$/;"	f
png_get_sCAL	external/libpng/pngget.c	/^png_get_sCAL(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_sCAL_s	external/libpng/pngget.c	/^png_get_sCAL_s(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_sPLT	external/libpng/pngget.c	/^png_get_sPLT(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_sRGB	external/libpng/pngget.c	/^png_get_sRGB(png_structp png_ptr, png_infop info_ptr, int *file_srgb_intent)$/;"	f
png_get_signature	external/libpng/pngget.c	/^png_get_signature(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_tIME	external/libpng/pngget.c	/^png_get_tIME(png_structp png_ptr, png_infop info_ptr, png_timep *mod_time)$/;"	f
png_get_tRNS	external/libpng/pngget.c	/^png_get_tRNS(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_text	external/libpng/pngget.c	/^png_get_text(png_structp png_ptr, png_infop info_ptr, png_textp *text_ptr,$/;"	f
png_get_uint_16	external/libpng/png.h	2860;"	d
png_get_uint_16	external/libpng/pngrutil.c	/^png_get_uint_16(png_bytep buf)$/;"	f
png_get_uint_31	external/libpng/pngrutil.c	/^png_get_uint_31(png_structp png_ptr, png_bytep buf)$/;"	f
png_get_uint_32	external/libpng/png.h	2859;"	d
png_get_uint_32	external/libpng/pngrutil.c	/^png_get_uint_32(png_bytep buf)$/;"	f
png_get_unknown_chunks	external/libpng/pngget.c	/^png_get_unknown_chunks(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_get_user_chunk_ptr	external/libpng/pngget.c	/^png_get_user_chunk_ptr(png_structp png_ptr)$/;"	f
png_get_user_height_max	external/libpng/pngget.c	/^png_get_user_height_max (png_structp png_ptr)$/;"	f
png_get_user_transform_ptr	external/libpng/pngtrans.c	/^png_get_user_transform_ptr(png_structp png_ptr)$/;"	f
png_get_user_width_max	external/libpng/pngget.c	/^png_get_user_width_max (png_structp png_ptr)$/;"	f
png_get_valid	external/libpng/pngget.c	/^png_get_valid(png_structp png_ptr, png_infop info_ptr, png_uint_32 flag)$/;"	f
png_get_x_offset_inches	external/libpng/pngget.c	/^png_get_x_offset_inches(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_x_offset_microns	external/libpng/pngget.c	/^png_get_x_offset_microns(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_x_offset_pixels	external/libpng/pngget.c	/^png_get_x_offset_pixels(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_x_pixels_per_inch	external/libpng/pngget.c	/^png_get_x_pixels_per_inch(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_x_pixels_per_meter	external/libpng/pngget.c	/^png_get_x_pixels_per_meter(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_y_offset_inches	external/libpng/pngget.c	/^png_get_y_offset_inches(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_y_offset_microns	external/libpng/pngget.c	/^png_get_y_offset_microns(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_y_offset_pixels	external/libpng/pngget.c	/^png_get_y_offset_pixels(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_y_pixels_per_inch	external/libpng/pngget.c	/^png_get_y_pixels_per_inch(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_get_y_pixels_per_meter	external/libpng/pngget.c	/^png_get_y_pixels_per_meter(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_handle_IEND	external/libpng/pngrutil.c	/^png_handle_IEND(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_IHDR	external/libpng/pngrutil.c	/^png_handle_IHDR(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_PLTE	external/libpng/pngrutil.c	/^png_handle_PLTE(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_as_unknown	external/libpng/png.c	/^png_handle_as_unknown(png_structp png_ptr, png_bytep chunk_name)$/;"	f
png_handle_bKGD	external/libpng/pngrutil.c	/^png_handle_bKGD(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_cHRM	external/libpng/pngrutil.c	/^png_handle_cHRM(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_gAMA	external/libpng/pngrutil.c	/^png_handle_gAMA(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_hIST	external/libpng/pngrutil.c	/^png_handle_hIST(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_iCCP	external/libpng/pngrutil.c	/^png_handle_iCCP(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_iTXt	external/libpng/pngrutil.c	/^png_handle_iTXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_oFFs	external/libpng/pngrutil.c	/^png_handle_oFFs(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_pCAL	external/libpng/pngrutil.c	/^png_handle_pCAL(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_pHYs	external/libpng/pngrutil.c	/^png_handle_pHYs(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_sBIT	external/libpng/pngrutil.c	/^png_handle_sBIT(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_sCAL	external/libpng/pngrutil.c	/^png_handle_sCAL(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_sPLT	external/libpng/pngrutil.c	/^png_handle_sPLT(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_sRGB	external/libpng/pngrutil.c	/^png_handle_sRGB(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_tEXt	external/libpng/pngrutil.c	/^png_handle_tEXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_tIME	external/libpng/pngrutil.c	/^png_handle_tIME(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_tRNS	external/libpng/pngrutil.c	/^png_handle_tRNS(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_unknown	external/libpng/pngrutil.c	/^png_handle_unknown(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_handle_zTXt	external/libpng/pngrutil.c	/^png_handle_zTXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)$/;"	f
png_inflate	external/libpng/pngrutil.c	/^png_inflate(png_structp png_ptr, const png_byte *data, png_size_t size,$/;"	f	file:
png_info	external/libpng/png.h	/^} png_info;$/;"	t	typeref:struct:png_info_struct
png_info_destroy	external/libpng/png.c	/^png_info_destroy(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_info_init	external/libpng/png.c	/^png_info_init(png_infop info_ptr)$/;"	f
png_info_init	external/libpng/png.c	307;"	d	file:
png_info_init	external/libpng/png.h	1637;"	d
png_info_init	external/libpng/png.h	1638;"	d
png_info_init_3	external/libpng/png.c	/^png_info_init_3(png_infopp ptr_ptr, png_size_t png_info_struct_size)$/;"	f
png_info_struct	external/libpng/png.h	/^typedef struct png_info_struct$/;"	s
png_infop	external/libpng/png.h	/^typedef png_info FAR * png_infop;$/;"	t
png_infopp	external/libpng/png.h	/^typedef png_info FAR * FAR * png_infopp;$/;"	t
png_infopp_NULL	external/libpng/png.h	563;"	d
png_infopp_NULL	external/libpng/png.h	579;"	d
png_init_io	external/libpng/png.c	/^png_init_io(png_structp png_ptr, png_FILE_p fp)$/;"	f
png_init_read_transformations	external/libpng/pngrtran.c	/^png_init_read_transformations(png_structp png_ptr)$/;"	f
png_int_16	external/libpng/pngconf.h	/^typedef short png_int_16;$/;"	t
png_int_16p	external/libpng/pngconf.h	/^typedef png_int_16      FAR * png_int_16p;$/;"	t
png_int_16pp	external/libpng/pngconf.h	/^typedef png_int_16      FAR * FAR * png_int_16pp;$/;"	t
png_int_32	external/libpng/pngconf.h	/^typedef long png_int_32;$/;"	t
png_int_32p	external/libpng/pngconf.h	/^typedef png_int_32      FAR * png_int_32p;$/;"	t
png_int_32pp	external/libpng/pngconf.h	/^typedef png_int_32      FAR * FAR * png_int_32pp;$/;"	t
png_jmpbuf	external/libpng/pngconf.h	1605;"	d
png_jmpbuf	external/libpng/pngconf.h	1607;"	d
png_jmpbuf	external/libpng/pngtest.c	113;"	d	file:
png_libpng_ver	external/libpng/png.c	/^PNG_CONST char png_libpng_ver[18] = PNG_LIBPNG_VER_STRING;$/;"	v
png_libpng_ver	external/libpng/png.h	598;"	d
png_malloc	external/libpng/pngmem.c	/^png_malloc(png_structp png_ptr, png_uint_32 size)$/;"	f
png_malloc_default	external/libpng/pngmem.c	/^png_malloc_default(png_structp png_ptr, png_uint_32 size)$/;"	f
png_malloc_ptr	external/libpng/png.h	/^typedef png_voidp (*png_malloc_ptr) PNGARG((png_structp, png_size_t));$/;"	t
png_malloc_ptr_NULL	external/libpng/png.h	564;"	d
png_malloc_ptr_NULL	external/libpng/png.h	580;"	d
png_malloc_warn	external/libpng/png.h	2134;"	d
png_malloc_warn	external/libpng/pngmem.c	/^png_malloc_warn(png_structp png_ptr, png_uint_32 size)$/;"	f
png_malloc_warn	external/libpng/pngmem.c	563;"	d	file:
png_memcmp	external/libpng/pngconf.h	1619;"	d
png_memcmp	external/libpng/pngconf.h	1648;"	d
png_memcpy	external/libpng/pngconf.h	1620;"	d
png_memcpy	external/libpng/pngconf.h	1649;"	d
png_memcpy_check	external/libpng/pngmem.c	/^png_memcpy_check (png_structp png_ptr, png_voidp s1, png_voidp s2,$/;"	f
png_memset	external/libpng/pngconf.h	1621;"	d
png_memset	external/libpng/pngconf.h	1650;"	d
png_memset_check	external/libpng/pngmem.c	/^png_memset_check (png_structp png_ptr, png_voidp s1, int value,$/;"	f
png_mmx_support	external/libpng/png.c	/^png_mmx_support(void)$/;"	f
png_pass_dsp_mask	external/libpng/png.c	/^PNG_CONST int FARDATA png_pass_dsp_mask[]$/;"	v
png_pass_inc	external/libpng/png.c	/^PNG_CONST int FARDATA png_pass_inc[] = {8, 8, 4, 4, 2, 2, 1};$/;"	v
png_pass_mask	external/libpng/png.c	/^PNG_CONST int FARDATA png_pass_mask[] =$/;"	v
png_pass_start	external/libpng/png.c	/^PNG_CONST int FARDATA png_pass_start[] = {0, 4, 0, 2, 0, 1, 0};$/;"	v
png_pass_yinc	external/libpng/png.c	/^PNG_CONST int FARDATA png_pass_yinc[] = {8, 8, 8, 4, 4, 2, 2};$/;"	v
png_pass_ystart	external/libpng/png.c	/^PNG_CONST int FARDATA png_pass_ystart[] = {0, 0, 4, 0, 2, 0, 1};$/;"	v
png_permit_empty_plte	external/libpng/pngset.c	/^png_permit_empty_plte (png_structp png_ptr, int empty_plte_permitted)$/;"	f
png_permit_mng_features	external/libpng/pngset.c	/^png_permit_mng_features (png_structp png_ptr, png_uint_32 mng_features)$/;"	f
png_process_IDAT_data	external/libpng/pngpread.c	/^png_process_IDAT_data(png_structp png_ptr, png_bytep buffer,$/;"	f
png_process_data	external/libpng/pngpread.c	/^png_process_data(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_process_some_data	external/libpng/pngpread.c	/^png_process_some_data(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_progressive_combine_row	external/libpng/pngpread.c	/^png_progressive_combine_row (png_structp png_ptr,$/;"	f
png_progressive_end_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_progressive_end_ptr) PNGARG((png_structp, png_infop));$/;"	t
png_progressive_info_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_progressive_info_ptr) PNGARG((png_structp, png_infop));$/;"	t
png_progressive_row_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_progressive_row_ptr) PNGARG((png_structp, png_bytep,$/;"	t
png_push_crc_finish	external/libpng/pngpread.c	/^png_push_crc_finish(png_structp png_ptr)$/;"	f
png_push_crc_skip	external/libpng/pngpread.c	/^png_push_crc_skip(png_structp png_ptr, png_uint_32 skip)$/;"	f
png_push_fill_buffer	external/libpng/pngpread.c	/^png_push_fill_buffer(png_structp png_ptr, png_bytep buffer, png_size_t length)$/;"	f
png_push_handle_iTXt	external/libpng/pngpread.c	/^png_push_handle_iTXt(png_structp png_ptr, png_infop info_ptr, png_uint_32$/;"	f
png_push_handle_tEXt	external/libpng/pngpread.c	/^png_push_handle_tEXt(png_structp png_ptr, png_infop info_ptr, png_uint_32$/;"	f
png_push_handle_unknown	external/libpng/pngpread.c	/^png_push_handle_unknown(png_structp png_ptr, png_infop info_ptr, png_uint_32$/;"	f
png_push_handle_zTXt	external/libpng/pngpread.c	/^png_push_handle_zTXt(png_structp png_ptr, png_infop info_ptr, png_uint_32$/;"	f
png_push_have_end	external/libpng/pngpread.c	/^png_push_have_end(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_have_info	external/libpng/pngpread.c	/^png_push_have_info(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_have_row	external/libpng/pngpread.c	/^png_push_have_row(png_structp png_ptr, png_bytep row)$/;"	f
png_push_process_row	external/libpng/pngpread.c	/^png_push_process_row(png_structp png_ptr)$/;"	f
png_push_read_IDAT	external/libpng/pngpread.c	/^png_push_read_IDAT(png_structp png_ptr)$/;"	f
png_push_read_chunk	external/libpng/pngpread.c	/^png_push_read_chunk(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_read_iTXt	external/libpng/pngpread.c	/^png_push_read_iTXt(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_read_sig	external/libpng/pngpread.c	/^png_push_read_sig(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_read_tEXt	external/libpng/pngpread.c	/^png_push_read_tEXt(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_read_zTXt	external/libpng/pngpread.c	/^png_push_read_zTXt(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_push_restore_buffer	external/libpng/pngpread.c	/^png_push_restore_buffer(png_structp png_ptr, png_bytep buffer,$/;"	f
png_push_save_buffer	external/libpng/pngpread.c	/^png_push_save_buffer(png_structp png_ptr)$/;"	f
png_read_chunk_header	external/libpng/pngrutil.c	/^png_read_chunk_header(png_structp png_ptr)$/;"	f
png_read_data	external/libpng/pngrio.c	/^png_read_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f
png_read_destroy	external/libpng/pngread.c	/^png_read_destroy(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_read_end	external/libpng/pngread.c	/^png_read_end(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_read_filter_row	external/libpng/pngrutil.c	/^png_read_filter_row(png_structp png_ptr, png_row_infop row_info, png_bytep row,$/;"	f
png_read_finish_row	external/libpng/pngrutil.c	/^png_read_finish_row(png_structp png_ptr)$/;"	f
png_read_image	external/libpng/pngread.c	/^png_read_image(png_structp png_ptr, png_bytepp image)$/;"	f
png_read_info	external/libpng/pngread.c	/^png_read_info(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_read_init	external/libpng/png.h	3091;"	d
png_read_init	external/libpng/png.h	3092;"	d
png_read_init	external/libpng/pngread.c	/^png_read_init(png_structp png_ptr)$/;"	f
png_read_init	external/libpng/pngread.c	203;"	d	file:
png_read_init_2	external/libpng/pngread.c	/^png_read_init_2(png_structp png_ptr, png_const_charp user_png_ver,$/;"	f
png_read_init_3	external/libpng/pngread.c	/^png_read_init_3(png_structpp ptr_ptr, png_const_charp user_png_ver,$/;"	f
png_read_png	external/libpng/pngread.c	/^png_read_png(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_read_push_finish_row	external/libpng/pngpread.c	/^png_read_push_finish_row(png_structp png_ptr)$/;"	f
png_read_row	external/libpng/pngread.c	/^png_read_row(png_structp png_ptr, png_bytep row, png_bytep dsp_row)$/;"	f
png_read_rows	external/libpng/pngread.c	/^png_read_rows(png_structp png_ptr, png_bytepp row,$/;"	f
png_read_start_row	external/libpng/pngrutil.c	/^png_read_start_row(png_structp png_ptr)$/;"	f
png_read_status_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_read_status_ptr) PNGARG((png_structp, png_uint_32,$/;"	t
png_read_status_ptr_NULL	external/libpng/png.h	565;"	d
png_read_status_ptr_NULL	external/libpng/png.h	581;"	d
png_read_transform_info	external/libpng/pngrtran.c	/^png_read_transform_info(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_read_update_info	external/libpng/pngread.c	/^png_read_update_info(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_reset_crc	external/libpng/png.c	/^png_reset_crc(png_structp png_ptr)$/;"	f
png_reset_zstream	external/libpng/png.c	/^png_reset_zstream(png_structp png_ptr)$/;"	f
png_row_info	external/libpng/png.h	/^} png_row_info;$/;"	t	typeref:struct:png_row_info_struct
png_row_info_struct	external/libpng/png.h	/^typedef struct png_row_info_struct$/;"	s
png_row_infop	external/libpng/png.h	/^typedef png_row_info FAR * png_row_infop;$/;"	t
png_row_infopp	external/libpng/png.h	/^typedef png_row_info FAR * FAR * png_row_infopp;$/;"	t
png_rw_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_rw_ptr) PNGARG((png_structp, png_bytep, png_size_t));$/;"	t
png_rw_ptr_NULL	external/libpng/png.h	566;"	d
png_rw_ptr_NULL	external/libpng/png.h	582;"	d
png_sPLT_entry	external/libpng/png.h	/^} png_sPLT_entry;$/;"	t	typeref:struct:png_sPLT_entry_struct
png_sPLT_entry_struct	external/libpng/png.h	/^typedef struct png_sPLT_entry_struct$/;"	s
png_sPLT_entryp	external/libpng/png.h	/^typedef png_sPLT_entry FAR * png_sPLT_entryp;$/;"	t
png_sPLT_entrypp	external/libpng/png.h	/^typedef png_sPLT_entry FAR * FAR * png_sPLT_entrypp;$/;"	t
png_sPLT_struct	external/libpng/png.h	/^typedef struct png_sPLT_struct$/;"	s
png_sPLT_t	external/libpng/png.h	/^} png_sPLT_t;$/;"	t	typeref:struct:png_sPLT_struct
png_sPLT_tp	external/libpng/png.h	/^typedef png_sPLT_t FAR * png_sPLT_tp;$/;"	t
png_sPLT_tpp	external/libpng/png.h	/^typedef png_sPLT_t FAR * FAR * png_sPLT_tpp;$/;"	t
png_save_int_32	external/libpng/pngwutil.c	/^png_save_int_32(png_bytep buf, png_int_32 i)$/;"	f
png_save_uint_16	external/libpng/pngwutil.c	/^png_save_uint_16(png_bytep buf, unsigned int i)$/;"	f
png_save_uint_32	external/libpng/pngwutil.c	/^png_save_uint_32(png_bytep buf, png_uint_32 i)$/;"	f
png_set_IHDR	external/libpng/pngset.c	/^png_set_IHDR(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_PLTE	external/libpng/pngset.c	/^png_set_PLTE(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_add_alpha	external/libpng/pngtrans.c	/^png_set_add_alpha(png_structp png_ptr, png_uint_32 filler, int filler_loc)$/;"	f
png_set_asm_flags	external/libpng/pngset.c	/^png_set_asm_flags (png_structp png_ptr, png_uint_32 asm_flags)$/;"	f
png_set_bKGD	external/libpng/pngset.c	/^png_set_bKGD(png_structp png_ptr, png_infop info_ptr, png_color_16p background)$/;"	f
png_set_background	external/libpng/pngrtran.c	/^png_set_background(png_structp png_ptr,$/;"	f
png_set_benign_errors	external/libpng/pngset.c	/^png_set_benign_errors(png_structp png_ptr, int allowed)$/;"	f
png_set_bgr	external/libpng/pngtrans.c	/^png_set_bgr(png_structp png_ptr)$/;"	f
png_set_cHRM	external/libpng/pngset.c	/^png_set_cHRM(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_cHRM_fixed	external/libpng/pngset.c	/^png_set_cHRM_fixed(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_compression_buffer_size	external/libpng/pngset.c	/^png_set_compression_buffer_size(png_structp png_ptr,$/;"	f
png_set_compression_level	external/libpng/pngwrite.c	/^png_set_compression_level(png_structp png_ptr, int level)$/;"	f
png_set_compression_mem_level	external/libpng/pngwrite.c	/^png_set_compression_mem_level(png_structp png_ptr, int mem_level)$/;"	f
png_set_compression_method	external/libpng/pngwrite.c	/^png_set_compression_method(png_structp png_ptr, int method)$/;"	f
png_set_compression_strategy	external/libpng/pngwrite.c	/^png_set_compression_strategy(png_structp png_ptr, int strategy)$/;"	f
png_set_compression_window_bits	external/libpng/pngwrite.c	/^png_set_compression_window_bits(png_structp png_ptr, int window_bits)$/;"	f
png_set_crc_action	external/libpng/pngrtran.c	/^png_set_crc_action(png_structp png_ptr, int crit_action, int ancil_action)$/;"	f
png_set_dither	external/libpng/pngrtran.c	/^png_set_dither(png_structp png_ptr, png_colorp palette,$/;"	f
png_set_error_fn	external/libpng/pngerror.c	/^png_set_error_fn(png_structp png_ptr, png_voidp error_ptr,$/;"	f
png_set_expand	external/libpng/pngrtran.c	/^png_set_expand(png_structp png_ptr)$/;"	f
png_set_expand_gray_1_2_4_to_8	external/libpng/pngrtran.c	/^png_set_expand_gray_1_2_4_to_8(png_structp png_ptr)$/;"	f
png_set_filler	external/libpng/pngtrans.c	/^png_set_filler(png_structp png_ptr, png_uint_32 filler, int filler_loc)$/;"	f
png_set_filter	external/libpng/pngwrite.c	/^png_set_filter(png_structp png_ptr, int method, int filters)$/;"	f
png_set_filter_heuristics	external/libpng/pngwrite.c	/^png_set_filter_heuristics(png_structp png_ptr, int heuristic_method,$/;"	f
png_set_flush	external/libpng/pngwrite.c	/^png_set_flush(png_structp png_ptr, int nrows)$/;"	f
png_set_gAMA	external/libpng/pngset.c	/^png_set_gAMA(png_structp png_ptr, png_infop info_ptr, double file_gamma)$/;"	f
png_set_gAMA_fixed	external/libpng/pngset.c	/^png_set_gAMA_fixed(png_structp png_ptr, png_infop info_ptr, png_fixed_point$/;"	f
png_set_gamma	external/libpng/pngrtran.c	/^png_set_gamma(png_structp png_ptr, double scrn_gamma, double file_gamma)$/;"	f
png_set_gray_1_2_4_to_8	external/libpng/pngrtran.c	/^png_set_gray_1_2_4_to_8(png_structp png_ptr)$/;"	f
png_set_gray_to_rgb	external/libpng/pngrtran.c	/^png_set_gray_to_rgb(png_structp png_ptr)$/;"	f
png_set_hIST	external/libpng/pngset.c	/^png_set_hIST(png_structp png_ptr, png_infop info_ptr, png_uint_16p hist)$/;"	f
png_set_iCCP	external/libpng/pngset.c	/^png_set_iCCP(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_interlace_handling	external/libpng/pngtrans.c	/^png_set_interlace_handling(png_structp png_ptr)$/;"	f
png_set_invalid	external/libpng/pngset.c	/^png_set_invalid(png_structp png_ptr, png_infop info_ptr, int mask)$/;"	f
png_set_invert_alpha	external/libpng/pngtrans.c	/^png_set_invert_alpha(png_structp png_ptr)$/;"	f
png_set_invert_mono	external/libpng/pngtrans.c	/^png_set_invert_mono(png_structp png_ptr)$/;"	f
png_set_keep_unknown_chunks	external/libpng/pngset.c	/^png_set_keep_unknown_chunks(png_structp png_ptr, int keep, png_bytep$/;"	f
png_set_mem_fn	external/libpng/pngmem.c	/^png_set_mem_fn(png_structp png_ptr, png_voidp mem_ptr, png_malloc_ptr$/;"	f
png_set_mmx_thresholds	external/libpng/pngset.c	/^png_set_mmx_thresholds (png_structp png_ptr,$/;"	f
png_set_oFFs	external/libpng/pngset.c	/^png_set_oFFs(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_pCAL	external/libpng/pngset.c	/^png_set_pCAL(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_pHYs	external/libpng/pngset.c	/^png_set_pHYs(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_packing	external/libpng/pngtrans.c	/^png_set_packing(png_structp png_ptr)$/;"	f
png_set_packswap	external/libpng/pngtrans.c	/^png_set_packswap(png_structp png_ptr)$/;"	f
png_set_palette_to_rgb	external/libpng/pngrtran.c	/^png_set_palette_to_rgb(png_structp png_ptr)$/;"	f
png_set_progressive_read_fn	external/libpng/pngpread.c	/^png_set_progressive_read_fn(png_structp png_ptr, png_voidp progressive_ptr,$/;"	f
png_set_read_fn	external/libpng/pngrio.c	/^png_set_read_fn(png_structp png_ptr, png_voidp io_ptr,$/;"	f
png_set_read_status_fn	external/libpng/pngread.c	/^png_set_read_status_fn(png_structp png_ptr, png_read_status_ptr read_row_fn)$/;"	f
png_set_read_user_chunk_fn	external/libpng/pngset.c	/^png_set_read_user_chunk_fn(png_structp png_ptr, png_voidp user_chunk_ptr,$/;"	f
png_set_read_user_transform_fn	external/libpng/pngrtran.c	/^png_set_read_user_transform_fn(png_structp png_ptr, png_user_transform_ptr$/;"	f
png_set_rgb_to_gray	external/libpng/pngrtran.c	/^png_set_rgb_to_gray(png_structp png_ptr, int error_action, double red,$/;"	f
png_set_rgb_to_gray_fixed	external/libpng/pngrtran.c	/^png_set_rgb_to_gray_fixed(png_structp png_ptr, int error_action,$/;"	f
png_set_rows	external/libpng/pngset.c	/^png_set_rows(png_structp png_ptr, png_infop info_ptr, png_bytepp row_pointers)$/;"	f
png_set_sBIT	external/libpng/pngset.c	/^png_set_sBIT(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_sCAL	external/libpng/pngset.c	/^png_set_sCAL(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_sCAL_s	external/libpng/pngset.c	/^png_set_sCAL_s(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_sPLT	external/libpng/pngset.c	/^png_set_sPLT(png_structp png_ptr,$/;"	f
png_set_sRGB	external/libpng/pngset.c	/^png_set_sRGB(png_structp png_ptr, png_infop info_ptr, int intent)$/;"	f
png_set_sRGB_gAMA_and_cHRM	external/libpng/pngset.c	/^png_set_sRGB_gAMA_and_cHRM(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_shift	external/libpng/pngtrans.c	/^png_set_shift(png_structp png_ptr, png_color_8p true_bits)$/;"	f
png_set_sig_bytes	external/libpng/png.c	/^png_set_sig_bytes(png_structp png_ptr, int num_bytes)$/;"	f
png_set_strip_16	external/libpng/pngrtran.c	/^png_set_strip_16(png_structp png_ptr)$/;"	f
png_set_strip_alpha	external/libpng/pngrtran.c	/^png_set_strip_alpha(png_structp png_ptr)$/;"	f
png_set_strip_error_numbers	external/libpng/pngerror.c	/^png_set_strip_error_numbers(png_structp png_ptr, png_uint_32 strip_mode)$/;"	f
png_set_swap	external/libpng/pngtrans.c	/^png_set_swap(png_structp png_ptr)$/;"	f
png_set_swap_alpha	external/libpng/pngtrans.c	/^png_set_swap_alpha(png_structp png_ptr)$/;"	f
png_set_tIME	external/libpng/pngset.c	/^png_set_tIME(png_structp png_ptr, png_infop info_ptr, png_timep mod_time)$/;"	f
png_set_tRNS	external/libpng/pngset.c	/^png_set_tRNS(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_tRNS_to_alpha	external/libpng/pngrtran.c	/^png_set_tRNS_to_alpha(png_structp png_ptr)$/;"	f
png_set_text	external/libpng/pngset.c	/^png_set_text(png_structp png_ptr, png_infop info_ptr, png_textp text_ptr,$/;"	f
png_set_text_2	external/libpng/pngset.c	/^png_set_text_2(png_structp png_ptr, png_infop info_ptr, png_textp text_ptr,$/;"	f
png_set_unknown_chunk_location	external/libpng/pngset.c	/^png_set_unknown_chunk_location(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_set_unknown_chunks	external/libpng/pngset.c	/^png_set_unknown_chunks(png_structp png_ptr,$/;"	f
png_set_user_limits	external/libpng/pngset.c	/^png_set_user_limits (png_structp png_ptr, png_uint_32 user_width_max,$/;"	f
png_set_user_transform_info	external/libpng/pngtrans.c	/^png_set_user_transform_info(png_structp png_ptr, png_voidp$/;"	f
png_set_write_fn	external/libpng/pngwio.c	/^png_set_write_fn(png_structp png_ptr, png_voidp io_ptr,$/;"	f
png_set_write_status_fn	external/libpng/pngwrite.c	/^png_set_write_status_fn(png_structp png_ptr, png_write_status_ptr write_row_fn)$/;"	f
png_set_write_user_transform_fn	external/libpng/pngwrite.c	/^png_set_write_user_transform_fn(png_structp png_ptr, png_user_transform_ptr$/;"	f
png_sig	external/libpng/png.c	/^PNG_CONST png_byte FARDATA png_sig[8] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v
png_sig_cmp	external/libpng/png.c	/^png_sig_cmp(png_bytep sig, png_size_t start, png_size_t num_to_check)$/;"	f
png_size_t	external/libpng/pngconf.h	/^   typedef PNG_SIZE_T png_size_t;$/;"	t
png_size_t	external/libpng/pngconf.h	/^   typedef size_t png_size_t;$/;"	t
png_sizeof	external/libpng/pngconf.h	1245;"	d
png_sizeof	external/libpng/pngconf.h	1248;"	d
png_snprintf	external/libpng/pngconf.h	1617;"	d
png_snprintf	external/libpng/pngconf.h	1627;"	d
png_snprintf	external/libpng/pngconf.h	1631;"	d
png_snprintf	external/libpng/pngconf.h	1642;"	d
png_snprintf2	external/libpng/pngconf.h	1628;"	d
png_snprintf2	external/libpng/pngconf.h	1632;"	d
png_snprintf2	external/libpng/pngconf.h	1643;"	d
png_snprintf6	external/libpng/pngconf.h	1629;"	d
png_snprintf6	external/libpng/pngconf.h	1633;"	d
png_snprintf6	external/libpng/pngconf.h	1644;"	d
png_start_read_image	external/libpng/pngread.c	/^png_start_read_image(png_structp png_ptr)$/;"	f
png_strlen	external/libpng/pngconf.h	1618;"	d
png_strlen	external/libpng/pngconf.h	1647;"	d
png_strtod	external/libpng/pngrutil.c	/^__inline double png_strtod(png_structp png_ptr, PNG_CONST char *nptr,$/;"	f
png_strtod	external/libpng/pngrutil.c	49;"	d	file:
png_struct	external/libpng/png.h	/^typedef struct png_struct_def png_struct;$/;"	t	typeref:struct:png_struct_def
png_struct_def	external/libpng/png.h	/^struct png_struct_def$/;"	s
png_structp	external/libpng/png.h	/^typedef png_struct FAR * png_structp;$/;"	t
png_structp_NULL	external/libpng/png.h	567;"	d
png_structp_NULL	external/libpng/png.h	583;"	d
png_structpp	external/libpng/png.h	/^typedef png_struct FAR * FAR * png_structpp;$/;"	t
png_text	external/libpng/png.h	/^} png_text;$/;"	t	typeref:struct:png_text_struct
png_text_compress	external/libpng/pngwutil.c	/^png_text_compress(png_structp png_ptr,$/;"	f	file:
png_text_struct	external/libpng/png.h	/^typedef struct png_text_struct$/;"	s
png_textp	external/libpng/png.h	/^typedef png_text FAR * png_textp;$/;"	t
png_textpp	external/libpng/png.h	/^typedef png_text FAR * FAR * png_textpp;$/;"	t
png_time	external/libpng/png.h	/^} png_time;$/;"	t	typeref:struct:png_time_struct
png_time_struct	external/libpng/png.h	/^typedef struct png_time_struct$/;"	s
png_timep	external/libpng/png.h	/^typedef png_time FAR * png_timep;$/;"	t
png_timepp	external/libpng/png.h	/^typedef png_time FAR * FAR * png_timepp;$/;"	t
png_uint_16	external/libpng/pngconf.h	/^typedef unsigned short png_uint_16;$/;"	t
png_uint_16p	external/libpng/pngconf.h	/^typedef png_uint_16     FAR * png_uint_16p;$/;"	t
png_uint_16p_NULL	external/libpng/png.h	568;"	d
png_uint_16p_NULL	external/libpng/png.h	584;"	d
png_uint_16pp	external/libpng/pngconf.h	/^typedef png_uint_16     FAR * FAR * png_uint_16pp;$/;"	t
png_uint_32	external/libpng/pngconf.h	/^typedef unsigned long png_uint_32;$/;"	t
png_uint_32p	external/libpng/pngconf.h	/^typedef png_uint_32     FAR * png_uint_32p;$/;"	t
png_uint_32pp	external/libpng/pngconf.h	/^typedef png_uint_32     FAR * FAR * png_uint_32pp;$/;"	t
png_unknown_chunk	external/libpng/png.h	/^png_unknown_chunk;$/;"	t	typeref:struct:png_unknown_chunk_t
png_unknown_chunk_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_unknown_chunk_ptr) PNGARG((png_structp));$/;"	t
png_unknown_chunk_t	external/libpng/png.h	/^typedef struct png_unknown_chunk_t$/;"	s
png_unknown_chunkp	external/libpng/png.h	/^typedef png_unknown_chunk FAR * png_unknown_chunkp;$/;"	t
png_unknown_chunkpp	external/libpng/png.h	/^typedef png_unknown_chunk FAR * FAR * png_unknown_chunkpp;$/;"	t
png_user_chunk_ptr	external/libpng/png.h	/^typedef int (PNGAPI *png_user_chunk_ptr) PNGARG((png_structp, png_unknown_chunkp));$/;"	t
png_user_transform_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_user_transform_ptr) PNGARG((png_structp,$/;"	t
png_voidp	external/libpng/pngconf.h	/^typedef void            FAR * png_voidp;$/;"	t
png_voidp_NULL	external/libpng/png.h	569;"	d
png_voidp_NULL	external/libpng/png.h	585;"	d
png_warning	external/libpng/pngerror.c	/^png_warning(png_structp png_ptr, png_const_charp warning_message)$/;"	f
png_write_IDAT	external/libpng/pngwutil.c	/^png_write_IDAT(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f
png_write_IEND	external/libpng/pngwutil.c	/^png_write_IEND(png_structp png_ptr)$/;"	f
png_write_IHDR	external/libpng/pngwutil.c	/^png_write_IHDR(png_structp png_ptr, png_uint_32 width, png_uint_32 height,$/;"	f
png_write_PLTE	external/libpng/pngwutil.c	/^png_write_PLTE(png_structp png_ptr, png_colorp palette, png_uint_32 num_pal)$/;"	f
png_write_bKGD	external/libpng/pngwutil.c	/^png_write_bKGD(png_structp png_ptr, png_color_16p back, int color_type)$/;"	f
png_write_cHRM	external/libpng/pngwutil.c	/^png_write_cHRM(png_structp png_ptr, double white_x, double white_y,$/;"	f
png_write_cHRM_fixed	external/libpng/pngwutil.c	/^png_write_cHRM_fixed(png_structp png_ptr, png_fixed_point white_x,$/;"	f
png_write_chunk	external/libpng/pngwutil.c	/^png_write_chunk(png_structp png_ptr, png_bytep chunk_name,$/;"	f
png_write_chunk_data	external/libpng/pngwutil.c	/^png_write_chunk_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f
png_write_chunk_end	external/libpng/pngwutil.c	/^png_write_chunk_end(png_structp png_ptr)$/;"	f
png_write_chunk_start	external/libpng/pngwutil.c	/^png_write_chunk_start(png_structp png_ptr, png_bytep chunk_name,$/;"	f
png_write_compressed_data_out	external/libpng/pngwutil.c	/^png_write_compressed_data_out(png_structp png_ptr, compression_state *comp)$/;"	f	file:
png_write_data	external/libpng/pngwio.c	/^png_write_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f
png_write_destroy	external/libpng/pngwrite.c	/^png_write_destroy(png_structp png_ptr)$/;"	f
png_write_end	external/libpng/pngwrite.c	/^png_write_end(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_write_filtered_row	external/libpng/pngwutil.c	/^png_write_filtered_row(png_structp png_ptr, png_bytep filtered_row)$/;"	f
png_write_find_filter	external/libpng/pngwutil.c	/^png_write_find_filter(png_structp png_ptr, png_row_infop row_info)$/;"	f
png_write_finish_row	external/libpng/pngwutil.c	/^png_write_finish_row(png_structp png_ptr)$/;"	f
png_write_flush	external/libpng/pngwrite.c	/^png_write_flush(png_structp png_ptr)$/;"	f
png_write_gAMA	external/libpng/pngwutil.c	/^png_write_gAMA(png_structp png_ptr, double file_gamma)$/;"	f
png_write_gAMA_fixed	external/libpng/pngwutil.c	/^png_write_gAMA_fixed(png_structp png_ptr, png_fixed_point file_gamma)$/;"	f
png_write_hIST	external/libpng/pngwutil.c	/^png_write_hIST(png_structp png_ptr, png_uint_16p hist, int num_hist)$/;"	f
png_write_iCCP	external/libpng/pngwutil.c	/^png_write_iCCP(png_structp png_ptr, png_charp name, int compression_type,$/;"	f
png_write_iTXt	external/libpng/pngwutil.c	/^png_write_iTXt(png_structp png_ptr, int compression, png_charp key,$/;"	f
png_write_image	external/libpng/pngwrite.c	/^png_write_image(png_structp png_ptr, png_bytepp image)$/;"	f
png_write_info	external/libpng/pngwrite.c	/^png_write_info(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_write_info_before_PLTE	external/libpng/pngwrite.c	/^png_write_info_before_PLTE(png_structp png_ptr, png_infop info_ptr)$/;"	f
png_write_init	external/libpng/png.h	3110;"	d
png_write_init	external/libpng/png.h	3111;"	d
png_write_init	external/libpng/pngwrite.c	/^png_write_init(png_structp png_ptr)$/;"	f
png_write_init	external/libpng/pngwrite.c	603;"	d	file:
png_write_init_2	external/libpng/pngwrite.c	/^png_write_init_2(png_structp png_ptr, png_const_charp user_png_ver,$/;"	f
png_write_init_3	external/libpng/pngwrite.c	/^png_write_init_3(png_structpp ptr_ptr, png_const_charp user_png_ver,$/;"	f
png_write_oFFs	external/libpng/pngwutil.c	/^png_write_oFFs(png_structp png_ptr, png_int_32 x_offset, png_int_32 y_offset,$/;"	f
png_write_pCAL	external/libpng/pngwutil.c	/^png_write_pCAL(png_structp png_ptr, png_charp purpose, png_int_32 X0,$/;"	f
png_write_pHYs	external/libpng/pngwutil.c	/^png_write_pHYs(png_structp png_ptr, png_uint_32 x_pixels_per_unit,$/;"	f
png_write_png	external/libpng/pngwrite.c	/^png_write_png(png_structp png_ptr, png_infop info_ptr,$/;"	f
png_write_row	external/libpng/pngwrite.c	/^png_write_row(png_structp png_ptr, png_bytep row)$/;"	f
png_write_rows	external/libpng/pngwrite.c	/^png_write_rows(png_structp png_ptr, png_bytepp row,$/;"	f
png_write_sBIT	external/libpng/pngwutil.c	/^png_write_sBIT(png_structp png_ptr, png_color_8p sbit, int color_type)$/;"	f
png_write_sCAL	external/libpng/pngwutil.c	/^png_write_sCAL(png_structp png_ptr, int unit, double width, double height)$/;"	f
png_write_sCAL_s	external/libpng/pngwutil.c	/^png_write_sCAL_s(png_structp png_ptr, int unit, png_charp width,$/;"	f
png_write_sPLT	external/libpng/pngwutil.c	/^png_write_sPLT(png_structp png_ptr, png_sPLT_tp spalette)$/;"	f
png_write_sRGB	external/libpng/pngwutil.c	/^png_write_sRGB(png_structp png_ptr, int srgb_intent)$/;"	f
png_write_sig	external/libpng/pngwutil.c	/^png_write_sig(png_structp png_ptr)$/;"	f
png_write_start_row	external/libpng/pngwutil.c	/^png_write_start_row(png_structp png_ptr)$/;"	f
png_write_status_ptr	external/libpng/png.h	/^typedef void (PNGAPI *png_write_status_ptr) PNGARG((png_structp, png_uint_32,$/;"	t
png_write_status_ptr_NULL	external/libpng/png.h	570;"	d
png_write_status_ptr_NULL	external/libpng/png.h	586;"	d
png_write_tEXt	external/libpng/pngwutil.c	/^png_write_tEXt(png_structp png_ptr, png_charp key, png_charp text,$/;"	f
png_write_tIME	external/libpng/pngwutil.c	/^png_write_tIME(png_structp png_ptr, png_timep mod_time)$/;"	f
png_write_tRNS	external/libpng/pngwutil.c	/^png_write_tRNS(png_structp png_ptr, png_bytep trans, png_color_16p tran,$/;"	f
png_write_zTXt	external/libpng/pngwutil.c	/^png_write_zTXt(png_structp png_ptr, png_charp key, png_charp text,$/;"	f
png_zalloc	external/libpng/png.c	/^png_zalloc(voidpf png_ptr, uInt items, uInt size)$/;"	f
png_zcharp	external/libpng/pngconf.h	/^typedef charf *         png_zcharp;$/;"	t
png_zcharpp	external/libpng/pngconf.h	/^typedef charf * FAR *   png_zcharpp;$/;"	t
png_zfree	external/libpng/png.c	/^png_zfree(voidpf png_ptr, voidpf ptr)$/;"	f
png_zstreamp	external/libpng/pngconf.h	/^typedef z_stream FAR *  png_zstreamp;$/;"	t
pngtest_error	external/libpng/pngtest.c	/^pngtest_error(png_structp png_ptr, png_const_charp message)$/;"	f	file:
pngtest_flush	external/libpng/pngtest.c	/^pngtest_flush(png_structp png_ptr)$/;"	f	file:
pngtest_read_data	external/libpng/pngtest.c	/^pngtest_read_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f	file:
pngtest_warning	external/libpng/pngtest.c	/^pngtest_warning(png_structp png_ptr, png_const_charp message)$/;"	f	file:
pngtest_write_data	external/libpng/pngtest.c	/^pngtest_write_data(png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f	file:
point	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^	b2Vec2 point;$/;"	m	struct:b2PositionSolverManifold	file:
point	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Vec2 point;$/;"	m	struct:b2TOISolverManifold	file:
pointA	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2Vec2 pointA;		\/\/\/< closest point on shapeA$/;"	m	struct:b2DistanceOutput
pointB	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2Vec2 pointB;		\/\/\/< closest point on shapeB$/;"	m	struct:b2DistanceOutput
pointCount	external/Box2d/Box2D/Collision/b2Collision.h	/^	int32 pointCount;								\/\/\/< the number of manifold points$/;"	m	struct:b2Manifold
pointCount	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	int32 pointCount;$/;"	m	struct:b2ContactConstraint
pointCount	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	int32 pointCount;$/;"	m	struct:b2TOIConstraint	file:
pointQuery	external/Chipmunk/include/chipmunk/cpShape.h	/^	int (*pointQuery)(struct cpShape *shape, cpVect p);$/;"	m	struct:cpShapeClass
pointQueryContext	external/Chipmunk/src/cpSpace.c	/^typedef struct pointQueryContext {$/;"	s	file:
pointQueryContext	external/Chipmunk/src/cpSpace.c	/^} pointQueryContext;$/;"	t	typeref:struct:pointQueryContext	file:
pointQueryHelper	external/Chipmunk/src/cpSpace.c	/^pointQueryHelper(cpVect *point, cpShape *shape, pointQueryContext *context)$/;"	f	file:
pointSize	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFloat pointSize;$/;"	v
pointer	external/libpng/pngtest.c	/^   png_voidp                 pointer;$/;"	m	struct:memory_information	file:
points	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2ManifoldPoint points[b2_maxManifoldPoints];	\/\/\/< the points of contact$/;"	m	struct:b2Manifold
points	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 points[b2_maxManifoldPoints];	\/\/\/< world contact point (point of intersection)$/;"	m	struct:b2WorldManifold
points	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2ContactConstraintPoint points[b2_maxManifoldPoints];$/;"	m	struct:b2ContactConstraint
poly2poly	external/Chipmunk/src/cpCollision.c	/^poly2poly(cpShape *shape1, cpShape *shape2, cpContact *arr)$/;"	f	file:
polyClass	external/Chipmunk/src/cpPolyShape.c	/^static const cpShapeClass polyClass = {$/;"	v	file:
pooledArbiters	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpArray *arbiters, *pooledArbiters;$/;"	m	struct:cpSpace
pooledBins	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	cpHashSetBin **table, *pooledBins;$/;"	m	struct:cpHashSet
pooledBins	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpSpaceHashBin **table, *pooledBins;$/;"	m	struct:cpSpaceHash
pooledHandles	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpArray *pooledHandles;$/;"	m	struct:cpSpaceHash
populate_rects	tools/spritesheet-artifact-fixer.py	/^    def populate_rects( self ):$/;"	m	class:SpriteSheetMarginFix
pos	cocos2d/CCParticleSystem.h	/^	CGPoint				pos;$/;"	m	struct:sCCParticle
pos	cocos2d/ccTypes.h	/^	ccVertex2F	pos;		\/\/ 8 bytes$/;"	m	struct:_ccPointSprite
pos	external/Tremor/ogg.h	/^  long           pos;$/;"	m	struct:oggbyte_buffer
posVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) CGPoint posVar;$/;"	v
position	cocos2d/CCGrid3DAction.h	/^@property (nonatomic,readwrite) CGPoint position;$/;"	v
position	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) CGPoint position;$/;"	v
position	experimental/sound-engine/PASoundListener.h	/^@property (readwrite, assign) CGPoint position;$/;"	v
position	experimental/sound-engine/PASoundSource.h	/^@property (readwrite, assign) CGPoint position;$/;"	v
position	external/Box2d/Box2D/Common/b2Math.h	/^	b2Vec2 position;$/;"	m	struct:b2Transform
position	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2Vec2 position;$/;"	m	struct:b2BodyDef
position	external/Box2d/Testbed/Framework/Test.h	/^	b2Vec2 position;$/;"	m	struct:ContactPoint
position	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpVect position[SINGMAX];$/;"	m	struct:ActorSingularity	file:
position	external/Chipmunk/Demo/Sensors.c	/^	cpVect position;$/;"	m	struct:Emitter	file:
position	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	b2Vec2 position;$/;"	m	struct:ContactPoint
positionIterations	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^	int32 positionIterations;$/;"	m	struct:b2TimeStep
positionIterations	external/Box2d/Testbed/Framework/Test.h	/^	int32 positionIterations;$/;"	m	struct:Settings
positionIterations	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 positionIterations;$/;"	m	struct:Settings
positionOffset	cocos2d/CCTMXObjectGroup.h	/^@property (nonatomic,readwrite,assign) CGPoint positionOffset;$/;"	v
positionType	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite) tCCPositionType positionType;$/;"	v
position_func	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpBodyPositionFunc position_func;$/;"	m	struct:cpBody
postScriptName	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) NSString *postScriptName;$/;"	v
postSolve	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionPostSolveFunc postSolve;$/;"	m	struct:cpCollisionHandler
postStatus	cocoslive/CLScoreServerPost.h	/^@property (nonatomic,readonly) tPostStatus postStatus;$/;"	v
postStepCallback	external/Chipmunk/src/cpSpace.c	/^typedef struct postStepCallback {$/;"	s	file:
postStepCallback	external/Chipmunk/src/cpSpace.c	/^} postStepCallback;$/;"	t	typeref:struct:postStepCallback	file:
postStepCallbackSetFilter	external/Chipmunk/src/cpSpace.c	/^postStepCallbackSetFilter(postStepCallback *callback, cpSpace *space)$/;"	f	file:
postStepCallbacks	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpHashSet *postStepCallbacks;$/;"	m	struct:cpSpace
postStepFuncSetEql	external/Chipmunk/src/cpSpace.c	/^postStepFuncSetEql(postStepCallback *a, postStepCallback *b){$/;"	f	file:
postStepFuncSetTrans	external/Chipmunk/src/cpSpace.c	/^postStepFuncSetTrans(postStepCallback *callback, void *ignored)$/;"	f	file:
postStepRemove	external/Chipmunk/Demo/Sensors.c	/^postStepRemove(cpSpace *space, cpShape *shape, void *unused)$/;"	f	file:
postlist	external/Tremor/backends.h	/^  int   postlist[VIF_POSIT+2];    \/* first two implicit *\/ $/;"	m	struct:__anon75
posts	external/Tremor/floor1.c	/^  int posts;$/;"	m	struct:__anon71	file:
preSolve	external/Chipmunk/Demo/OneWay.c	/^preSolve(cpArbiter *arb, cpSpace *space, void *ignore)$/;"	f	file:
preSolve	external/Chipmunk/Demo/Player.c	/^preSolve(cpArbiter *arb, cpSpace *space, void *ignore)$/;"	f	file:
preSolve	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionPreSolveFunc preSolve;$/;"	m	struct:cpCollisionHandler
preStep	external/Chipmunk/include/chipmunk/constraints/cpConstraint.h	/^	cpConstraintPreStepFunction preStep;$/;"	m	struct:cpConstraintClass
preStep	external/Chipmunk/src/constraints/cpDampedRotarySpring.c	/^preStep(cpDampedRotarySpring *spring, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpDampedSpring.c	/^preStep(cpDampedSpring *spring, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpGearJoint.c	/^preStep(cpGearJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpGrooveJoint.c	/^preStep(cpGrooveJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpPinJoint.c	/^preStep(cpPinJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpPivotJoint.c	/^preStep(cpPivotJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpRatchetJoint.c	/^preStep(cpRatchetJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpRotaryLimitJoint.c	/^preStep(cpRotaryLimitJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpSimpleMotor.c	/^preStep(cpSimpleMotor *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preStep	external/Chipmunk/src/constraints/cpSlideJoint.c	/^preStep(cpSlideJoint *joint, cpFloat dt, cpFloat dt_inv)$/;"	f	file:
preextrapolate	external/Tremor/ivorbiscodec.h	/^  int  preextrapolate;$/;"	m	struct:vorbis_dsp_state
prev	cocos2d/Support/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle
prev	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	b2ContactEdge* prev;	\/\/\/< the previous contact edge in the body's contact list$/;"	m	struct:b2ContactEdge
prev	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointEdge* prev;		\/\/\/< the previous joint edge in the body's joint list$/;"	m	struct:b2JointEdge
primary	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	bool primary;$/;"	m	struct:b2ContactRegister
primes	external/Chipmunk/src/prime.h	/^static int primes[] = {$/;"	v
print_template_banner	install-templates.sh	/^print_template_banner(){$/;"	f
priority	cocos2d/CCTouchHandler.h	/^@property(nonatomic, readwrite) int priority; \/\/ default 0$/;"	v
private_a	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpShape *private_a, *private_b;$/;"	m	struct:cpArbiter
private_b	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpShape *private_a, *private_b;$/;"	m	struct:cpArbiter
private_state	external/Tremor/codec_internal.h	/^typedef struct private_state {$/;"	s
private_state	external/Tremor/codec_internal.h	/^} private_state;$/;"	t	typeref:struct:private_state
projectiles	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, retain) NSMutableArray *projectiles;$/;"	v
projection	cocos2d/CCDirector.h	/^@property (nonatomic,readwrite) ccDirectorProjection projection;$/;"	v
properties	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *properties;$/;"	v
properties	cocos2d/CCTMXObjectGroup.h	/^@property (nonatomic,readwrite,retain) NSMutableDictionary *properties;$/;"	v
properties	cocos2d/CCTMXTiledMap.h	/^@property (nonatomic,readwrite,retain) NSMutableDictionary *properties;$/;"	v
properties	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSMutableDictionary *properties;$/;"	v
proxyA	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2DistanceProxy proxyA;$/;"	m	struct:b2DistanceInput
proxyA	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	b2DistanceProxy proxyA;$/;"	m	struct:b2TOIInput
proxyB	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2DistanceProxy proxyB;$/;"	m	struct:b2DistanceInput
proxyB	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	b2DistanceProxy proxyB;$/;"	m	struct:b2TOIInput
proxyId	external/Box2d/Testbed/Tests/DynamicTreeTest.h	/^		int32 proxyId;$/;"	m	struct:DynamicTreeTest::Actor
proxyIdA	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 proxyIdA;$/;"	m	struct:b2Pair
proxyIdB	external/Box2d/Box2D/Collision/b2BroadPhase.h	/^	int32 proxyIdB;$/;"	m	struct:b2Pair
psy	external/Tremor/backends.h	/^  int   psy[2]; \/* by blocktype; impulse\/padding for short,$/;"	m	struct:vorbis_info_mapping0
ptr	external/Tremor/ivorbiscodec.h	/^  void *ptr;$/;"	m	struct:alloc_chain
ptr	external/Tremor/ogg.h	/^  unsigned char *ptr;$/;"	m	struct:oggbyte_buffer
ptr	external/Tremor/ogg.h	/^  } ptr;$/;"	m	struct:ogg_buffer	typeref:union:ogg_buffer::__anon83
purgeCachedData	cocos2d/CCBitmapFontAtlas.h	/^+(void) purgeCachedData;$/;"	v
purgeSharedManager	cocos2d/CCActionManager.h	/^+(void)purgeSharedManager;$/;"	v
purgeSharedScheduler	cocos2d/CCScheduler.h	/^+(void)purgeSharedScheduler;$/;"	v
purgeSharedSpriteFrameCache	cocos2d/CCSpriteFrameCache.h	/^+(void)purgeSharedSpriteFrameCache;$/;"	v
purgeSharedTextureCache	cocos2d/CCTextureCache.h	/^+(void)purgeSharedTextureCache;$/;"	v
purge_dict	tools/compatibility_with_0_8/generate_compat_file.py	/^def purge_dict( d ):$/;"	f
q_delta	external/Tremor/codebook.h	/^  long     q_delta;     \/* packed 32 bit float; val 1 - val 0 == delta *\/$/;"	m	struct:codebook
q_delta	external/Tremor/codebook.h	/^  long     q_delta;     \/* packed 32 bit float; val 1 - val 0 == delta *\/$/;"	m	struct:static_codebook
q_min	external/Tremor/codebook.h	/^  long     q_min;       \/* packed 32 bit float; quant value 0 maps to minval *\/$/;"	m	struct:codebook
q_min	external/Tremor/codebook.h	/^  long     q_min;       \/* packed 32 bit float; quant value 0 maps to minval *\/$/;"	m	struct:static_codebook
q_quant	external/Tremor/codebook.h	/^  int      q_quant;     \/* bits: 0 < quant <= 16 *\/$/;"	m	struct:static_codebook
q_sequencep	external/Tremor/codebook.h	/^  int      q_sequencep; \/* bitflag *\/$/;"	m	struct:static_codebook
quad	cocos2d/CCSprite.h	/^@property (nonatomic,readonly) ccV3F_C4B_T2F_Quad quad;$/;"	v
quads	cocos2d/CCTextureAtlas.h	/^@property (nonatomic,readwrite) ccV3F_C4B_T2F_Quad *quads;$/;"	v
quant_q	external/Tremor/floor1.c	/^  int quant_q;$/;"	m	struct:__anon71	file:
quantlist	external/Tremor/codebook.h	/^  long     *quantlist;  \/* map == 1: (int)(entries^(1\/dim)) element column map$/;"	m	struct:static_codebook
query	external/Chipmunk/src/cpSpaceHash.c	/^query(cpSpaceHash *hash, cpSpaceHashBin *bin, void *obj, cpSpaceHashQueryFunc func, void *data)$/;"	f	file:
queryFunc	external/Chipmunk/src/cpSpace.c	/^queryFunc(cpShape *a, cpShape *b, cpSpace *space)$/;"	f	file:
queryRehashPair	external/Chipmunk/src/cpSpaceHash.c	/^typedef struct queryRehashPair {$/;"	s	file:
queryRehashPair	external/Chipmunk/src/cpSpaceHash.c	/^} queryRehashPair;$/;"	t	typeref:struct:queryRehashPair	file:
queryReject	external/Chipmunk/src/cpSpace.c	/^queryReject(cpShape *a, cpShape *b)$/;"	f	file:
querySeg	external/Chipmunk/Demo/Query.c	/^cpShape *querySeg = NULL;$/;"	v
queue	external/Chipmunk/Demo/Sensors.c	/^	int queue;$/;"	m	struct:Emitter	file:
r	cocos2d/ccTypes.h	/^	GLubyte	r;$/;"	m	struct:_ccColor3B
r	cocos2d/ccTypes.h	/^	float r;$/;"	m	struct:_ccColor4F
r	cocos2d/ccTypes.h	/^	unsigned char r;$/;"	m	struct:_ccColor4B
r	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	float32 r, g, b;$/;"	m	struct:b2Color
r	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat r[3];$/;"	m	struct:DataforForce	file:
r	external/Chipmunk/include/chipmunk/cpBB.h	/^	cpFloat l, b, r ,t;$/;"	m	struct:cpBB
r	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpFloat r;$/;"	m	struct:cpCircleShape
r	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpFloat r;$/;"	m	struct:cpSegmentShape
r1	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpVect r1, r2;$/;"	m	struct:cpDampedSpring
r1	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpGrooveJoint
r1	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpPinJoint
r1	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpPivotJoint
r1	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpSlideJoint
r1	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpVect r1, r2;$/;"	m	struct:cpContact
r2	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpVect r1, r2;$/;"	m	struct:cpDampedSpring
r2	external/Chipmunk/include/chipmunk/constraints/cpGrooveJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpGrooveJoint
r2	external/Chipmunk/include/chipmunk/constraints/cpPinJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpPinJoint
r2	external/Chipmunk/include/chipmunk/constraints/cpPivotJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpPivotJoint
r2	external/Chipmunk/include/chipmunk/constraints/cpSlideJoint.h	/^	cpVect r1, r2;$/;"	m	struct:cpSlideJoint
r2	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpVect r1, r2;$/;"	m	struct:cpContact
rA	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Vec2 rA;$/;"	m	struct:b2ContactConstraintPoint
rB	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Vec2 rB;$/;"	m	struct:b2ContactConstraintPoint
rMouseDown	external/Box2d/Testbed/Framework/Main.cpp	/^	bool rMouseDown;$/;"	m	namespace:__anon70	file:
radialAccel	cocos2d/CCParticleSystem.h	/^			float		radialAccel;$/;"	m	struct:sCCParticle::__anon26::__anon27
radialAccel	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float radialAccel;$/;"	v
radialAccelVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float radialAccelVar;$/;"	v
radius	cocos2d/CCParticleSystem.h	/^			float		radius;$/;"	m	struct:sCCParticle::__anon26::__anon28
radius	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 radius;$/;"	m	struct:b2ContactConstraint
radius	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	float32 radius;$/;"	m	struct:b2TOIConstraint	file:
radius	tests/TouchesTest/Ball.h	/^@property(nonatomic, readonly) float radius;$/;"	v
rand_pos	external/Chipmunk/Demo/Planet.c	/^rand_pos(cpFloat radius)$/;"	f	file:
ranking	cocoslive/CLScoreServerPost.h	/^@property (nonatomic,readonly) NSUInteger ranking;$/;"	v
ratchet	external/Chipmunk/include/chipmunk/constraints/cpRatchetJoint.h	/^	cpFloat angle, phase, ratchet;$/;"	m	struct:cpRatchetJoint
rate	cocos2d/CCEaseAction.h	/^@property (nonatomic,readwrite,assign) float rate;$/;"	v
rate	cocos2d/CCGridAction.h	/^@property (nonatomic,readwrite) float rate;$/;"	v
rate	external/Chipmunk/include/chipmunk/constraints/cpSimpleMotor.h	/^	cpFloat rate;$/;"	m	struct:cpSimpleMotor
rate	external/Tremor/backends.h	/^  long  rate;$/;"	m	struct:__anon74
rate	external/Tremor/ivorbiscodec.h	/^  long rate;$/;"	m	struct:vorbis_info
ratio	external/Box2d/Box2D/Dynamics/Joints/b2GearJoint.h	/^	float32 ratio;$/;"	m	struct:b2GearJointDef
ratio	external/Box2d/Box2D/Dynamics/Joints/b2PulleyJoint.h	/^	float32 ratio;$/;"	m	struct:b2PulleyJointDef
ratio	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat phase, ratio;$/;"	m	struct:cpGearJoint
ratio_inv	external/Chipmunk/include/chipmunk/constraints/cpGearJoint.h	/^	cpFloat ratio_inv;$/;"	m	struct:cpGearJoint
re	tools/compatibility_with_0_8/generate_compat_file.py	/^    import re$/;"	i
read_func	external/Tremor/ivorbisfile.h	/^  size_t (*read_func)  (void *ptr, size_t size, size_t nmemb, void *datasource);$/;"	m	struct:__anon81
read_row_callback	external/libpng/pngtest.c	/^read_row_callback(png_structp png_ptr, png_uint_32 row_number, int pass)$/;"	f
read_user_chunk_callback	external/libpng/pngtest.c	/^static int read_user_chunk_callback(png_struct *png_ptr,$/;"	f	file:
ready_state	external/Tremor/ivorbisfile.h	/^  int              ready_state;$/;"	m	struct:OggVorbis_File
reap	external/Tremor/ivorbiscodec.h	/^  struct alloc_chain *reap;$/;"	m	struct:vorbis_block	typeref:struct:vorbis_block::alloc_chain
rect	cocos2d/CCBitmapFontAtlas.h	/^	CGRect rect;$/;"	m	struct:_bitmapFontDef
rect	cocos2d/CCSpriteFrame.h	/^@property (nonatomic,readwrite) CGRect rect;$/;"	v
rect	tests/TouchesTest/Paddle.h	/^@property(nonatomic, readonly) CGRect rect;$/;"	v
recycleBin	external/Chipmunk/src/cpHashSet.c	/^recycleBin(cpHashSet *set, cpHashSetBin *bin)$/;"	f	file:
recycleBin	external/Chipmunk/src/cpSpaceHash.c	/^recycleBin(cpSpaceHash *hash, cpSpaceHashBin *bin)$/;"	f	file:
red	external/libpng/png.h	/^   png_byte red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_8_struct
red	external/libpng/png.h	/^   png_byte red;$/;"	m	struct:png_color_struct
red	external/libpng/png.h	/^   png_uint_16 red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_16_struct
red	external/libpng/png.h	/^   png_uint_16 red;$/;"	m	struct:png_sPLT_entry_struct
ref	external/Tremor/ogg.h	/^  ogg_reference *ref;$/;"	m	struct:oggbyte_buffer
refcount	external/Tremor/ogg.h	/^  int                 refcount;$/;"	m	struct:ogg_buffer
referenceAngle	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 referenceAngle;$/;"	m	struct:b2PrismaticJointDef
referenceAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 referenceAngle;$/;"	m	struct:b2RevoluteJointDef
referenceAngle	external/Box2d/Box2D/Dynamics/Joints/b2WeldJoint.h	/^	float32 referenceAngle;$/;"	m	struct:b2WeldJointDef
referenceEdge	external/Box2d/Box2D/Collision/b2Collision.h	/^		uint8 referenceEdge;	\/\/\/< The edge that defines the outward contact normal.$/;"	m	struct:b2ContactID::Features
relative_velocity	external/Chipmunk/include/chipmunk/constraints/util.h	/^relative_velocity(cpBody *a, cpBody *b, cpVect r1, cpVect r2){$/;"	f
relp	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpVect relp;$/;"	m	struct:DataforForce	file:
rememberLastPointQuery	external/Chipmunk/src/cpSpace.c	/^rememberLastPointQuery(cpShape *shape, cpShape **outShape)$/;"	f	file:
removalContext	external/Chipmunk/src/cpSpace.c	/^typedef struct removalContext {$/;"	s	file:
removalContext	external/Chipmunk/src/cpSpace.c	/^} removalContext;$/;"	t	typeref:struct:removalContext	file:
removeAndFreeShapeAndBody	external/Chipmunk/src/cpSpace.c	/^removeAndFreeShapeAndBody(cpShape *shape, cpSpace *space)$/;"	f	file:
render_line	external/Tremor/floor1.c	/^static void render_line(int n, int x0,int x1,int y0,int y1,ogg_int32_t *d){$/;"	f	file:
render_point	external/Tremor/floor1.c	/^static int render_point(int x0,int x1,int y0,int y1,int x){$/;"	f	file:
res0_free_info	external/Tremor/res012.c	/^void res0_free_info(vorbis_info_residue *i){$/;"	f
res0_free_look	external/Tremor/res012.c	/^void res0_free_look(vorbis_look_residue *i){$/;"	f
res0_inverse	external/Tremor/res012.c	/^int res0_inverse(vorbis_block *vb,vorbis_look_residue *vl,$/;"	f
res0_look	external/Tremor/res012.c	/^vorbis_look_residue *res0_look(vorbis_dsp_state *vd,vorbis_info_mode *vm,$/;"	f
res0_unpack	external/Tremor/res012.c	/^vorbis_info_residue *res0_unpack(vorbis_info *vi,oggpack_buffer *opb){$/;"	f
res1_inverse	external/Tremor/res012.c	/^int res1_inverse(vorbis_block *vb,vorbis_look_residue *vl,$/;"	f
res2_inverse	external/Tremor/res012.c	/^int res2_inverse(vorbis_block *vb,vorbis_look_residue *vl,$/;"	f
residue0_exportbundle	external/Tremor/res012.c	/^vorbis_func_residue residue0_exportbundle={$/;"	v
residue1_exportbundle	external/Tremor/res012.c	/^vorbis_func_residue residue1_exportbundle={$/;"	v
residue2_exportbundle	external/Tremor/res012.c	/^vorbis_func_residue residue2_exportbundle={$/;"	v
residue_func	external/Tremor/mapping0.c	/^  vorbis_func_residue **residue_func;$/;"	m	struct:__anon82	file:
residue_look	external/Tremor/mapping0.c	/^  vorbis_look_residue **residue_look;$/;"	m	struct:__anon82	file:
residue_param	external/Tremor/codec_internal.h	/^  vorbis_info_residue    *residue_param[64];$/;"	m	struct:codec_setup_info
residue_type	external/Tremor/codec_internal.h	/^  int                     residue_type[64];$/;"	m	struct:codec_setup_info
residues	external/Tremor/codec_internal.h	/^  int        residues;$/;"	m	struct:codec_setup_info
residuesubmap	external/Tremor/backends.h	/^  int   residuesubmap[16]; \/* [mux] submap to residue *\/$/;"	m	struct:vorbis_info_mapping0
restAngle	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpFloat restAngle;$/;"	m	struct:cpDampedRotarySpring
restLength	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpFloat restLength;$/;"	m	struct:cpDampedSpring
restitution	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	float32 restitution;$/;"	m	struct:b2FixtureDef
retain	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	int retain;$/;"	m	struct:cpHandle
retainName	cocos2d/CCPVRTexture.h	/^@property (nonatomic,readwrite) BOOL retainName;$/;"	v
reuseGrid	cocos2d/CCGrid.h	/^@property (nonatomic,readwrite) int reuseGrid;$/;"	v
revision	external/Box2d/Box2D/Common/b2Settings.h	/^	int32 revision;		\/\/\/< bug fixes$/;"	m	struct:b2Version
ribbon	cocos2d/CCMotionStreak.h	/^@property (nonatomic,readonly) CCRibbon *ribbon;$/;"	v
right	cocos2d/CCBitmapFontAtlas.h	/^	int right;$/;"	m	struct:_bitmapFontPadding
right	external/libpng/pngrtran.c	/^   png_byte right;$/;"	m	struct:png_dsort_struct	file:
rint	external/Tremor/os.h	41;"	d
rot	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpVect rot;$/;"	m	struct:cpBody
rotatePerSecond	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float rotatePerSecond;$/;"	v
rotatePerSecondVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float rotatePerSecondVar;$/;"	v
rotation	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) float rotation;$/;"	v
rotation	cocos2d/CCParticleSystem.h	/^	float		rotation;$/;"	m	struct:sCCParticle
rowbytes	external/libpng/png.h	/^   png_uint_32 rowbytes; \/* number of bytes in row *\/$/;"	m	struct:png_row_info_struct
runningScene	cocos2d/CCDirector.h	/^@property (nonatomic,readonly) CCScene* runningScene;$/;"	v
sCCParticle	cocos2d/CCParticleSystem.h	/^typedef struct sCCParticle {$/;"	s
sImageTGA	cocos2d/Support/TGAlib.h	/^typedef struct sImageTGA {$/;"	s
s_blockSizeLookup	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^uint8 b2BlockAllocator::s_blockSizeLookup[b2_maxBlockSize + 1];$/;"	m	class:b2BlockAllocator	file:
s_blockSizeLookup	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	static uint8 s_blockSizeLookup[b2_maxBlockSize + 1];$/;"	m	class:b2BlockAllocator
s_blockSizeLookupInitialized	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^bool b2BlockAllocator::s_blockSizeLookupInitialized;$/;"	m	class:b2BlockAllocator	file:
s_blockSizeLookupInitialized	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	static bool s_blockSizeLookupInitialized;$/;"	m	class:b2BlockAllocator
s_blockSizes	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^int32 b2BlockAllocator::s_blockSizes[b2_blockSizes] = $/;"	m	class:b2BlockAllocator	file:
s_blockSizes	external/Box2d/Box2D/Common/b2BlockAllocator.h	/^	static int32 s_blockSizes[b2_blockSizes];$/;"	m	class:b2BlockAllocator
s_initialized	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^bool b2Contact::s_initialized = false;$/;"	m	class:b2Contact	file:
s_initialized	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	static bool s_initialized;$/;"	m	class:b2Contact
s_registers	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.cpp	/^b2ContactRegister b2Contact::s_registers[b2Shape::e_typeCount][b2Shape::e_typeCount];$/;"	m	class:b2Contact	file:
s_registers	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	static b2ContactRegister s_registers[b2Shape::e_typeCount][b2Shape::e_typeCount];$/;"	m	class:b2Contact
sample_count	external/Tremor/codec_internal.h	/^  ogg_int64_t sample_count;$/;"	m	struct:private_state
samptrack	external/Tremor/ivorbisfile.h	/^  ogg_int64_t      samptrack;$/;"	m	struct:OggVorbis_File
scale	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) float scale;$/;"	v
scaleX	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) float scaleX;$/;"	v
scaleY	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) float scaleY;$/;"	v
scanLocation	external/TouchJSON/CDataScanner.h	/^@property (readwrite, nonatomic, assign) NSUInteger scanLocation;$/;"	v
scene	CocosDenshion/TestsAndDemos/FadeToGrey/Classes/HelloWorldScene.h	/^+(id) scene;$/;"	v
scene	CocosDenshion/TestsAndDemos/FancyRatMeteringDemo/Classes/HelloWorldScene.h	/^+(id) scene;$/;"	v
scene	templates/cocos2d_app/Classes/HelloWorldScene.h	/^+(id) scene;$/;"	v
scene	templates/cocos2d_box2d_app/Classes/HelloWorldScene.h	/^+(id) scene;$/;"	v
scene	templates/cocos2d_chipmunk_app/Classes/HelloWorldScene.h	/^+(id) scene;$/;"	v
scenesLoaded	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) BOOL scenesLoaded;$/;"	v
scoreDidUpdate	cocoslive/CLScoreServerPost.h	/^@property (nonatomic,readonly) BOOL scoreDidUpdate;$/;"	v
second	external/libpng/png.h	/^   png_byte second;  \/* second of minute, 0 - 60 (for leap seconds) *\/$/;"	m	struct:png_time_struct
secondstages	external/Tremor/backends.h	/^  int    secondstages[64]; \/* expanded out to pointers in lookup *\/$/;"	m	struct:vorbis_info_residue0
seek_func	external/Tremor/ivorbisfile.h	/^  int    (*seek_func)  (void *datasource, ogg_int64_t offset, int whence);$/;"	m	struct:__anon81
seekable	external/Tremor/ivorbisfile.h	/^  int              seekable;$/;"	m	struct:OggVorbis_File
seg2poly	external/Chipmunk/src/cpCollision.c	/^seg2poly(cpShape *shape1, cpShape *shape2, cpContact *arr)$/;"	f	file:
segQueryContext	external/Chipmunk/src/cpSpace.c	/^typedef struct segQueryContext {$/;"	s	file:
segQueryContext	external/Chipmunk/src/cpSpace.c	/^} segQueryContext;$/;"	t	typeref:struct:segQueryContext	file:
segQueryFirst	external/Chipmunk/src/cpSpace.c	/^segQueryFirst(segQueryFirstContext *context, cpShape *shape, cpSegmentQueryInfo *out)$/;"	f	file:
segQueryFirstContext	external/Chipmunk/src/cpSpace.c	/^typedef struct segQueryFirstContext {$/;"	s	file:
segQueryFirstContext	external/Chipmunk/src/cpSpace.c	/^} segQueryFirstContext;$/;"	t	typeref:struct:segQueryFirstContext	file:
segQueryFunc	external/Chipmunk/src/cpSpace.c	/^segQueryFunc(segQueryContext *context, cpShape *shape, void *data)$/;"	f	file:
segValueOnAxis	external/Chipmunk/src/cpCollision.c	/^segValueOnAxis(cpSegmentShape *seg, cpVect n, cpFloat d)$/;"	f	file:
seg_radius	external/Chipmunk/Demo/TheoJansen.c	/^static cpFloat seg_radius = 3.0f;$/;"	v	file:
segmentQuery	external/Chipmunk/include/chipmunk/cpShape.h	/^	 void (*segmentQuery)(struct cpShape *shape, cpVect a, cpVect b, cpSegmentQueryInfo *info);$/;"	m	struct:cpShapeClass
segmentQuery	external/Chipmunk/src/cpSpaceHash.c	/^segmentQuery(cpSpaceHash *hash, cpSpaceHashBin *bin, void *obj, cpSpaceHashSegmentQueryFunc func, void *data)$/;"	f	file:
selectedImage	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite,retain) CCNode<CCRGBAProtocol> *selectedImage;$/;"	v
selectedIndex	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite) NSUInteger selectedIndex;$/;"	v
sendCleanupToScene	cocos2d/CCDirector.h	/^@property (nonatomic, readonly) BOOL sendCleanupToScene;$/;"	v
sensor	external/Chipmunk/include/chipmunk/cpShape.h	/^	int sensor;$/;"	m	struct:cpShape
separate	external/Chipmunk/Demo/OneWay.c	/^separate(cpArbiter *arb, cpSpace *space, void *ignore)$/;"	f	file:
separate	external/Chipmunk/Demo/Player.c	/^separate(cpArbiter *arb, cpSpace *space, void *ignore)$/;"	f	file:
separate	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpCollisionSeparateFunc separate;$/;"	m	struct:cpCollisionHandler
separation	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^	float32 separation;$/;"	m	struct:b2PositionSolverManifold	file:
separation	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	float32 separation;$/;"	m	struct:b2TOISolverManifold	file:
seq	external/Tremor/mapping0.c	/^static int seq=0;$/;"	v	file:
sequence	external/Tremor/ivorbiscodec.h	/^  ogg_int64_t sequence;$/;"	m	struct:vorbis_block
sequence	external/Tremor/ivorbiscodec.h	/^  ogg_int64_t sequence;$/;"	m	struct:vorbis_dsp_state
serializer	external/TouchJSON/JSON/CJSONSerializer.h	/^+ (id)serializer;$/;"	v
serialno	external/Tremor/ogg.h	/^  long           serialno;$/;"	m	struct:ogg_stream_state
serialnos	external/Tremor/ivorbisfile.h	/^  ogg_uint32_t    *serialnos;$/;"	m	struct:OggVorbis_File
setIsFull	external/Chipmunk/src/cpHashSet.c	/^setIsFull(cpHashSet *set)$/;"	f	file:
setUpVerts	external/Chipmunk/src/cpPolyShape.c	/^setUpVerts(cpPolyShape *poly, int numVerts, cpVect *verts, cpVect offset)$/;"	f	file:
settings	external/Box2d/Testbed/Framework/Main.cpp	/^	Settings settings;$/;"	m	namespace:__anon70	file:
settingsHz	external/Box2d/Testbed/Framework/Main.cpp	/^	float settingsHz = 60.0;$/;"	m	namespace:__anon70	file:
shape	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	const b2Shape* shape;$/;"	m	struct:b2FixtureDef
shape	external/Chipmunk/Demo/Player.c	/^	cpShape *shape;$/;"	m	struct:PlayerStruct	file:
shape	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpShape shape;$/;"	m	struct:cpPolyShape
shape	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpShape shape;$/;"	m	struct:cpCircleShape
shape	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpShape shape;$/;"	m	struct:cpSegmentShape
shape	external/Chipmunk/include/chipmunk/cpShape.h	/^	struct cpShape *shape; \/\/ shape that was hit, NULL if no collision$/;"	m	struct:cpSegmentQueryInfo	typeref:struct:cpSegmentQueryInfo::cpShape
shape	external/Chipmunk/src/cpSpace.c	/^	cpShape *shape;$/;"	m	struct:removalContext	file:
shapeBBFunc	external/Chipmunk/src/cpSpace.c	/^static cpBB shapeBBFunc(cpShape *shape){return shape->bb;}$/;"	f	file:
shapeFreeWrap	external/Chipmunk/src/cpSpace.c	/^static void        shapeFreeWrap(cpShape      *ptr, void *unused){     cpShapeFree(ptr);}$/;"	f	file:
sharedAV	CocosDenshion/TestsAndDemos/FancyRatMeteringDemo/Classes/AudioVisualization.h	/^+(AudioVisualization*)sharedAV;$/;"	v
sharedConfiguration	cocos2d/CCConfiguration.h	/^+(CCConfiguration *) sharedConfiguration;$/;"	v
sharedDirector	cocos2d/CCDirector.h	/^+(CCDirector *)sharedDirector;$/;"	v
sharedDispatcher	cocos2d/CCTouchDispatcher.h	/^+ (CCTouchDispatcher*)sharedDispatcher;$/;"	v
sharedEngine	CocosDenshion/CocosDenshion/SimpleAudioEngine.h	/^+ (SimpleAudioEngine*) sharedEngine;$/;"	v
sharedManager	CocosDenshion/CocosDenshion/CDAudioManager.h	/^+ (CDAudioManager *) sharedManager;$/;"	v
sharedManager	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^+ (GameSoundManager*) sharedManager;$/;"	v
sharedManager	cocos2d/CCActionManager.h	/^+ (CCActionManager *)sharedManager;$/;"	v
sharedManager	external/FontLabel/FontManager.h	/^+ (FontManager *)sharedManager;$/;"	v
sharedManagerState	CocosDenshion/CocosDenshion/CDAudioManager.h	/^+ (tAudioManagerState) sharedManagerState;$/;"	v
sharedProfiler	cocos2d/Support/CCProfiling.h	/^+ (CCProfiler*)sharedProfiler;$/;"	v
sharedScheduler	cocos2d/CCScheduler.h	/^+(CCScheduler *)sharedScheduler;$/;"	v
sharedSoundManager	experimental/sound-engine/PASoundMgr.h	/^+ (PASoundMgr *)sharedSoundManager;$/;"	v
sharedSpriteFrameCache	cocos2d/CCSpriteFrameCache.h	/^+ (CCSpriteFrameCache *) sharedSpriteFrameCache;$/;"	v
sharedState	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^+ (GameState *)sharedState;$/;"	v
sharedTextureCache	cocos2d/CCTextureCache.h	/^+ (CCTextureCache *) sharedTextureCache;$/;"	v
shutdown	external/Tremor/ogg.h	/^  int                   shutdown;$/;"	m	struct:ogg_buffer_state
signature	cocos2d/Support/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table
sincos_lookup0	external/Tremor/mdct_lookup.h	/^static LOOKUP_T sincos_lookup0[1026] = {$/;"	v
sincos_lookup1	external/Tremor/mdct_lookup.h	/^static LOOKUP_T sincos_lookup1[1024] = {$/;"	v
singleStep	external/Box2d/Testbed/Framework/Test.h	/^	int32 singleStep;$/;"	m	struct:Settings
singleStep	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 singleStep;$/;"	m	struct:Settings
size	cocos2d/CCParticleSystem.h	/^	float		size;$/;"	m	struct:sCCParticle
size	cocos2d/ccTypes.h	/^	float		size;		\/\/ 4 bytes$/;"	m	struct:_ccPointSprite
size	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	int32 size;$/;"	m	struct:b2StackEntry
size	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	int size;$/;"	m	struct:cpHashSet
size	external/Tremor/ogg.h	/^  long                size;$/;"	m	struct:ogg_buffer
size	external/libpng/png.h	/^    png_size_t size;$/;"	m	struct:png_unknown_chunk_t
size	external/libpng/pngtest.c	/^   png_uint_32               size;$/;"	m	struct:memory_information	file:
sort32a	external/Tremor/sharedbook.c	/^static int sort32a(const void *a,const void *b){$/;"	f	file:
soundEngine	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readonly) CDSoundEngine *soundEngine;$/;"	v
soundEngine	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^@property (readonly) SimpleAudioEngine *soundEngine;$/;"	v
soundId	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly) int soundId;$/;"	v
soundId	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) int soundId;$/;"	v
soundsMasterGain	experimental/sound-engine/PASoundMgr.h	/^@property (readwrite, assign) float soundsMasterGain;$/;"	v
sourceGroup	CocosDenshion/CocosDenshion/CocosDenshion.h	/^} sourceGroup;$/;"	t	typeref:struct:_sourceGroup
sourceGroupTotal	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly) int sourceGroupTotal;$/;"	v
sourceId	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	ALuint sourceId;$/;"	m	struct:_sourceInfo
sourceImage	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSString *sourceImage;$/;"	v
sourceInfo	CocosDenshion/CocosDenshion/CocosDenshion.h	/^} sourceInfo;	$/;"	t	typeref:struct:_sourceInfo
sourceStatuses	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	int *sourceStatuses;\/\/pointer into array of source status information$/;"	m	struct:_sourceGroup
sourceTotal	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readonly) int sourceTotal;$/;"	v
space	external/Chipmunk/Demo/Bounce.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/Joints.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/LogoSmash.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/MagnetsElectric.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/OneWay.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/Planet.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/Player.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/PyramidStack.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/PyramidTopple.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/Sensors.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/Simple.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/Demo/TheoJansen.c	/^cpSpace *space;$/;"	v
space	external/Chipmunk/src/cpSpace.c	/^	cpSpace *space;$/;"	m	struct:removalContext	file:
spacing	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) unsigned int spacing;$/;"	v
spanflag	external/Tremor/ogg.h	/^  int            spanflag;$/;"	m	struct:ogg_stream_state
spawnIds	CocosDenshion/TestsAndDemos/TomTheTurret/Level.h	/^@property (nonatomic, retain) NSMutableArray *spawnIds;$/;"	v
spawnRate	CocosDenshion/TestsAndDemos/TomTheTurret/Level.h	/^@property (nonatomic, assign) float spawnRate;$/;"	v
spawnSeconds	CocosDenshion/TestsAndDemos/TomTheTurret/Level.h	/^@property (nonatomic, assign) float spawnSeconds;$/;"	v
speed	cocos2d/CCAction.h	/^@property (nonatomic,readwrite) float speed;$/;"	v
speed	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float speed;$/;"	v
speedVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float speedVar;$/;"	v
springForce	external/Chipmunk/Demo/Springies.c	/^springForce(cpConstraint *spring, cpFloat dist)$/;"	f	file:
springForceFunc	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpDampedSpringForceFunc springForceFunc;$/;"	m	struct:cpDampedSpring
springTorqueFunc	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpDampedRotarySpringTorqueFunc springTorqueFunc;$/;"	m	struct:cpDampedRotarySpring
springVAR	external/Chipmunk/Demo/drawSpace.c	/^static const GLfloat springVAR[] = {$/;"	v	file:
springVAR_count	external/Chipmunk/Demo/drawSpace.c	/^static const int springVAR_count = sizeof(springVAR)\/sizeof(GLfloat)\/2;$/;"	v	file:
sprite	cocos2d/CCProgressTimer.h	/^@property (nonatomic, readwrite, retain) CCSprite *sprite;$/;"	v
sprite	cocos2d/CCRenderTexture.h	/^@property (nonatomic,readwrite, assign) CCSprite* sprite;$/;"	v
spriteSheet	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/ActionScene.h	/^@property (nonatomic, assign) CCSpriteSheet *spriteSheet;$/;"	v
spriteSheet	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSpriteSheet *spriteSheet;$/;"	v
spriteSheet	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/MainMenuScene.h	/^@property (nonatomic, assign) CCSpriteSheet *spriteSheet;$/;"	v
spriteSheet	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) CCSpriteSheet *spriteSheet;$/;"	v
spriteSheet	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite,assign) CCSpriteSheet *spriteSheet;$/;"	v
src	cocos2d/ccTypes.h	/^	GLenum src;$/;"	m	struct:_ccBlendFunc
stages	external/Tremor/res012.c	/^  int         stages;$/;"	m	struct:__anon72	file:
stamp	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	int stamp;$/;"	m	struct:cpArbiter
stamp	external/Chipmunk/include/chipmunk/cpSpace.h	/^	int stamp;$/;"	m	struct:cpContactBufferHeader
stamp	external/Chipmunk/include/chipmunk/cpSpace.h	/^	int stamp;$/;"	m	struct:cpSpace
stamp	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	int stamp;$/;"	m	struct:cpHandle
stamp	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	int stamp;$/;"	m	struct:cpSpaceHash
start	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float start;$/;"	v
start	external/Chipmunk/src/cpSpace.c	/^	cpVect start, end;$/;"	m	struct:segQueryContext	file:
start	external/Chipmunk/src/cpSpace.c	/^	cpVect start, end;$/;"	m	struct:segQueryFirstContext	file:
startColor	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) ccColor4F startColor;$/;"	v
startColorVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) ccColor4F startColorVar;$/;"	v
startIndex	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	int startIndex;$/;"	m	struct:_sourceGroup
startPos	cocos2d/CCParticleSystem.h	/^	CGPoint				startPos;$/;"	m	struct:sCCParticle
startRadius	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float startRadius;$/;"	v
startRadiusVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float startRadiusVar;$/;"	v
startSize	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float startSize;$/;"	v
startSizeVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float startSizeVar;$/;"	v
startSpin	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float startSpin;$/;"	v
startSpinVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float startSpinVar;$/;"	v
startValue	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) float startValue;$/;"	v
state	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^@property (readonly) tGameSoundState state;$/;"	v
state	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	State state;$/;"	m	struct:b2TOIOutput
state	external/Box2d/Testbed/Framework/Test.h	/^	b2PointState state;$/;"	m	struct:ContactPoint
state	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	char state;$/;"	m	struct:cpArbiter
state	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	b2PointState state;$/;"	m	struct:ContactPoint
staticBody	external/Chipmunk/Demo/Bounce.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/Joints.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/MagnetsElectric.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/OneWay.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/Planet.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/Player.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/PyramidStack.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/PyramidTopple.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/Sensors.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/Simple.c	/^cpBody *staticBody;$/;"	v
staticBody	external/Chipmunk/Demo/TheoJansen.c	/^cpBody *staticBody;$/;"	v
staticCenter	extras/joystick/Joystick.h	/^@property (readwrite, assign) bool staticCenter;$/;"	v
staticShapes	external/Chipmunk/include/chipmunk/cpSpace.h	/^	cpSpaceHash *staticShapes;$/;"	m	struct:cpSpace
static_codebook	external/Tremor/codebook.h	/^typedef struct static_codebook{$/;"	s
static_codebook	external/Tremor/codebook.h	/^} static_codebook;$/;"	t	typeref:struct:static_codebook
status	cocos2d/Support/TGAlib.h	/^	int status;$/;"	m	struct:sImageTGA
status_dots	external/libpng/pngtest.c	/^static int status_dots = 1;$/;"	v	file:
status_dots_requested	external/libpng/pngtest.c	/^static int status_dots_requested = 0;$/;"	v	file:
status_pass	external/libpng/pngtest.c	/^static int status_pass = 1;$/;"	v	file:
step	cocos2d/CCGrid.h	/^@property (nonatomic,readwrite) CGPoint step;$/;"	v
stiffness	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpFloat stiffness;$/;"	m	struct:cpDampedRotarySpring
stiffness	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpFloat stiffness;$/;"	m	struct:cpDampedSpring
stopTargetWhenComplete	CocosDenshion/CocosDenshion/CocosDenshion.h	/^@property (readwrite, nonatomic) BOOL stopTargetWhenComplete;$/;"	v
storyScene	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	/^@property (nonatomic, retain) StoryScene *storyScene;$/;"	v
storyStrings	CocosDenshion/TestsAndDemos/TomTheTurret/Level.h	/^@property (nonatomic, retain) NSMutableArray *storyStrings;$/;"	v
string	external/FontLabel/ZAttributedString.h	/^@property (nonatomic, readonly) NSString *string;$/;"	v
subItems	cocos2d/CCMenuItem.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *subItems;$/;"	v
submaps	external/Tremor/backends.h	/^  int   submaps;  \/* <= 16 *\/$/;"	m	struct:vorbis_info_mapping0
suicideEnding	CocosDenshion/TestsAndDemos/TomTheTurret/GameState.h	/^@property (nonatomic, retain) Level *suicideEnding;$/;"	v
supportsBGRA8888	cocos2d/CCConfiguration.h	/^@property (nonatomic, readonly) BOOL supportsBGRA8888;$/;"	v
supportsDiscardFramebuffer	cocos2d/CCConfiguration.h	/^@property (nonatomic, readonly) BOOL supportsDiscardFramebuffer;$/;"	v
supportsNPOT	cocos2d/CCConfiguration.h	/^@property (nonatomic, readonly) BOOL supportsNPOT;$/;"	v
supportsPVRTC	cocos2d/CCConfiguration.h	/^@property (nonatomic, readonly) BOOL supportsPVRTC;$/;"	v
surfaceSize	cocos2d/Support/EAGLView.h	/^@property(nonatomic,readonly) CGSize surfaceSize;$/;"	v
surface_v	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect surface_v;$/;"	m	struct:cpShape
surface_vr	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpVect surface_vr;$/;"	m	struct:cpArbiter
swallowsTouches	cocos2d/CCTouchHandler.h	/^@property(nonatomic, readwrite) BOOL swallowsTouches; \/\/ default NO$/;"	v
swappedColl	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	char swappedColl;$/;"	m	struct:cpArbiter
sweepA	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	b2Sweep sweepA;$/;"	m	struct:b2TOIInput
sweepB	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	b2Sweep sweepB;$/;"	m	struct:b2TOIInput
sys	tools/compatibility_with_0_8/generate_compat_file.py	/^import sys$/;"	i
sys	tools/spritesheet-artifact-fixer.py	/^import sys$/;"	i
sys	tools/tmx-embeded-2-png.py	/^import sys$/;"	i
t	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	float32 t;$/;"	m	struct:b2TOIOutput
t	external/Chipmunk/include/chipmunk/cpBB.h	/^	cpFloat l, b, r ,t;$/;"	m	struct:cpBB
t	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat a, w, t;$/;"	m	struct:cpBody
t	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpFloat t; \/\/ Distance along query segment, will always be in the range [0, 1].$/;"	m	struct:cpSegmentQueryInfo
tAppState	CocosDenshion/TestsAndDemos/DrumPad/DenshionDemo.h	/^} tAppState;$/;"	t	typeref:enum:__anon7
tAudioManagerMode	CocosDenshion/CocosDenshion/CDAudioManager.h	/^} tAudioManagerMode;$/;"	t	typeref:enum:__anon1
tAudioManagerResignBehavior	CocosDenshion/CocosDenshion/CDAudioManager.h	/^} tAudioManagerResignBehavior;$/;"	t	typeref:enum:__anon3
tAudioManagerState	CocosDenshion/CocosDenshion/CDAudioManager.h	/^} tAudioManagerState;$/;"	t	typeref:enum:__anon2
tAudioSourceChannel	CocosDenshion/CocosDenshion/CDAudioManager.h	/^} tAudioSourceChannel;	$/;"	t	typeref:enum:__anon4
tAxes	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpPolyShapeAxis *tAxes;$/;"	m	struct:cpPolyShape
tCCParticle	cocos2d/CCParticleSystem.h	/^}tCCParticle;$/;"	t	typeref:struct:sCCParticle
tCCPositionType	cocos2d/CCParticleSystem.h	/^}tCCPositionType;$/;"	t	typeref:enum:__anon24
tCDInterpolationType	CocosDenshion/CocosDenshion/CocosDenshion.h	/^} tCDInterpolationType;$/;"	t	typeref:enum:__anon6
tDepthBufferFormat	cocos2d/CCDirector.h	/^} tDepthBufferFormat;$/;"	t	typeref:enum:__anon36
tGameSoundState	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/GameSoundManager.h	/^} tGameSoundState;$/;"	t	typeref:enum:__anon8
tHashElement	cocos2d/CCActionManager.h	/^} tHashElement;$/;"	t	typeref:struct:_hashElement
tIME_chunk_present	external/libpng/pngtest.c	/^static int tIME_chunk_present = 0;$/;"	v	file:
tIME_string	external/libpng/pngtest.c	/^static char tIME_string[PNG_tIME_STRING_LENGTH] = "tIME chunk is not present";$/;"	v	file:
tImageTGA	cocos2d/Support/TGAlib.h	/^} tImageTGA;$/;"	t	typeref:struct:sImageTGA
tLongAudioSourceState	CocosDenshion/CocosDenshion/CDAudioManager.h	/^} tLongAudioSourceState;$/;"	t	typeref:enum:__anon5
tMass	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat nMass, tMass, bounce;$/;"	m	struct:cpContact
tMax	external/Box2d/Box2D/Collision/b2TimeOfImpact.h	/^	float32 tMax;		\/\/ defines sweep interval [0, tMax]$/;"	m	struct:b2TOIInput
tOrientation	cocos2d/CCTransition.h	/^} tOrientation;$/;"	t	typeref:enum:__anon34
tPixelFormat	cocos2d/CCDirector.h	/^} tPixelFormat;$/;"	t	typeref:enum:__anon35
tPostStatus	cocoslive/CLScoreServerPost.h	/^} tPostStatus;$/;"	t	typeref:enum:__anon14
tQueryFlags	cocoslive/CLScoreServerRequest.h	/^} tQueryFlags;$/;"	t	typeref:enum:__anon17
tQueryType	cocoslive/CLScoreServerRequest.h	/^} tQueryType;$/;"	t	typeref:enum:__anon16
tVerts	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpVect *tVerts;$/;"	m	struct:cpPolyShape
t_decode	external/libpng/pngtest.c	/^static float t_start, t_stop, t_decode, t_encode, t_misc;$/;"	v	file:
t_encode	external/libpng/pngtest.c	/^static float t_start, t_stop, t_decode, t_encode, t_misc;$/;"	v	file:
t_misc	external/libpng/pngtest.c	/^static float t_start, t_stop, t_decode, t_encode, t_misc;$/;"	v	file:
t_start	external/libpng/pngtest.c	/^static float t_start, t_stop, t_decode, t_encode, t_misc;$/;"	v	file:
t_stop	external/libpng/pngtest.c	/^static float t_start, t_stop, t_decode, t_encode, t_misc;$/;"	v	file:
ta	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect ta, tb, tn;$/;"	m	struct:cpSegmentShape
table	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	cpHashSetBin **table, *pooledBins;$/;"	m	struct:cpHashSet
table	external/Chipmunk/include/chipmunk/cpSpaceHash.h	/^	cpSpaceHashBin **table, *pooledBins;$/;"	m	struct:cpSpaceHash
tag	cocos2d/CCAction.h	/^@property (nonatomic,readwrite,assign) int tag;$/;"	v
tag	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) int tag;$/;"	v
tagPaddleState	tests/TouchesTest/Paddle.h	/^typedef enum tagPaddleState {$/;"	g
tagcompare	external/Tremor/info.c	/^static int tagcompare(const char *s1, const char *s2, int n){$/;"	f	file:
tail	cocos2d/Support/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle
tail	external/Tremor/ogg.h	/^  ogg_reference *tail;$/;"	m	struct:oggpack_buffer
tangentImpulse	external/Box2d/Box2D/Collision/b2Collision.h	/^	float32 tangentImpulse;	\/\/\/< the friction impulse$/;"	m	struct:b2ManifoldPoint
tangentImpulse	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 tangentImpulse;$/;"	m	struct:b2ContactConstraintPoint
tangentImpulses	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	float32 tangentImpulses[b2_maxManifoldPoints];$/;"	m	struct:b2ContactImpulse
tangentMass	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 tangentMass;$/;"	m	struct:b2ContactConstraintPoint
tangentialAccel	cocos2d/CCParticleSystem.h	/^			float		tangentialAccel;$/;"	m	struct:sCCParticle::__anon26::__anon27
tangentialAccel	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float tangentialAccel;$/;"	v
tangentialAccelVar	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) float tangentialAccelVar;$/;"	v
tapToCont	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSprite *tapToCont;$/;"	v
tapToCont	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/StoryScene.h	/^@property (nonatomic, assign) CCSprite *tapToCont;$/;"	v
target	cocos2d/CCAction.h	/^@property (nonatomic,readonly,assign) id target;$/;"	v
target	cocos2d/CCActionManager.h	/^	id				target;$/;"	m	struct:_hashElement
target	external/Box2d/Box2D/Dynamics/Joints/b2MouseJoint.h	/^	b2Vec2 target;$/;"	m	struct:b2MouseJointDef
target_vrn	external/Chipmunk/include/chipmunk/constraints/cpDampedSpring.h	/^	cpFloat target_vrn;$/;"	m	struct:cpDampedSpring
target_wrn	external/Chipmunk/include/chipmunk/constraints/cpDampedRotarySpring.h	/^	cpFloat target_wrn;$/;"	m	struct:cpDampedRotarySpring
tb	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect ta, tb, tn;$/;"	m	struct:cpSegmentShape
tbl	cocos2d/Support/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table
tc	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect tc;$/;"	m	struct:cpCircleShape
tell_func	external/Tremor/ivorbisfile.h	/^  long   (*tell_func)  (void *datasource);$/;"	m	struct:__anon81
test	external/Box2d/Testbed/Framework/Main.cpp	/^	Test* test;$/;"	m	namespace:__anon70	file:
test	external/Box2d/Testbed/Framework/Test.h	/^	Test* test;$/;"	m	class:DestructionListener
test	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^		Test* test;$/;"	m	class:DestructionListener
testCount	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 testCount = 0;$/;"	m	namespace:__anon70	file:
testIndex	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 testIndex = 0;$/;"	m	namespace:__anon70	file:
testSelection	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 testSelection = 0;$/;"	m	namespace:__anon70	file:
test_one_file	external/libpng/pngtest.c	/^test_one_file(PNG_CONST char *inname, PNG_CONST char *outname)$/;"	f
texCoords	cocos2d/ccTypes.h	/^	ccTex2F			texCoords;			\/\/ 8 byts$/;"	m	struct:_ccV3F_C4B_T2F
texCoords	cocos2d/ccTypes.h	/^	ccTex2F			texCoords;$/;"	m	struct:_ccV2F_C4F_T2F
text	external/libpng/png.h	/^   png_charp text;         \/* comment, may be an empty string (ie "")$/;"	m	struct:png_text_struct
text_length	external/libpng/png.h	/^   png_size_t text_length; \/* length of the text string *\/$/;"	m	struct:png_text_struct
texture	cocos2d/CCGrid.h	/^@property (nonatomic, retain) CCTexture2D *texture;$/;"	v
texture	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite, retain) CCTexture2D * texture;$/;"	v
texture	cocos2d/CCRibbon.h	/^@property (nonatomic,readwrite,retain) CCTexture2D* texture;$/;"	v
texture	cocos2d/CCSpriteFrame.h	/^@property (nonatomic, retain, readwrite) CCTexture2D *texture;$/;"	v
texture	cocos2d/CCTextureAtlas.h	/^@property (nonatomic,retain) CCTexture2D *texture;$/;"	v
textureAtlas	cocos2d/CCAtlasNode.h	/^@property (nonatomic,readwrite,retain) CCTextureAtlas *textureAtlas;$/;"	v
textureAtlas	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite,assign) CCTextureAtlas *textureAtlas;$/;"	v
textureAtlas	cocos2d/CCSpriteSheet.h	/^@property (nonatomic,readwrite,retain) CCTextureAtlas * textureAtlas;$/;"	v
textureLength	cocos2d/CCRibbon.h	/^@property (nonatomic,readwrite) float textureLength;$/;"	v
textureRect	cocos2d/CCSprite.h	/^@property (nonatomic,readonly) CGRect textureRect;$/;"	v
tgaInfo	cocos2d/CCTileMapAtlas.h	/^@property (nonatomic,readonly) tImageTGA *tgaInfo;$/;"	v
th	external/Box2d/Testbed/Framework/Main.cpp	/^	int tx, ty, tw, th;$/;"	m	namespace:__anon70	file:
tileProperties	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSMutableDictionary *tileProperties;$/;"	v
tileSize	cocos2d/CCTMXTiledMap.h	/^@property (nonatomic,readonly) CGSize tileSize;$/;"	v
tileSize	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,assign) CGSize tileSize;$/;"	v
tiles	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite) unsigned int *tiles;$/;"	v
tiles	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			unsigned int *tiles;$/;"	v
tileset	cocos2d/CCTMXLayer.h	/^@property (nonatomic,readwrite,retain) CCTMXTilesetInfo *tileset;$/;"	v
tilesets	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite,retain) NSMutableArray *tilesets;$/;"	v
timeScale	cocos2d/CCScheduler.h	/^@property (nonatomic,readwrite) ccTime	timeScale;$/;"	v
timeToLive	cocos2d/CCParticleSystem.h	/^	ccTime		timeToLive;$/;"	m	struct:sCCParticle
time_type	external/Tremor/codec_internal.h	/^  int                     time_type[64];$/;"	m	struct:codec_setup_info
times	external/Tremor/codec_internal.h	/^  int        times;$/;"	m	struct:codec_setup_info
tl	cocos2d/ccTypes.h	/^	ccV2F_C4F_T2F	tl;$/;"	m	struct:_ccV2F_C4F_T2F_Quad
tl	cocos2d/ccTypes.h	/^	ccV3F_C4B_T2F	tl;$/;"	m	struct:_ccV3F_C4B_T2F_Quad
tl	cocos2d/ccTypes.h	/^	ccVertex2F		tl;$/;"	m	struct:_ccQuad2
tl	cocos2d/ccTypes.h	/^	ccVertex3F		tl;$/;"	m	struct:_ccQuad3
tn	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpVect ta, tb, tn;$/;"	m	struct:cpSegmentShape
toBARK	external/Tremor/floor0.c	/^STIN ogg_int32_t toBARK(int n){$/;"	f
tom	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/LoadingScene.h	/^@property (nonatomic, assign) CCSprite *tom;$/;"	v
top	cocos2d/CCBitmapFontAtlas.h	/^	int top;$/;"	m	struct:_bitmapFontPadding
torque_func	external/Chipmunk/Demo/MagnetsElectric.c	/^	SingForceFunc torque_func[SINGMAX];$/;"	m	struct:ActorSingularity	file:
totalParticles	cocos2d/CCParticleSystem.h	/^@property (nonatomic,readwrite,assign) int totalParticles;$/;"	v
totalQuads	cocos2d/CCTextureAtlas.h	/^@property (nonatomic,readonly) NSUInteger totalQuads;$/;"	v
totalSources	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	int totalSources;$/;"	m	struct:_sourceGroup
total_allocation	external/libpng/pngtest.c	/^static int total_allocation = 0;$/;"	v	file:
totaluse	external/Tremor/ivorbiscodec.h	/^  long                totaluse;$/;"	m	struct:vorbis_block
touchDelegate	cocos2d/Support/EAGLView.h	/^@property(nonatomic,readwrite,assign) id<EAGLTouchDelegate> touchDelegate;$/;"	v
touchSel	cocos2d/CCTouchDispatcher.h	/^	SEL				touchSel;$/;"	m	struct:ccTouchHandlerHelperData
touchesSel	cocos2d/CCTouchDispatcher.h	/^	SEL				touchesSel;$/;"	m	struct:ccTouchHandlerHelperData
tr	cocos2d/ccTypes.h	/^	ccV2F_C4F_T2F	tr;$/;"	m	struct:_ccV2F_C4F_T2F_Quad
tr	cocos2d/ccTypes.h	/^	ccV3F_C4B_T2F	tr;$/;"	m	struct:_ccV3F_C4B_T2F_Quad
tr	cocos2d/ccTypes.h	/^	ccVertex2F		tr;$/;"	m	struct:_ccQuad2
tr	cocos2d/ccTypes.h	/^	ccVertex3F		tr;$/;"	m	struct:_ccQuad3
trans	external/Chipmunk/include/chipmunk/cpHashSet.h	/^	cpHashSetTransFunc trans;$/;"	m	struct:cpHashSet
transformA	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2Transform transformA;$/;"	m	struct:b2DistanceInput
transformB	external/Box2d/Box2D/Collision/b2Distance.h	/^	b2Transform transformB;$/;"	m	struct:b2DistanceInput
transformtype	external/Tremor/codec_internal.h	/^  int transformtype;$/;"	m	struct:__anon80
tw	external/Box2d/Testbed/Framework/Main.cpp	/^	int tx, ty, tw, th;$/;"	m	namespace:__anon70	file:
twobppswaptable	external/libpng/pngtrans.c	/^static PNG_CONST png_byte twobppswaptable[256] = {$/;"	v	file:
tx	external/Box2d/Testbed/Framework/Main.cpp	/^	int tx, ty, tw, th;$/;"	m	namespace:__anon70	file:
ty	external/Box2d/Testbed/Framework/Main.cpp	/^	int tx, ty, tw, th;$/;"	m	namespace:__anon70	file:
type	cocos2d/CCProgressTimer.h	/^@property (nonatomic, readwrite) CCProgressTimerType type;$/;"	v
type	cocos2d/CCTouchDispatcher.h	/^	ccTouchSelectorFlag  type;$/;"	m	struct:ccTouchHandlerHelperData
type	cocos2d/Support/TGAlib.h	/^	unsigned char type, pixelDepth;$/;"	m	struct:sImageTGA
type	external/Box2d/Box2D/Collision/b2Collision.h	/^	Type type;$/;"	m	struct:b2Manifold
type	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	b2Manifold::Type type;$/;"	m	struct:b2ContactConstraint
type	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^	b2Manifold::Type type;$/;"	m	struct:b2TOIConstraint	file:
type	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	b2JointType type;$/;"	m	struct:b2JointDef
type	external/Box2d/Box2D/Dynamics/b2Body.h	/^	b2BodyType type;$/;"	m	struct:b2BodyDef
type	external/Chipmunk/Demo/MagnetsElectric.c	/^	char type[SINGMAX][100]; $/;"	m	struct:ActorSingularity	file:
type	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpShapeType type;$/;"	m	struct:cpShapeClass
u	cocos2d/ccTypes.h	/^	 float u;$/;"	m	struct:_ccTex2F
u	external/Chipmunk/Demo/Player.c	/^	cpFloat u;$/;"	m	struct:PlayerStruct	file:
u	external/Chipmunk/include/chipmunk/cpArbiter.h	/^	cpFloat u;$/;"	m	struct:cpArbiter
u	external/Chipmunk/include/chipmunk/cpShape.h	/^	cpFloat u;$/;"	m	struct:cpShape
uint16	external/Box2d/Box2D/Common/b2Settings.h	/^typedef unsigned short uint16;$/;"	t
uint32	external/Box2d/Box2D/Common/b2Settings.h	/^typedef unsigned int uint32;$/;"	t
uint32_t	cocos2d/Support/uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint8	external/Box2d/Box2D/Common/b2Settings.h	/^typedef unsigned char uint8;$/;"	t
unpack	external/Tremor/backends.h	/^  vorbis_info_floor     *(*unpack)(vorbis_info *,oggpack_buffer *);$/;"	m	struct:__anon73
unpack	external/Tremor/backends.h	/^  vorbis_info_mapping *(*unpack)(vorbis_info *,oggpack_buffer *);$/;"	m	struct:__anon77
unpack	external/Tremor/backends.h	/^  vorbis_info_residue *(*unpack)(vorbis_info *,oggpack_buffer *);$/;"	m	struct:__anon76
unsynced	external/Tremor/ogg.h	/^  int               unsynced;$/;"	m	struct:ogg_sync_state
unused_buffers	external/Tremor/ogg.h	/^  struct ogg_buffer    *unused_buffers;$/;"	m	struct:ogg_buffer_state	typeref:struct:ogg_buffer_state::ogg_buffer
unused_references	external/Tremor/ogg.h	/^  struct ogg_reference *unused_references;$/;"	m	struct:ogg_buffer_state	typeref:struct:ogg_buffer_state::ogg_reference
update	external/Chipmunk/Demo/Bounce.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Joints.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/LogoSmash.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/MagnetsElectric.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/OneWay.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Planet.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Player.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Plink.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Pump.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/PyramidStack.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/PyramidTopple.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Query.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Sensors.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Simple.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Springies.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/TheoJansen.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/Tumble.c	/^update(int ticks)$/;"	f	file:
update	external/Chipmunk/Demo/UnsafeOps.c	/^update(int ticks)$/;"	f	file:
updateBBCache	external/Chipmunk/src/cpSpace.c	/^updateBBCache(cpShape *shape, void *unused)$/;"	f	file:
updateFunc	external/Chipmunk/Demo/ChipmunkDemo.h	/^	demoUpdateFunc updateFunc;$/;"	m	struct:chipmunkDemo
updateFunc	external/Chipmunk/Demo/cocos2dChipmunkDemo.h	/^	demoUpdateFunc updateFunc;$/;"	m	struct:chipmunkDemo
upperAngle	external/Box2d/Box2D/Dynamics/Joints/b2RevoluteJoint.h	/^	float32 upperAngle;$/;"	m	struct:b2RevoluteJointDef
upperBound	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 upperBound;	\/\/\/< the upper vertex$/;"	m	struct:b2AABB
upperTranslation	external/Box2d/Box2D/Dynamics/Joints/b2LineJoint.h	/^	float32 upperTranslation;$/;"	m	struct:b2LineJointDef
upperTranslation	external/Box2d/Box2D/Dynamics/Joints/b2PrismaticJoint.h	/^	float32 upperTranslation;$/;"	m	struct:b2PrismaticJointDef
usable	CocosDenshion/CocosDenshion/CocosDenshion.h	/^	bool usable;$/;"	m	struct:_sourceInfo
usage	install-templates.sh	/^usage(){$/;"	f
usage	tools/mkatlas.pl	/^sub usage()$/;"	s
useRadii	external/Box2d/Box2D/Collision/b2Distance.h	/^	bool useRadii;$/;"	m	struct:b2DistanceInput
usedMalloc	external/Box2d/Box2D/Common/b2StackAllocator.h	/^	bool usedMalloc;$/;"	m	struct:b2StackEntry
used_entries	external/Tremor/codebook.h	/^  long used_entries;  \/* populated codebook entries *\/$/;"	m	struct:codebook
userData	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) void *userData;$/;"	v
userData	external/Box2d/Box2D/Collision/b2DynamicTree.h	/^	void* userData;$/;"	m	struct:b2DynamicTreeNode
userData	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	void* userData;$/;"	m	struct:b2JointDef
userData	external/Box2d/Box2D/Dynamics/b2Body.h	/^	void* userData;$/;"	m	struct:b2BodyDef
userData	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	void* userData;$/;"	m	struct:b2FixtureDef
user_chunk_data	external/libpng/pngtest.c	/^static png_uint_32 user_chunk_data[4];$/;"	v	file:
user_comments	external/Tremor/ivorbiscodec.h	/^  char **user_comments;$/;"	m	struct:vorbis_comment
usesSpriteSheet	cocos2d/CCSprite.h	/^@property (nonatomic,readwrite) BOOL usesSpriteSheet;$/;"	v
uthash_expand_fyi	cocos2d/Support/uthash.h	72;"	d
uthash_fatal	cocos2d/Support/uthash.h	67;"	d
uthash_free	cocos2d/Support/uthash.h	69;"	d
uthash_malloc	cocos2d/Support/uthash.h	68;"	d
uthash_noexpand_fyi	cocos2d/Support/uthash.h	71;"	d
v	cocos2d/ccTypes.h	/^	 float v;$/;"	m	struct:_ccTex2F
v	external/Box2d/Box2D/Collision/b2Collision.h	/^	b2Vec2 v;$/;"	m	struct:b2ClipVertex
v	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Vec2 v;$/;"	m	struct:b2Velocity
v	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpVect p, v, f;$/;"	m	struct:cpBody
v_bias	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpVect v_bias;$/;"	m	struct:cpBody
v_limit	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat v_limit, w_limit;$/;"	m	struct:cpBody
value	external/Chipmunk/Demo/MagnetsElectric.c	/^	cpFloat value[SINGMAX];$/;"	m	struct:ActorSingularity	file:
valuelist	external/Tremor/codebook.h	/^  ogg_int32_t  *valuelist;  \/* list of dim*entries actual entry values *\/  $/;"	m	struct:codebook
vb	external/Tremor/ivorbisfile.h	/^  vorbis_block     vb; \/* local working space for packet->PCM decode *\/$/;"	m	struct:OggVorbis_File
vc	external/Tremor/ivorbisfile.h	/^  vorbis_comment  *vc;$/;"	m	struct:OggVorbis_File
vd	external/Tremor/ivorbiscodec.h	/^  vorbis_dsp_state *vd; \/* For read-only access of configuration *\/$/;"	m	struct:vorbis_block
vd	external/Tremor/ivorbisfile.h	/^  vorbis_dsp_state vd; \/* central working state for the packet->PCM decoder *\/$/;"	m	struct:OggVorbis_File
velocity	tests/TouchesTest/Ball.h	/^@property(nonatomic) CGPoint velocity;$/;"	v
velocityBias	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.h	/^	float32 velocityBias;$/;"	m	struct:b2ContactConstraintPoint
velocityIterations	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^	int32 velocityIterations;$/;"	m	struct:b2TimeStep
velocityIterations	external/Box2d/Testbed/Framework/Test.h	/^	int32 velocityIterations;$/;"	m	struct:Settings
velocityIterations	tests/Box2DTestBed-Cocos2dIntegration/iPhoneTest.h	/^	int32 velocityIterations;$/;"	m	struct:Settings
velocity_func	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpBodyVelocityFunc velocity_func;$/;"	m	struct:cpBody
vendor	external/Tremor/ivorbiscodec.h	/^  char  *vendor;$/;"	m	struct:vorbis_comment
verbose	external/libpng/pngtest.c	/^static int verbose = 0;$/;"	v	file:
version	external/Tremor/ivorbiscodec.h	/^  int version;$/;"	m	struct:vorbis_info
version_1_2_43	external/libpng/png.h	/^typedef png_structp version_1_2_43;$/;"	t
vertexZ	cocos2d/CCNode.h	/^@property (nonatomic,readwrite) float vertexZ;$/;"	v
vertices	cocos2d/ccTypes.h	/^	ccVertex2F		vertices;$/;"	m	struct:_ccV2F_C4F_T2F
vertices	cocos2d/ccTypes.h	/^	ccVertex3F		vertices;			\/\/ 12 bytes$/;"	m	struct:_ccV3F_C4B_T2F
verts	external/Chipmunk/include/chipmunk/cpPolyShape.h	/^	cpVect *verts;$/;"	m	struct:cpPolyShape
vi	external/Tremor/floor0.c	/^  vorbis_info_floor0 *vi;$/;"	m	struct:__anon86	file:
vi	external/Tremor/floor1.c	/^  vorbis_info_floor1 *vi;$/;"	m	struct:__anon71	file:
vi	external/Tremor/ivorbiscodec.h	/^  vorbis_info *vi;$/;"	m	struct:vorbis_dsp_state
vi	external/Tremor/ivorbisfile.h	/^  vorbis_info     *vi;$/;"	m	struct:OggVorbis_File
viewZoom	external/Box2d/Testbed/Framework/Main.cpp	/^	float32 viewZoom = 1.0f;$/;"	m	namespace:__anon70	file:
visible	cocos2d/CCNode.h	/^@property(nonatomic,readwrite,assign) BOOL visible;$/;"	v
visible	cocos2d/CCTMXXMLParser.h	/^@property (nonatomic,readwrite)			BOOL visible;$/;"	v
volume	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readwrite, nonatomic) float volume;$/;"	v
vorbis_block	external/Tremor/ivorbiscodec.h	/^typedef struct vorbis_block{$/;"	s
vorbis_block	external/Tremor/ivorbiscodec.h	/^} vorbis_block;$/;"	t	typeref:struct:vorbis_block
vorbis_block_clear	external/Tremor/block.c	/^int vorbis_block_clear(vorbis_block *vb){$/;"	f
vorbis_block_init	external/Tremor/block.c	/^int vorbis_block_init(vorbis_dsp_state *v, vorbis_block *vb){$/;"	f
vorbis_book_clear	external/Tremor/sharedbook.c	/^void vorbis_book_clear(codebook *b){$/;"	f
vorbis_book_decode	external/Tremor/codebook.c	/^long vorbis_book_decode(codebook *book, oggpack_buffer *b){$/;"	f
vorbis_book_decodev_add	external/Tremor/codebook.c	/^long vorbis_book_decodev_add(codebook *book,ogg_int32_t *a,$/;"	f
vorbis_book_decodev_set	external/Tremor/codebook.c	/^long vorbis_book_decodev_set(codebook *book,ogg_int32_t *a,$/;"	f
vorbis_book_decodevs_add	external/Tremor/codebook.c	/^long vorbis_book_decodevs_add(codebook *book,ogg_int32_t *a,$/;"	f
vorbis_book_decodevv_add	external/Tremor/codebook.c	/^long vorbis_book_decodevv_add(codebook *book,ogg_int32_t **a,\\$/;"	f
vorbis_book_init_decode	external/Tremor/sharedbook.c	/^int vorbis_book_init_decode(codebook *c,const static_codebook *s){$/;"	f
vorbis_comment	external/Tremor/ivorbiscodec.h	/^typedef struct vorbis_comment{$/;"	s
vorbis_comment	external/Tremor/ivorbiscodec.h	/^} vorbis_comment;$/;"	t	typeref:struct:vorbis_comment
vorbis_comment_clear	external/Tremor/info.c	/^void vorbis_comment_clear(vorbis_comment *vc){$/;"	f
vorbis_comment_init	external/Tremor/info.c	/^void vorbis_comment_init(vorbis_comment *vc){$/;"	f
vorbis_comment_query	external/Tremor/info.c	/^char *vorbis_comment_query(vorbis_comment *vc, char *tag, int count){$/;"	f
vorbis_comment_query_count	external/Tremor/info.c	/^int vorbis_comment_query_count(vorbis_comment *vc, char *tag){$/;"	f
vorbis_coslook2_i	external/Tremor/floor0.c	/^STIN ogg_int32_t vorbis_coslook2_i(long a){$/;"	f
vorbis_coslook_i	external/Tremor/floor0.c	/^STIN ogg_int32_t vorbis_coslook_i(long a){$/;"	f
vorbis_dsp_clear	external/Tremor/block.c	/^void vorbis_dsp_clear(vorbis_dsp_state *v){$/;"	f
vorbis_dsp_state	external/Tremor/ivorbiscodec.h	/^typedef struct vorbis_dsp_state{$/;"	s
vorbis_dsp_state	external/Tremor/ivorbiscodec.h	/^} vorbis_dsp_state;$/;"	t	typeref:struct:vorbis_dsp_state
vorbis_fromdBlook_i	external/Tremor/floor0.c	/^STIN ogg_int32_t vorbis_fromdBlook_i(long a){$/;"	f
vorbis_func_floor	external/Tremor/backends.h	/^} vorbis_func_floor;$/;"	t	typeref:struct:__anon73
vorbis_func_mapping	external/Tremor/backends.h	/^} vorbis_func_mapping;$/;"	t	typeref:struct:__anon77
vorbis_func_residue	external/Tremor/backends.h	/^} vorbis_func_residue;$/;"	t	typeref:struct:__anon76
vorbis_info	external/Tremor/ivorbiscodec.h	/^typedef struct vorbis_info{$/;"	s
vorbis_info	external/Tremor/ivorbiscodec.h	/^} vorbis_info;$/;"	t	typeref:struct:vorbis_info
vorbis_info_blocksize	external/Tremor/info.c	/^int vorbis_info_blocksize(vorbis_info *vi,int zo){$/;"	f
vorbis_info_clear	external/Tremor/info.c	/^void vorbis_info_clear(vorbis_info *vi){$/;"	f
vorbis_info_floor	external/Tremor/codec_internal.h	/^typedef void vorbis_info_floor;$/;"	t
vorbis_info_floor0	external/Tremor/backends.h	/^} vorbis_info_floor0;$/;"	t	typeref:struct:__anon74
vorbis_info_floor1	external/Tremor/backends.h	/^} vorbis_info_floor1;$/;"	t	typeref:struct:__anon75
vorbis_info_init	external/Tremor/info.c	/^void vorbis_info_init(vorbis_info *vi){$/;"	f
vorbis_info_mapping	external/Tremor/codec_internal.h	/^typedef void vorbis_info_mapping;$/;"	t
vorbis_info_mapping0	external/Tremor/backends.h	/^typedef struct vorbis_info_mapping0{$/;"	s
vorbis_info_mapping0	external/Tremor/backends.h	/^} vorbis_info_mapping0;$/;"	t	typeref:struct:vorbis_info_mapping0
vorbis_info_mode	external/Tremor/codec_internal.h	/^} vorbis_info_mode;$/;"	t	typeref:struct:__anon80
vorbis_info_residue	external/Tremor/codec_internal.h	/^typedef void vorbis_info_residue;$/;"	t
vorbis_info_residue0	external/Tremor/backends.h	/^typedef struct vorbis_info_residue0{$/;"	s
vorbis_info_residue0	external/Tremor/backends.h	/^} vorbis_info_residue0;$/;"	t	typeref:struct:vorbis_info_residue0
vorbis_invsqlook_i	external/Tremor/floor0.c	/^STIN ogg_int32_t vorbis_invsqlook_i(long a,long e){$/;"	f
vorbis_look_floor	external/Tremor/codec_internal.h	/^typedef void vorbis_look_floor;$/;"	t
vorbis_look_floor0	external/Tremor/floor0.c	/^} vorbis_look_floor0;$/;"	t	typeref:struct:__anon86	file:
vorbis_look_floor1	external/Tremor/floor1.c	/^} vorbis_look_floor1;$/;"	t	typeref:struct:__anon71	file:
vorbis_look_mapping	external/Tremor/codec_internal.h	/^typedef void vorbis_look_mapping;$/;"	t
vorbis_look_mapping0	external/Tremor/mapping0.c	/^} vorbis_look_mapping0;$/;"	t	typeref:struct:__anon82	file:
vorbis_look_residue	external/Tremor/codec_internal.h	/^typedef void vorbis_look_residue;$/;"	t
vorbis_look_residue0	external/Tremor/res012.c	/^} vorbis_look_residue0;$/;"	t	typeref:struct:__anon72	file:
vorbis_look_transform	external/Tremor/codec_internal.h	/^typedef void vorbis_look_transform;$/;"	t
vorbis_lsp_to_curve	external/Tremor/floor0.c	/^void vorbis_lsp_to_curve(ogg_int32_t *curve,int *map,int n,int ln,$/;"	f
vorbis_packet_blocksize	external/Tremor/synthesis.c	/^long vorbis_packet_blocksize(vorbis_info *vi,ogg_packet *op){$/;"	f
vorbis_staticbook_clear	external/Tremor/sharedbook.c	/^void vorbis_staticbook_clear(static_codebook *b){$/;"	f
vorbis_staticbook_destroy	external/Tremor/sharedbook.c	/^void vorbis_staticbook_destroy(static_codebook *b){$/;"	f
vorbis_staticbook_unpack	external/Tremor/codebook.c	/^int vorbis_staticbook_unpack(oggpack_buffer *opb,static_codebook *s){$/;"	f
vorbis_synthesis	external/Tremor/synthesis.c	/^int vorbis_synthesis(vorbis_block *vb,ogg_packet *op,int decodep){$/;"	f
vorbis_synthesis_blockin	external/Tremor/block.c	/^int vorbis_synthesis_blockin(vorbis_dsp_state *v,vorbis_block *vb){$/;"	f
vorbis_synthesis_headerin	external/Tremor/info.c	/^int vorbis_synthesis_headerin(vorbis_info *vi,vorbis_comment *vc,ogg_packet *op){$/;"	f
vorbis_synthesis_init	external/Tremor/block.c	/^int vorbis_synthesis_init(vorbis_dsp_state *v,vorbis_info *vi){$/;"	f
vorbis_synthesis_pcmout	external/Tremor/block.c	/^int vorbis_synthesis_pcmout(vorbis_dsp_state *v,ogg_int32_t ***pcm){$/;"	f
vorbis_synthesis_read	external/Tremor/block.c	/^int vorbis_synthesis_read(vorbis_dsp_state *v,int bytes){$/;"	f
vorbis_synthesis_restart	external/Tremor/block.c	/^int vorbis_synthesis_restart(vorbis_dsp_state *v){$/;"	f
vwin1024	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin1024[512] = {$/;"	v
vwin128	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin128[64] = {$/;"	v
vwin2048	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin2048[1024] = {$/;"	v
vwin256	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin256[128] = {$/;"	v
vwin4096	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin4096[2048] = {$/;"	v
vwin512	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin512[256] = {$/;"	v
vwin64	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin64[32] = {$/;"	v
vwin8192	external/Tremor/window_lookup.h	/^static LOOKUP_T vwin8192[4096] = {$/;"	v
w	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2Vec2 w;		\/\/ wB - wA$/;"	m	struct:b2SimplexVertex	file:
w	external/Box2d/Box2D/Dynamics/b2Island.h	/^	float32 w;$/;"	m	struct:b2Velocity
w	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat a, w, t;$/;"	m	struct:cpBody
wA	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2Vec2 wA;		\/\/ support point in proxyA$/;"	m	struct:b2SimplexVertex	file:
wB	external/Box2d/Box2D/Collision/b2Distance.cpp	/^	b2Vec2 wB;		\/\/ support point in proxyB$/;"	m	struct:b2SimplexVertex	file:
w_bias	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat w_bias;$/;"	m	struct:cpBody
w_limit	external/Chipmunk/include/chipmunk/cpBody.h	/^	cpFloat v_limit, w_limit;$/;"	m	struct:cpBody
warmStarting	external/Box2d/Box2D/Dynamics/b2TimeStep.h	/^	bool warmStarting;$/;"	m	struct:b2TimeStep
whole	external/Tremor/misc.h	/^  ogg_int64_t whole;$/;"	m	union:magic
width	cocos2d/CCPVRTexture.h	/^@property (nonatomic,readonly) uint32_t width;$/;"	v
width	cocos2d/Support/TGAlib.h	/^	short int width;$/;"	m	struct:sImageTGA
width	external/Box2d/Testbed/Framework/Main.cpp	/^	int32 width = 640;$/;"	m	namespace:__anon70	file:
width	external/libpng/png.h	/^   png_uint_32 width; \/* width of row *\/$/;"	m	struct:png_row_info_struct
willPlayBackgroundMusic	CocosDenshion/CocosDenshion/CDAudioManager.h	/^@property (readonly) BOOL willPlayBackgroundMusic;$/;"	v
willPlayBackgroundMusic	CocosDenshion/CocosDenshion/SimpleAudioEngine.h	/^@property (readonly) BOOL willPlayBackgroundMusic;$/;"	v
window	CocosDenshion/TestsAndDemos/FadeToGrey/Classes/FadeToGreyAppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	CocosDenshion/TestsAndDemos/FancyRatMeteringDemo/Classes/FancyRatMeteringDemoAppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	CocosDenshion/TestsAndDemos/TomTheTurret/Classes/TomTheTurretAppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	external/Tremor/codec_internal.h	/^  const void             *window[2];$/;"	m	struct:private_state
window	templates/cocos2d_app/Classes/___PROJECTNAMEASIDENTIFIER___AppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	templates/cocos2d_box2d_app/Classes/___PROJECTNAMEASIDENTIFIER___AppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	templates/cocos2d_chipmunk_app/Classes/___PROJECTNAMEASIDENTIFIER___AppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/Box2DTestBed-Cocos2dIntegration/Box2DAppDelegate.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/EAGLViewTest/EAGLViewTest.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/RotateWorldTest.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/TransitionsTest.h	/^@property (nonatomic, readonly) UIWindow *window;$/;"	v
window	tests/attachDemo/attachDemo.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/blocks/ActionsWithBlocks.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/cocosLive/cocosLiveDemo.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/samples/HelloActions.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/samples/HelloEvents.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
window	tests/samples/HelloWorld.h	/^@property (nonatomic, retain) UIWindow *window;$/;"	v
windowtype	external/Tremor/codec_internal.h	/^  int windowtype;$/;"	m	struct:__anon80
wrapS	cocos2d/CCTexture2D.h	/^	GLuint	wrapS;$/;"	m	struct:_ccTexParams
wrapT	cocos2d/CCTexture2D.h	/^	GLuint	wrapT;$/;"	m	struct:_ccTexParams
write_row_callback	external/libpng/pngtest.c	/^write_row_callback(png_structp png_ptr, png_uint_32 row_number, int pass)$/;"	f
write_to_file	tools/compatibility_with_0_8/generate_compat_file.py	/^def write_to_file():$/;"	f
wrote_question	external/libpng/pngtest.c	/^static int wrote_question = 0;$/;"	v	file:
x	cocos2d/ccTypes.h	/^		float x;$/;"	m	struct:_ccVertex3F
x	cocos2d/ccTypes.h	/^	int	x;$/;"	m	struct:_ccGridSize
x	external/Box2d/Box2D/Common/b2Math.h	/^	float32 x, y, z;$/;"	m	struct:b2Vec3
x	external/Box2d/Box2D/Common/b2Math.h	/^	float32 x, y;$/;"	m	struct:b2Vec2
x	external/Box2d/Box2D/Dynamics/b2Island.h	/^	b2Vec2 x;$/;"	m	struct:b2Position
x	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef struct cpVect{cpFloat x,y;} cpVect;$/;"	m	struct:cpVect
xAdvance	cocos2d/CCBitmapFontAtlas.h	/^	int xAdvance;$/;"	m	struct:_bitmapFontDef
xHeight	external/FontLabel/ZFont.h	/^@property (nonatomic, readonly) CGFloat xHeight;$/;"	v
xOffset	cocos2d/CCBitmapFontAtlas.h	/^	int xOffset;$/;"	m	struct:_bitmapFontDef
xml	tools/tmx-embeded-2-png.py	/^import xml.dom.minidom$/;"	i
y	cocos2d/ccTypes.h	/^		float y;$/;"	m	struct:_ccVertex3F
y	cocos2d/ccTypes.h	/^	int	y;$/;"	m	struct:_ccGridSize
y	external/Box2d/Box2D/Common/b2Math.h	/^	float32 x, y, z;$/;"	m	struct:b2Vec3
y	external/Box2d/Box2D/Common/b2Math.h	/^	float32 x, y;$/;"	m	struct:b2Vec2
y	external/Chipmunk/include/chipmunk/chipmunk_types.h	/^	typedef struct cpVect{cpFloat x,y;} cpVect;$/;"	m	struct:cpVect
yOffset	cocos2d/CCBitmapFontAtlas.h	/^	int yOffset;$/;"	m	struct:_bitmapFontDef
year	external/libpng/png.h	/^   png_uint_16 year; \/* full year, as in, 1995 *\/$/;"	m	struct:png_time_struct
your_png_h_is_not_version_1_2_43	external/libpng/pngtest.c	/^typedef version_1_2_43 your_png_h_is_not_version_1_2_43;$/;"	t	file:
z	cocos2d/ccTypes.h	/^		float z;$/;"	m	struct:_ccVertex3F
z	external/Box2d/Box2D/Common/b2Math.h	/^	float32 x, y, z;$/;"	m	struct:b2Vec3
zAttributedText	external/FontLabel/FontLabel.h	/^@property (nonatomic, copy) ZAttributedString *zAttributedText;$/;"	v
zFont	external/FontLabel/FontLabel.h	/^@property (nonatomic, retain, setter=setZFont:) ZFont *zFont;$/;"	v
zOrder	cocos2d/CCNode.h	/^@property(nonatomic,readonly) int zOrder;$/;"	v
zero_samples	external/libpng/pngtest.c	/^static png_uint_32 zero_samples;$/;"	v	file:
~Test	external/Box2d/Testbed/Framework/Test.cpp	/^Test::~Test()$/;"	f	class:Test
~b2BlockAllocator	external/Box2d/Box2D/Common/b2BlockAllocator.cpp	/^b2BlockAllocator::~b2BlockAllocator()$/;"	f	class:b2BlockAllocator
~b2Body	external/Box2d/Box2D/Dynamics/b2Body.cpp	/^b2Body::~b2Body()$/;"	f	class:b2Body
~b2BroadPhase	external/Box2d/Box2D/Collision/b2BroadPhase.cpp	/^b2BroadPhase::~b2BroadPhase()$/;"	f	class:b2BroadPhase
~b2CircleContact	external/Box2d/Box2D/Dynamics/Contacts/b2CircleContact.h	/^	~b2CircleContact() {}$/;"	f	class:b2CircleContact
~b2Contact	external/Box2d/Box2D/Dynamics/Contacts/b2Contact.h	/^	virtual ~b2Contact() {}$/;"	f	class:b2Contact
~b2ContactFilter	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual ~b2ContactFilter() {}$/;"	f	class:b2ContactFilter
~b2ContactListener	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual ~b2ContactListener() {}$/;"	f	class:b2ContactListener
~b2ContactSolver	external/Box2d/Box2D/Dynamics/Contacts/b2ContactSolver.cpp	/^b2ContactSolver::~b2ContactSolver()$/;"	f	class:b2ContactSolver
~b2DebugDraw	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual ~b2DebugDraw() {}$/;"	f	class:b2DebugDraw
~b2DestructionListener	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual ~b2DestructionListener() {}$/;"	f	class:b2DestructionListener
~b2DynamicTree	external/Box2d/Box2D/Collision/b2DynamicTree.cpp	/^b2DynamicTree::~b2DynamicTree()$/;"	f	class:b2DynamicTree
~b2Fixture	external/Box2d/Box2D/Dynamics/b2Fixture.cpp	/^b2Fixture::~b2Fixture()$/;"	f	class:b2Fixture
~b2FixtureDef	external/Box2d/Box2D/Dynamics/b2Fixture.h	/^	virtual ~b2FixtureDef() {}$/;"	f	struct:b2FixtureDef
~b2Island	external/Box2d/Box2D/Dynamics/b2Island.cpp	/^b2Island::~b2Island()$/;"	f	class:b2Island
~b2Joint	external/Box2d/Box2D/Dynamics/Joints/b2Joint.h	/^	virtual ~b2Joint() {}$/;"	f	class:b2Joint
~b2PolygonAndCircleContact	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.h	/^	~b2PolygonAndCircleContact() {}$/;"	f	class:b2PolygonAndCircleContact
~b2PolygonContact	external/Box2d/Box2D/Dynamics/Contacts/b2PolygonContact.h	/^	~b2PolygonContact() {}$/;"	f	class:b2PolygonContact
~b2QueryCallback	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual ~b2QueryCallback() {}$/;"	f	class:b2QueryCallback
~b2RayCastCallback	external/Box2d/Box2D/Dynamics/b2WorldCallbacks.h	/^	virtual ~b2RayCastCallback() {}$/;"	f	class:b2RayCastCallback
~b2Shape	external/Box2d/Box2D/Collision/Shapes/b2Shape.h	/^	virtual ~b2Shape() {}$/;"	f	class:b2Shape
~b2StackAllocator	external/Box2d/Box2D/Common/b2StackAllocator.cpp	/^b2StackAllocator::~b2StackAllocator()$/;"	f	class:b2StackAllocator
~b2TOISolver	external/Box2d/Box2D/Dynamics/Contacts/b2TOISolver.cpp	/^b2TOISolver::~b2TOISolver()$/;"	f	class:b2TOISolver
~b2World	external/Box2d/Box2D/Dynamics/b2World.cpp	/^b2World::~b2World()$/;"	f	class:b2World
